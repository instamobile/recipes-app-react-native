{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\learning\\\\Group-Project\\\\src\\\\screens\\\\Search\\\\SearchScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { ListItem, SearchBar } from 'react-native-elements';\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName, getRecipesByRecipeName, getRecipesByCategoryName, getRecipesByIngredientName } from \"../../data/MockDataAPI\";\n\nvar SearchScreen = function (_React$Component) {\n  _inherits(SearchScreen, _React$Component);\n\n  var _super = _createSuper(SearchScreen);\n\n  function SearchScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SearchScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleSearch = function (text) {\n      var recipeArray1 = getRecipesByRecipeName(text);\n      var recipeArray2 = getRecipesByCategoryName(text);\n      var recipeArray3 = getRecipesByIngredientName(text);\n      var aux = recipeArray1.concat(recipeArray2);\n\n      var recipeArray = _toConsumableArray(new Set(aux));\n\n      if (text == '') {\n        _this.setState({\n          value: text,\n          data: []\n        });\n      } else {\n        _this.setState({\n          value: text,\n          data: recipeArray\n        });\n      }\n    };\n\n    _this.getValue = function () {\n      return _this.state.value;\n    };\n\n    _this.onPressRecipe = function (item) {\n      _this.props.navigation.navigate('Recipe', {\n        item: item\n      });\n    };\n\n    _this.renderRecipes = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressRecipe(item);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.photo,\n        source: {\n          uri: item.photo_url\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.category,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, getCategoryName(item.categoryId))));\n    };\n\n    _this.state = {\n      value: '',\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var navigation = this.props.navigation;\n      navigation.setParams({\n        handleSearch: this.handleSearch,\n        data: this.getValue\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 2,\n        data: this.state.data,\n        renderItem: this.renderRecipes,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.recipeId;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SearchScreen;\n}(React.Component);\n\nSearchScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  var _navigation$state$par = navigation.state.params,\n      params = _navigation$state$par === void 0 ? {} : _navigation$state$par;\n  return {\n    headerRight: React.createElement(MenuImage, {\n      onPress: function onPress() {\n        navigation.openDrawer();\n      },\n      __self: SearchScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }),\n    headerTitle: React.createElement(SearchBar, {\n      containerStyle: {\n        backgroundColor: 'transparent',\n        borderBottomColor: 'transparent',\n        borderTopColor: 'transparent',\n        flex: 1\n      },\n      inputContainerStyle: {\n        backgroundColor: '#EDEDED'\n      },\n      inputStyle: {\n        backgroundColor: '#EDEDED',\n        borderRadius: 10,\n        color: 'black'\n      },\n      searchIcond: true,\n      clearIcon: true,\n      round: true,\n      onChangeText: function onChangeText(text) {\n        return params.handleSearch(text);\n      },\n      placeholder: \"Search\",\n      value: params.data,\n      __self: SearchScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    })\n  };\n};\n\nexport { SearchScreen as default };","map":{"version":3,"sources":["C:/learning/Group-Project/src/screens/Search/SearchScreen.js"],"names":["React","styles","ListItem","SearchBar","MenuImage","getCategoryName","getRecipesByRecipeName","getRecipesByCategoryName","getRecipesByIngredientName","SearchScreen","props","handleSearch","text","recipeArray1","recipeArray2","recipeArray3","aux","concat","recipeArray","Set","setState","value","data","getValue","state","onPressRecipe","item","navigation","navigate","renderRecipes","container","photo","uri","photo_url","title","category","categoryId","setParams","recipeId","Component","navigationOptions","params","headerRight","openDrawer","headerTitle","backgroundColor","borderBottomColor","borderTopColor","flex","borderRadius","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  FlatList,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableHighlight\r\n} from 'react-native';\r\nimport styles from './styles';\r\nimport { ListItem, SearchBar } from 'react-native-elements';\r\nimport MenuImage from '../../components/MenuImage/MenuImage';\r\nimport {\r\n  getCategoryName,\r\n  getRecipesByRecipeName,\r\n  getRecipesByCategoryName,\r\n  getRecipesByIngredientName\r\n} from '../../data/MockDataAPI';\r\n\r\nexport default class SearchScreen extends React.Component {\r\n  static navigationOptions = ({ navigation }) => {\r\n    const { params = {} } = navigation.state;\r\n    return {\r\n      headerRight: (\r\n        <MenuImage\r\n          onPress={() => {\r\n            navigation.openDrawer();\r\n          }}\r\n        />\r\n      ),\r\n      headerTitle: (\r\n        <SearchBar\r\n          containerStyle={{\r\n            backgroundColor: 'transparent',\r\n            borderBottomColor: 'transparent',\r\n            borderTopColor: 'transparent',\r\n            flex: 1\r\n          }}\r\n          inputContainerStyle={{\r\n            backgroundColor: '#EDEDED'\r\n          }}\r\n          inputStyle={{\r\n            backgroundColor: '#EDEDED',\r\n            borderRadius: 10,\r\n            color: 'black'\r\n          }}\r\n          searchIcond\r\n          clearIcon\r\n          //lightTheme\r\n          round\r\n          onChangeText={text => params.handleSearch(text)}\r\n          //onClear={() => params.handleSearch('')}\r\n          placeholder=\"Search\"\r\n          value={params.data}\r\n        />\r\n      )\r\n    };\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      data: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { navigation } = this.props;\r\n    navigation.setParams({\r\n      handleSearch: this.handleSearch,\r\n      data: this.getValue\r\n    });\r\n  }\r\n\r\n  handleSearch = text => {\r\n    var recipeArray1 = getRecipesByRecipeName(text);\r\n    var recipeArray2 = getRecipesByCategoryName(text);\r\n    var recipeArray3 = getRecipesByIngredientName(text);\r\n    var aux = recipeArray1.concat(recipeArray2);\r\n    var recipeArray = [...new Set(aux)];\r\n    if (text == '') {\r\n      this.setState({\r\n        value: text,\r\n        data: []\r\n      });\r\n    } else {\r\n      this.setState({\r\n        value: text,\r\n        data: recipeArray\r\n      });\r\n    }\r\n  };\r\n\r\n  getValue = () => {\r\n    return this.state.value;\r\n  };\r\n\r\n  onPressRecipe = item => {\r\n    this.props.navigation.navigate('Recipe', { item });\r\n  };\r\n\r\n  renderRecipes = ({ item }) => (\r\n    <TouchableHighlight underlayColor='rgba(73,182,77,0.9)' onPress={() => this.onPressRecipe(item)}>\r\n      <View style={styles.container}>\r\n        <Image style={styles.photo} source={{ uri: item.photo_url }} />\r\n        <Text style={styles.title}>{item.title}</Text>\r\n        <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <FlatList\r\n          vertical\r\n          showsVerticalScrollIndicator={false}\r\n          numColumns={2}\r\n          data={this.state.data}\r\n          renderItem={this.renderRecipes}\r\n          keyExtractor={item => `${item.recipeId}`}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}