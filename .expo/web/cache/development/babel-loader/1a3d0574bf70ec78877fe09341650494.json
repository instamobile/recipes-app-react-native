{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\learning\\\\Group-Project\\\\node_modules\\\\react-native-gesture-handler\\\\GestureButtons.js\";\nvar _excluded = [\"rippleColor\"],\n    _excluded2 = [\"children\", \"style\"],\n    _excluded3 = [\"children\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport createNativeWrapper from \"./createNativeWrapper\";\nimport GestureHandlerButton from \"./GestureHandlerButton\";\nimport State from \"./State\";\nexport var RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false\n});\nexport var BaseButton = function (_React$Component) {\n  _inherits(BaseButton, _React$Component);\n\n  var _super = _createSuper(BaseButton);\n\n  function BaseButton(props) {\n    var _this;\n\n    _classCallCheck(this, BaseButton);\n\n    _this = _super.call(this, props);\n\n    _this._handleEvent = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var state = nativeEvent.state,\n          oldState = nativeEvent.oldState,\n          pointerInside = nativeEvent.pointerInside;\n      var active = pointerInside && state === State.ACTIVE;\n\n      if (active !== _this._lastActive && _this.props.onActiveStateChange) {\n        _this.props.onActiveStateChange(active);\n      }\n\n      if (oldState === State.ACTIVE && state !== State.CANCELLED && _this._lastActive && _this.props.onPress) {\n        _this.props.onPress(active);\n      }\n\n      _this._lastActive = active;\n    };\n\n    _this._onHandlerStateChange = function (e) {\n      _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(e);\n\n      _this._handleEvent(e);\n    };\n\n    _this._onGestureEvent = function (e) {\n      _this.props.onGestureEvent && _this.props.onGestureEvent(e);\n\n      _this._handleEvent(e);\n    };\n\n    _this._lastActive = false;\n    return _this;\n  }\n\n  _createClass(BaseButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          rippleColor = _this$props.rippleColor,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      return React.createElement(RawButton, _extends({\n        rippleColor: processColor(rippleColor)\n      }, rest, {\n        onGestureEvent: this._onGestureEvent,\n        onHandlerStateChange: this._onHandlerStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return BaseButton;\n}(React.Component);\nBaseButton.propTypes = _objectSpread(_objectSpread({}, RawButton.propTypes), {}, {\n  onPress: PropTypes.func,\n  onActiveStateChange: PropTypes.func\n});\nvar AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\nvar btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\nexport var RectButton = function (_React$Component2) {\n  _inherits(RectButton, _React$Component2);\n\n  var _super2 = _createSuper(RectButton);\n\n  function RectButton(props) {\n    var _this2;\n\n    _classCallCheck(this, RectButton);\n\n    _this2 = _super2.call(this, props);\n\n    _this2._onActiveStateChange = function (active) {\n      if (Platform.OS !== 'android') {\n        _this2._opacity.setValue(active ? _this2.props.activeOpacity : 0);\n      }\n\n      _this2.props.onActiveStateChange && _this2.props.onActiveStateChange(active);\n    };\n\n    _this2._opacity = new Animated.Value(0);\n    return _this2;\n  }\n\n  _createClass(RectButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          style = _this$props2.style,\n          rest = _objectWithoutProperties(_this$props2, _excluded2);\n\n      var resolvedStyle = StyleSheet.flatten(style != null ? style : {});\n      return React.createElement(BaseButton, _extends({}, rest, {\n        style: resolvedStyle,\n        onActiveStateChange: this._onActiveStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }\n      }), React.createElement(Animated.View, {\n        style: [btnStyles.underlay, {\n          opacity: this._opacity,\n          backgroundColor: this.props.underlayColor,\n          borderRadius: resolvedStyle.borderRadius,\n          borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n          borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n          borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n          borderBottomRightRadius: resolvedStyle.borderBottomRightRadius\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }), children);\n    }\n  }]);\n\n  return RectButton;\n}(React.Component);\nRectButton.propTypes = BaseButton.propTypes;\nRectButton.defaultProps = {\n  activeOpacity: 0.105,\n  underlayColor: 'black'\n};\nexport var BorderlessButton = function (_React$Component3) {\n  _inherits(BorderlessButton, _React$Component3);\n\n  var _super3 = _createSuper(BorderlessButton);\n\n  function BorderlessButton(props) {\n    var _this3;\n\n    _classCallCheck(this, BorderlessButton);\n\n    _this3 = _super3.call(this, props);\n\n    _this3._onActiveStateChange = function (active) {\n      if (Platform.OS !== 'android') {\n        _this3._opacity.setValue(active ? _this3.props.activeOpacity : 1);\n      }\n\n      _this3.props.onActiveStateChange && _this3.props.onActiveStateChange(active);\n    };\n\n    _this3._opacity = new Animated.Value(1);\n    return _this3;\n  }\n\n  _createClass(BorderlessButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          style = _this$props3.style,\n          rest = _objectWithoutProperties(_this$props3, _excluded3);\n\n      return React.createElement(AnimatedBaseButton, _extends({}, rest, {\n        onActiveStateChange: this._onActiveStateChange,\n        style: [style, Platform.OS === 'ios' && {\n          opacity: this._opacity\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }), children);\n    }\n  }]);\n\n  return BorderlessButton;\n}(React.Component);\nBorderlessButton.propTypes = _objectSpread(_objectSpread({}, BaseButton.propTypes), {}, {\n  borderless: PropTypes.bool\n});\nBorderlessButton.defaultProps = {\n  activeOpacity: 0.3,\n  borderless: true\n};\nexport { default as PureNativeButton } from \"./GestureHandlerButton\";","map":{"version":3,"sources":["C:/learning/Group-Project/node_modules/react-native-gesture-handler/GestureButtons.js"],"names":["PropTypes","React","createNativeWrapper","GestureHandlerButton","State","RawButton","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","props","_handleEvent","nativeEvent","state","oldState","pointerInside","active","ACTIVE","_lastActive","onActiveStateChange","CANCELLED","onPress","_onHandlerStateChange","e","onHandlerStateChange","_onGestureEvent","onGestureEvent","rippleColor","rest","processColor","Component","propTypes","func","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","left","right","bottom","top","RectButton","_onActiveStateChange","Platform","OS","_opacity","setValue","activeOpacity","Value","children","style","resolvedStyle","flatten","opacity","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","defaultProps","BorderlessButton","borderless","bool","default","PureNativeButton"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Animated, Platform, processColor, StyleSheet } from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport State from './State';\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\n/* Buttons */\n\nexport class BaseButton extends React.Component {\n  static propTypes = {\n    ...RawButton.propTypes,\n    onPress: PropTypes.func,\n    onActiveStateChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n\n  _handleEvent = ({ nativeEvent }) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this._lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this._lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first,\n  // then forward the event to listeners. However, here our handler\n  // is virtually only forwarding events to listeners, so we reverse the order\n  // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n  _onHandlerStateChange = e => {\n    this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n    this._handleEvent(e);\n  };\n\n  _onGestureEvent = e => {\n    this.props.onGestureEvent && this.props.onGestureEvent(e);\n    this._handleEvent(e);\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 0);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this._onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this._opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 1);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"]},"metadata":{},"sourceType":"module"}