{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Easing from \"./Easing\";\nimport AnimatedClock from \"./core/AnimatedClock\";\nimport AnimatedValue from \"./core/AnimatedValue\";\nimport AnimatedNode from \"./core/AnimatedNode\";\nimport AnimatedCode from \"./core/AnimatedCode\";\nimport * as base from \"./base\";\nimport * as derived from \"./derived\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport decay from \"./animations/decay\";\nimport timing from \"./animations/timing\";\nimport spring from \"./animations/spring\";\nimport Animation from \"./animations/Animation\";\nimport { addWhitelistedNativeProps, addWhitelistedUIProps } from \"./ConfigHelper\";\nimport backwardCompatibleAnimWrapper from \"./animations/backwardCompatibleAnimWrapper\";\nimport { Transition, Transitioning, createTransitioningComponent } from \"./Transitioning\";\nimport SpringUtils from \"./animations/SpringUtils\";\nimport useValue from \"./useValue\";\nvar decayWrapper = backwardCompatibleAnimWrapper(decay, Animation.decayDefaultState);\nvar timingWrapper = backwardCompatibleAnimWrapper(timing, Animation.timingDefaultState);\nvar springWrapper = backwardCompatibleAnimWrapper(spring, Animation.springDefaultState);\n\nvar Animated = _objectSpread(_objectSpread(_objectSpread({\n  View: createAnimatedComponent(View),\n  Text: createAnimatedComponent(Text),\n  Image: createAnimatedComponent(Image),\n  ScrollView: createAnimatedComponent(ScrollView),\n  Code: AnimatedCode,\n  createAnimatedComponent: createAnimatedComponent,\n  Clock: AnimatedClock,\n  Value: AnimatedValue,\n  Node: AnimatedNode\n}, base), derived), {}, {\n  decay: decayWrapper,\n  timing: timingWrapper,\n  spring: springWrapper,\n  SpringUtils: SpringUtils,\n  addWhitelistedNativeProps: addWhitelistedNativeProps,\n  addWhitelistedUIProps: addWhitelistedUIProps,\n  useValue: useValue\n});\n\nexport default Animated;\nexport * from \"./base\";\nexport * from \"./derived\";\nexport { Easing, Transitioning, Transition, createTransitioningComponent, AnimatedClock as Clock, AnimatedValue as Value, AnimatedNode as Node, decayWrapper as decay, timingWrapper as timing, springWrapper as spring, SpringUtils, useValue };","map":{"version":3,"sources":["Animated.js"],"names":["decayWrapper","backwardCompatibleAnimWrapper","Animation","timingWrapper","springWrapper","Animated","View","createAnimatedComponent","Text","Image","ScrollView","Code","Clock","Value","Node","AnimatedNode","decay","timing","spring","SpringUtils","addWhitelistedNativeProps","addWhitelistedUIProps","useValue","AnimatedClock","AnimatedValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA,MAAA;AACA,OAAA,aAAA;AACA,OAAA,aAAA;AACA,OAAA,YAAA;AACA,OAAA,YAAA;AACA,OAAO,KAAP,IAAA;AACA,OAAO,KAAP,OAAA;AACA,OAAA,uBAAA;AACA,OAAA,KAAA;AACA,OAAA,MAAA;AACA,OAAA,MAAA;AACA,OAAA,SAAA;AACA,SAAA,yBAAA,EAAA,qBAAA;AAIA,OAAA,6BAAA;AACA,SAAA,UAAA,EAAA,aAAA,EAAA,4BAAA;AAKA,OAAA,WAAA;AACA,OAAA,QAAA;AAEA,IAAMA,YAAY,GAAGC,6BAA6B,CAAA,KAAA,EAEhDC,SAAS,CAFX,iBAAkD,CAAlD;AAIA,IAAMC,aAAa,GAAGF,6BAA6B,CAAA,MAAA,EAEjDC,SAAS,CAFX,kBAAmD,CAAnD;AAIA,IAAME,aAAa,GAAGH,6BAA6B,CAAA,MAAA,EAEjDC,SAAS,CAFX,kBAAmD,CAAnD;;AAIA,IAAMG,QAAQ,GAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA;AAEZC,EAAAA,IAAI,EAAEC,uBAAuB,CAFjB,IAEiB,CAFjB;AAGZC,EAAAA,IAAI,EAAED,uBAAuB,CAHjB,IAGiB,CAHjB;AAIZE,EAAAA,KAAK,EAAEF,uBAAuB,CAJlB,KAIkB,CAJlB;AAKZG,EAAAA,UAAU,EAAEH,uBAAuB,CALvB,UAKuB,CALvB;AAMZI,EAAAA,IAAI,EANQ,YAAA;AAOZJ,EAAAA,uBAPY,EAOZA,uBAPY;AAUZK,EAAAA,KAAK,EAVO,aAAA;AAWZC,EAAAA,KAAK,EAXO,aAAA;AAYZC,EAAAA,IAAI,EAAEC;AAZM,CAAA,EAAA,IAAA,CAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA;AAmBZC,EAAAA,KAAK,EAnBO,YAAA;AAoBZC,EAAAA,MAAM,EApBM,aAAA;AAqBZC,EAAAA,MAAM,EArBM,aAAA;AAsBZC,EAAAA,WAtBY,EAsBZA,WAtBY;AAyBZC,EAAAA,yBAzBY,EAyBZA,yBAzBY;AA0BZC,EAAAA,qBA1BY,EA0BZA,qBA1BY;AA6BZC,EAAAA,QAAAA,EAAAA;AA7BY,CAAA,CAAd;;AAgCA,eAAA,QAAA;AAGA;AACA;AAEA,SAAA,MAAA,EAAA,aAAA,EAAA,UAAA,EAAA,4BAAA,EAMEC,aAAa,IANf,KAAA,EAOEC,aAAa,IAPf,KAAA,EAQET,YAAY,IARd,IAAA,EAUEf,YAAY,IAVd,KAAA,EAWEG,aAAa,IAXf,MAAA,EAYEC,aAAa,IAZf,MAAA,EAAA,WAAA,EAAA,QAAA","sourcesContent":["import { Image, ScrollView, Text, View } from 'react-native';\nimport Easing from './Easing';\nimport AnimatedClock from './core/AnimatedClock';\nimport AnimatedValue from './core/AnimatedValue';\nimport AnimatedNode from './core/AnimatedNode';\nimport AnimatedCode from './core/AnimatedCode';\nimport * as base from './base';\nimport * as derived from './derived';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport decay from './animations/decay';\nimport timing from './animations/timing';\nimport spring from './animations/spring';\nimport Animation from './animations/Animation';\nimport {\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n} from './ConfigHelper';\nimport backwardCompatibleAnimWrapper from './animations/backwardCompatibleAnimWrapper';\nimport {\n  Transition,\n  Transitioning,\n  createTransitioningComponent,\n} from './Transitioning';\nimport SpringUtils from './animations/SpringUtils';\nimport useValue from './useValue';\n\nconst decayWrapper = backwardCompatibleAnimWrapper(\n  decay,\n  Animation.decayDefaultState\n);\nconst timingWrapper = backwardCompatibleAnimWrapper(\n  timing,\n  Animation.timingDefaultState\n);\nconst springWrapper = backwardCompatibleAnimWrapper(\n  spring,\n  Animation.springDefaultState\n);\nconst Animated = {\n  // components\n  View: createAnimatedComponent(View),\n  Text: createAnimatedComponent(Text),\n  Image: createAnimatedComponent(Image),\n  ScrollView: createAnimatedComponent(ScrollView),\n  Code: AnimatedCode,\n  createAnimatedComponent,\n\n  // classes\n  Clock: AnimatedClock,\n  Value: AnimatedValue,\n  Node: AnimatedNode,\n\n  // operations\n  ...base,\n  ...derived,\n\n  // animations\n  decay: decayWrapper,\n  timing: timingWrapper,\n  spring: springWrapper,\n  SpringUtils,\n\n  // configuration\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n\n  // hooks\n  useValue,\n};\n\nexport default Animated;\n\n// operations\nexport * from './base';\nexport * from './derived';\n\nexport {\n  Easing,\n  Transitioning,\n  Transition,\n  createTransitioningComponent,\n  // classes\n  AnimatedClock as Clock,\n  AnimatedValue as Value,\n  AnimatedNode as Node,\n  // animations\n  decayWrapper as decay,\n  timingWrapper as timing,\n  springWrapper as spring,\n  SpringUtils,\n  // hooks\n  useValue,\n};\n"]},"metadata":{},"sourceType":"module"}