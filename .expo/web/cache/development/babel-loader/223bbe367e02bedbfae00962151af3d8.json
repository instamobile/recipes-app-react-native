{"ast":null,"code":"'use strict';\n\nimport NativeEventEmitter from \"../NativeEventEmitter\";\nimport NativeAnimatedModule from \"./NativeAnimatedModule\";\nimport invariant from 'fbjs/lib/invariant';\nvar __nativeAnimatedNodeTagCount = 1;\nvar __nativeAnimationIdCount = 1;\nvar nativeEventEmitter;\nvar queueConnections = false;\nvar queue = [];\nvar API = {\n  enableQueue: function enableQueue() {\n    queueConnections = true;\n  },\n  disableQueue: function disableQueue() {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    queueConnections = false;\n\n    for (var q = 0, l = queue.length; q < l; q++) {\n      var args = queue[q];\n      NativeAnimatedModule.connectAnimatedNodes(args[0], args[1]);\n    }\n\n    queue.length = 0;\n  },\n  createAnimatedNode: function createAnimatedNode(tag, config) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.createAnimatedNode(tag, config);\n  },\n  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.startListeningToAnimatedNodeValue(tag);\n  },\n  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.stopListeningToAnimatedNodeValue(tag);\n  },\n  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n\n    if (queueConnections) {\n      queue.push([parentTag, childTag]);\n      return;\n    }\n\n    NativeAnimatedModule.connectAnimatedNodes(parentTag, childTag);\n  },\n  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.disconnectAnimatedNodes(parentTag, childTag);\n  },\n  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.startAnimatingNode(animationId, nodeTag, config, endCallback);\n  },\n  stopAnimation: function stopAnimation(animationId) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.stopAnimation(animationId);\n  },\n  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.setAnimatedNodeValue(nodeTag, value);\n  },\n  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.setAnimatedNodeOffset(nodeTag, offset);\n  },\n  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.flattenAnimatedNodeOffset(nodeTag);\n  },\n  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.extractAnimatedNodeOffset(nodeTag);\n  },\n  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.connectAnimatedNodeToView(nodeTag, viewTag);\n  },\n  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.disconnectAnimatedNodeFromView(nodeTag, viewTag);\n  },\n  dropAnimatedNode: function dropAnimatedNode(tag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.dropAnimatedNode(tag);\n  },\n  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.addAnimatedEventToView(viewTag, eventName, eventMapping);\n  },\n  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag);\n  }\n};\nvar STYLES_WHITELIST = {\n  opacity: true,\n  transform: true,\n  borderRadius: true,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  elevation: true,\n  shadowOpacity: true,\n  shadowRadius: true,\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true\n};\nvar TRANSFORM_WHITELIST = {\n  translateX: true,\n  translateY: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n  rotateX: true,\n  rotateY: true,\n  perspective: true\n};\nvar SUPPORTED_INTERPOLATION_PARAMS = {\n  inputRange: true,\n  outputRange: true,\n  extrapolate: true,\n  extrapolateRight: true,\n  extrapolateLeft: true\n};\n\nfunction addWhitelistedStyleProp(prop) {\n  STYLES_WHITELIST[prop] = true;\n}\n\nfunction addWhitelistedTransformProp(prop) {\n  TRANSFORM_WHITELIST[prop] = true;\n}\n\nfunction addWhitelistedInterpolationParam(param) {\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n}\n\nfunction validateTransform(configs) {\n  configs.forEach(function (config) {\n    if (!TRANSFORM_WHITELIST.hasOwnProperty(config.property)) {\n      throw new Error(\"Property '\" + config.property + \"' is not supported by native animated module\");\n    }\n  });\n}\n\nfunction validateStyles(styles) {\n  for (var _key in styles) {\n    if (!STYLES_WHITELIST.hasOwnProperty(_key)) {\n      throw new Error(\"Style property '\" + _key + \"' is not supported by native animated module\");\n    }\n  }\n}\n\nfunction validateInterpolation(config) {\n  for (var _key2 in config) {\n    if (!SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(_key2)) {\n      throw new Error(\"Interpolation property '\" + _key2 + \"' is not supported by native animated module\");\n    }\n  }\n}\n\nfunction generateNewNodeTag() {\n  return __nativeAnimatedNodeTagCount++;\n}\n\nfunction generateNewAnimationId() {\n  return __nativeAnimationIdCount++;\n}\n\nfunction assertNativeAnimatedModule() {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\n\nfunction shouldUseNativeDriver(config) {\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    return false;\n  }\n\n  return config.useNativeDriver || false;\n}\n\nfunction transformDataType(value) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  if (/deg$/.test(value)) {\n    var degrees = parseFloat(value) || 0;\n    var radians = degrees * Math.PI / 180.0;\n    return radians;\n  } else {\n    return value;\n  }\n}\n\nvar NativeAnimatedHelper = {\n  API: API,\n  addWhitelistedStyleProp: addWhitelistedStyleProp,\n  addWhitelistedTransformProp: addWhitelistedTransformProp,\n  addWhitelistedInterpolationParam: addWhitelistedInterpolationParam,\n  validateStyles: validateStyles,\n  validateTransform: validateTransform,\n  validateInterpolation: validateInterpolation,\n  generateNewNodeTag: generateNewNodeTag,\n  generateNewAnimationId: generateNewAnimationId,\n  assertNativeAnimatedModule: assertNativeAnimatedModule,\n  shouldUseNativeDriver: shouldUseNativeDriver,\n  transformDataType: transformDataType,\n\n  get nativeEventEmitter() {\n    if (!nativeEventEmitter) {\n      nativeEventEmitter = new NativeEventEmitter(NativeAnimatedModule);\n    }\n\n    return nativeEventEmitter;\n  }\n\n};\nexport { API, addWhitelistedStyleProp, addWhitelistedTransformProp, addWhitelistedInterpolationParam, validateStyles, validateTransform, validateInterpolation, generateNewNodeTag, generateNewAnimationId, assertNativeAnimatedModule, shouldUseNativeDriver, transformDataType };\nexport default NativeAnimatedHelper;","map":{"version":3,"sources":["C:/learning/Group-Project/node_modules/react-native-web/dist/vendor/react-native/Animated/NativeAnimatedHelper.js"],"names":["NativeEventEmitter","NativeAnimatedModule","invariant","__nativeAnimatedNodeTagCount","__nativeAnimationIdCount","nativeEventEmitter","queueConnections","queue","API","enableQueue","disableQueue","q","l","length","args","connectAnimatedNodes","createAnimatedNode","tag","config","startListeningToAnimatedNodeValue","stopListeningToAnimatedNodeValue","parentTag","childTag","push","disconnectAnimatedNodes","startAnimatingNode","animationId","nodeTag","endCallback","stopAnimation","setAnimatedNodeValue","value","setAnimatedNodeOffset","offset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","connectAnimatedNodeToView","viewTag","disconnectAnimatedNodeFromView","dropAnimatedNode","addAnimatedEventToView","eventName","eventMapping","removeAnimatedEventFromView","animatedNodeTag","STYLES_WHITELIST","opacity","transform","borderRadius","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","elevation","shadowOpacity","shadowRadius","scaleX","scaleY","translateX","translateY","TRANSFORM_WHITELIST","scale","rotate","rotateX","rotateY","perspective","SUPPORTED_INTERPOLATION_PARAMS","inputRange","outputRange","extrapolate","extrapolateRight","extrapolateLeft","addWhitelistedStyleProp","prop","addWhitelistedTransformProp","addWhitelistedInterpolationParam","param","validateTransform","configs","forEach","hasOwnProperty","property","Error","validateStyles","styles","_key","validateInterpolation","_key2","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","shouldUseNativeDriver","useNativeDriver","transformDataType","test","degrees","parseFloat","radians","Math","PI","NativeAnimatedHelper"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeEventEmitter from '../NativeEventEmitter';\nimport NativeAnimatedModule from './NativeAnimatedModule';\nimport invariant from 'fbjs/lib/invariant';\nvar __nativeAnimatedNodeTagCount = 1;\n/* used for animated nodes */\n\nvar __nativeAnimationIdCount = 1;\n/* used for started animations */\n\nvar nativeEventEmitter;\nvar queueConnections = false;\nvar queue = [];\n/**\n * Simple wrappers around NativeAnimatedModule to provide flow and autocmplete support for\n * the native module methods\n */\n\nvar API = {\n  enableQueue: function enableQueue() {\n    queueConnections = true;\n  },\n  disableQueue: function disableQueue() {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    queueConnections = false;\n\n    for (var q = 0, l = queue.length; q < l; q++) {\n      var args = queue[q];\n      NativeAnimatedModule.connectAnimatedNodes(args[0], args[1]);\n    }\n\n    queue.length = 0;\n  },\n  createAnimatedNode: function createAnimatedNode(tag, config) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.createAnimatedNode(tag, config);\n  },\n  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.startListeningToAnimatedNodeValue(tag);\n  },\n  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.stopListeningToAnimatedNodeValue(tag);\n  },\n  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n\n    if (queueConnections) {\n      queue.push([parentTag, childTag]);\n      return;\n    }\n\n    NativeAnimatedModule.connectAnimatedNodes(parentTag, childTag);\n  },\n  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.disconnectAnimatedNodes(parentTag, childTag);\n  },\n  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.startAnimatingNode(animationId, nodeTag, config, endCallback);\n  },\n  stopAnimation: function stopAnimation(animationId) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.stopAnimation(animationId);\n  },\n  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.setAnimatedNodeValue(nodeTag, value);\n  },\n  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.setAnimatedNodeOffset(nodeTag, offset);\n  },\n  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.flattenAnimatedNodeOffset(nodeTag);\n  },\n  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.extractAnimatedNodeOffset(nodeTag);\n  },\n  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.connectAnimatedNodeToView(nodeTag, viewTag);\n  },\n  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.disconnectAnimatedNodeFromView(nodeTag, viewTag);\n  },\n  dropAnimatedNode: function dropAnimatedNode(tag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.dropAnimatedNode(tag);\n  },\n  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.addAnimatedEventToView(viewTag, eventName, eventMapping);\n  },\n  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag);\n  }\n};\n/**\n * Styles allowed by the native animated implementation.\n *\n * In general native animated implementation should support any numeric property that doesn't need\n * to be updated through the shadow view hierarchy (all non-layout properties).\n */\n\nvar STYLES_WHITELIST = {\n  opacity: true,\n  transform: true,\n  borderRadius: true,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  elevation: true,\n\n  /* ios styles */\n  shadowOpacity: true,\n  shadowRadius: true,\n\n  /* legacy android transform properties */\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true\n};\nvar TRANSFORM_WHITELIST = {\n  translateX: true,\n  translateY: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n  rotateX: true,\n  rotateY: true,\n  perspective: true\n};\nvar SUPPORTED_INTERPOLATION_PARAMS = {\n  inputRange: true,\n  outputRange: true,\n  extrapolate: true,\n  extrapolateRight: true,\n  extrapolateLeft: true\n};\n\nfunction addWhitelistedStyleProp(prop) {\n  STYLES_WHITELIST[prop] = true;\n}\n\nfunction addWhitelistedTransformProp(prop) {\n  TRANSFORM_WHITELIST[prop] = true;\n}\n\nfunction addWhitelistedInterpolationParam(param) {\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n}\n\nfunction validateTransform(configs) {\n  configs.forEach(function (config) {\n    if (!TRANSFORM_WHITELIST.hasOwnProperty(config.property)) {\n      throw new Error(\"Property '\" + config.property + \"' is not supported by native animated module\");\n    }\n  });\n}\n\nfunction validateStyles(styles) {\n  for (var _key in styles) {\n    if (!STYLES_WHITELIST.hasOwnProperty(_key)) {\n      throw new Error(\"Style property '\" + _key + \"' is not supported by native animated module\");\n    }\n  }\n}\n\nfunction validateInterpolation(config) {\n  for (var _key2 in config) {\n    if (!SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(_key2)) {\n      throw new Error(\"Interpolation property '\" + _key2 + \"' is not supported by native animated module\");\n    }\n  }\n}\n\nfunction generateNewNodeTag() {\n  return __nativeAnimatedNodeTagCount++;\n}\n\nfunction generateNewAnimationId() {\n  return __nativeAnimationIdCount++;\n}\n\nfunction assertNativeAnimatedModule() {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\n\nfunction shouldUseNativeDriver(config) {\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    return false;\n  }\n\n  return config.useNativeDriver || false;\n}\n\nfunction transformDataType(value) {\n  // Change the string type to number type so we can reuse the same logic in\n  // iOS and Android platform\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  if (/deg$/.test(value)) {\n    var degrees = parseFloat(value) || 0;\n    var radians = degrees * Math.PI / 180.0;\n    return radians;\n  } else {\n    return value;\n  }\n}\n\nvar NativeAnimatedHelper = {\n  API: API,\n  addWhitelistedStyleProp: addWhitelistedStyleProp,\n  addWhitelistedTransformProp: addWhitelistedTransformProp,\n  addWhitelistedInterpolationParam: addWhitelistedInterpolationParam,\n  validateStyles: validateStyles,\n  validateTransform: validateTransform,\n  validateInterpolation: validateInterpolation,\n  generateNewNodeTag: generateNewNodeTag,\n  generateNewAnimationId: generateNewAnimationId,\n  assertNativeAnimatedModule: assertNativeAnimatedModule,\n  shouldUseNativeDriver: shouldUseNativeDriver,\n  transformDataType: transformDataType,\n\n  get nativeEventEmitter() {\n    if (!nativeEventEmitter) {\n      nativeEventEmitter = new NativeEventEmitter(NativeAnimatedModule);\n    }\n\n    return nativeEventEmitter;\n  }\n\n};\nexport { API, addWhitelistedStyleProp, addWhitelistedTransformProp, addWhitelistedInterpolationParam, validateStyles, validateTransform, validateInterpolation, generateNewNodeTag, generateNewAnimationId, assertNativeAnimatedModule, shouldUseNativeDriver, transformDataType };\nexport default NativeAnimatedHelper;"]},"metadata":{},"sourceType":"module"}