{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"containerStyle\", \"textStyle\", \"badgeStyle\", \"onPress\", \"Component\", \"value\", \"theme\", \"status\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\learning\\\\Group-Project\\\\node_modules\\\\react-native-elements\\\\src\\\\badge\\\\Badge.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ViewPropTypes, withTheme } from \"../config\";\nimport { renderNode } from \"../helpers\";\n\nvar Badge = function Badge(props) {\n  var containerStyle = props.containerStyle,\n      textStyle = props.textStyle,\n      badgeStyle = props.badgeStyle,\n      onPress = props.onPress,\n      _props$Component = props.Component,\n      Component = _props$Component === void 0 ? onPress ? TouchableOpacity : View : _props$Component,\n      value = props.value,\n      theme = props.theme,\n      status = props.status,\n      attributes = _objectWithoutProperties(props, _excluded);\n\n  var element = renderNode(Text, value, {\n    style: StyleSheet.flatten([styles.text, textStyle && textStyle])\n  });\n  return React.createElement(View, {\n    style: StyleSheet.flatten([containerStyle && containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Component, _extends({}, attributes, {\n    style: StyleSheet.flatten([styles.badge(theme, status), !element && styles.miniBadge, badgeStyle && badgeStyle]),\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), element));\n};\n\nBadge.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  badgeStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  value: PropTypes.node,\n  onPress: PropTypes.func,\n  Component: PropTypes.elementType,\n  theme: PropTypes.object,\n  status: PropTypes.oneOf(['primary', 'success', 'warning', 'error'])\n};\nBadge.defaultProps = {\n  status: 'primary'\n};\nvar size = 18;\nvar miniSize = 8;\nvar styles = {\n  badge: function badge(theme, status) {\n    return {\n      alignSelf: 'center',\n      minWidth: size,\n      height: size,\n      borderRadius: size / 2,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: theme.colors[status],\n      borderWidth: StyleSheet.hairlineWidth,\n      borderColor: '#fff'\n    };\n  },\n  miniBadge: {\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    minWidth: miniSize,\n    height: miniSize,\n    borderRadius: miniSize / 2\n  },\n  text: {\n    fontSize: 12,\n    color: 'white',\n    paddingHorizontal: 4\n  }\n};\nexport { Badge };\nexport default withTheme(Badge, 'Badge');","map":{"version":3,"sources":["C:/learning/Group-Project/node_modules/react-native-elements/src/badge/Badge.js"],"names":["React","PropTypes","ViewPropTypes","withTheme","renderNode","Badge","props","containerStyle","textStyle","badgeStyle","onPress","Component","TouchableOpacity","View","value","theme","status","attributes","element","Text","style","StyleSheet","flatten","styles","text","badge","miniBadge","propTypes","node","func","elementType","object","oneOf","defaultProps","size","miniSize","alignSelf","minWidth","height","borderRadius","alignItems","justifyContent","backgroundColor","colors","borderWidth","hairlineWidth","borderColor","paddingHorizontal","paddingVertical","fontSize","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\nimport { renderNode } from '../helpers';\n\nconst Badge = props => {\n  const {\n    containerStyle,\n    textStyle,\n    badgeStyle,\n    onPress,\n    Component = onPress ? TouchableOpacity : View,\n    value,\n    theme,\n    status,\n    ...attributes\n  } = props;\n\n  const element = renderNode(Text, value, {\n    style: StyleSheet.flatten([styles.text, textStyle && textStyle]),\n  });\n\n  return (\n    <View style={StyleSheet.flatten([containerStyle && containerStyle])}>\n      <Component\n        {...attributes}\n        style={StyleSheet.flatten([\n          styles.badge(theme, status),\n          !element && styles.miniBadge,\n          badgeStyle && badgeStyle,\n        ])}\n        onPress={onPress}\n      >\n        {element}\n      </Component>\n    </View>\n  );\n};\n\nBadge.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  badgeStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  value: PropTypes.node,\n  onPress: PropTypes.func,\n  Component: PropTypes.elementType,\n  theme: PropTypes.object,\n  status: PropTypes.oneOf(['primary', 'success', 'warning', 'error']),\n};\n\nBadge.defaultProps = {\n  status: 'primary',\n};\n\nconst size = 18;\nconst miniSize = 8;\n\nconst styles = {\n  badge: (theme, status) => ({\n    alignSelf: 'center',\n    minWidth: size,\n    height: size,\n    borderRadius: size / 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors[status],\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#fff',\n  }),\n  miniBadge: {\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    minWidth: miniSize,\n    height: miniSize,\n    borderRadius: miniSize / 2,\n  },\n  text: {\n    fontSize: 12,\n    color: 'white',\n    paddingHorizontal: 4,\n  },\n};\n\nexport { Badge };\nexport default withTheme(Badge, 'Badge');\n"]},"metadata":{},"sourceType":"module"}