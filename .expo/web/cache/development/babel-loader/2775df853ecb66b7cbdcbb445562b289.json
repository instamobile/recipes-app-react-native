{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\learning\\\\Group-Project\\\\node_modules\\\\react-native-ratings\\\\src\\\\SwipeRating.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport times from 'lodash/times';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\n\nvar STAR_IMAGE = require(\"./images/star.png\");\n\nvar HEART_IMAGE = require(\"./images/heart.png\");\n\nvar ROCKET_IMAGE = require(\"./images/rocket.png\");\n\nvar BELL_IMAGE = require(\"./images/bell.png\");\n\nvar TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nvar SwipeRating = function (_Component) {\n  _inherits(SwipeRating, _Component);\n\n  var _super = _createSuper(SwipeRating);\n\n  function SwipeRating(props) {\n    var _this;\n\n    _classCallCheck(this, SwipeRating);\n\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        onStartRating = _this$props.onStartRating,\n        onFinishRating = _this$props.onFinishRating,\n        fractions = _this$props.fractions;\n    var position = new Animated.ValueXY();\n    var panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant() {\n        if (typeof onStartRating === 'function') {\n          onStartRating();\n        }\n      },\n      onPanResponderMove: function onPanResponderMove(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        newPosition.setValue({\n          x: gesture.dx,\n          y: 0\n        });\n\n        _this.setState({\n          position: newPosition,\n          value: gesture.dx\n        });\n      },\n      onPanResponderRelease: function onPanResponderRelease(event) {\n        var rating = _this.getCurrentRating(_this.state.value);\n\n        if (rating >= _this.props.minValue) {\n          if (!fractions) {\n            _this.setCurrentRating(rating);\n          }\n\n          onFinishRating(rating);\n        }\n      }\n    });\n    _this.state = {\n      panResponder: panResponder,\n      position: position,\n      display: false\n    };\n    return _this;\n  }\n\n  _createClass(SwipeRating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _STAR_IMAGE, _HEART_IMAGE, _ROCKET_IMAGE, _BELL_IMAGE;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(require(\"./images/star.png\"));\n\n            case 3:\n              _STAR_IMAGE = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(require(\"./images/heart.png\"));\n\n            case 6:\n              _HEART_IMAGE = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(require(\"./images/rocket.png\"));\n\n            case 9:\n              _ROCKET_IMAGE = _context.sent;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(require(\"./images/bell.png\"));\n\n            case 12:\n              _BELL_IMAGE = _context.sent;\n              this.setState({\n                display: true\n              });\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 19:\n              this.setCurrentRating(this.props.startingValue);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 16]], Promise);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.startingValue !== prevProps.startingValue) {\n        this.setCurrentRating(this.props.startingValue);\n      }\n    }\n  }, {\n    key: \"getPrimaryViewStyle\",\n    value: function getPrimaryViewStyle() {\n      var position = this.state.position;\n      var _this$props2 = this.props,\n          imageSize = _this$props2.imageSize,\n          ratingCount = _this$props2.ratingCount,\n          type = _this$props2.type;\n      var color = TYPES[type].color;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: color,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"getSecondaryViewStyle\",\n    value: function getSecondaryViewStyle() {\n      var position = this.state.position;\n      var _this$props3 = this.props,\n          imageSize = _this$props3.imageSize,\n          ratingCount = _this$props3.ratingCount,\n          type = _this$props3.type;\n      var backgroundColor = TYPES[type].backgroundColor;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: backgroundColor,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"renderRatings\",\n    value: function renderRatings() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          imageSize = _this$props4.imageSize,\n          ratingCount = _this$props4.ratingCount,\n          type = _this$props4.type,\n          tintColor = _this$props4.tintColor;\n      var source = TYPES[type].source;\n      return times(ratingCount, function (index) {\n        return React.createElement(View, {\n          key: index,\n          style: styles.starContainer,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 7\n          }\n        }, React.createElement(Image, {\n          source: source,\n          style: {\n            width: imageSize,\n            height: imageSize,\n            tintColor: tintColor\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 9\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"getCurrentRating\",\n    value: function getCurrentRating(value) {\n      var _this$props5 = this.props,\n          fractions = _this$props5.fractions,\n          imageSize = _this$props5.imageSize,\n          ratingCount = _this$props5.ratingCount;\n      var startingValue = ratingCount / 2;\n      var currentRating = this.props.minValue ? this.props.minValue : 0;\n\n      if (value > ratingCount * imageSize / 2) {\n        currentRating = ratingCount;\n      } else if (value < -ratingCount * imageSize / 2) {\n        currentRating = this.props.minValue ? this.props.minValue : 0;\n      } else if (value <= imageSize || value > imageSize) {\n        currentRating = startingValue + value / imageSize;\n        currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n      } else {\n        currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n      }\n\n      return currentRating;\n    }\n  }, {\n    key: \"setCurrentRating\",\n    value: function setCurrentRating(rating) {\n      var _this$props6 = this.props,\n          imageSize = _this$props6.imageSize,\n          ratingCount = _this$props6.ratingCount;\n      var initialRating = ratingCount / 2;\n      var value = null;\n\n      if (rating > ratingCount) {\n        value = ratingCount * imageSize / 2;\n      } else if (rating < 0) {\n        value = -ratingCount * imageSize / 2;\n      } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n        value = (rating - initialRating) * imageSize;\n      } else {\n        value = 0;\n      }\n\n      var newPosition = new Animated.ValueXY();\n      newPosition.setValue({\n        x: value,\n        y: 0\n      });\n      this.setState({\n        position: newPosition,\n        value: value\n      });\n    }\n  }, {\n    key: \"displayCurrentRating\",\n    value: function displayCurrentRating() {\n      var _this$props7 = this.props,\n          ratingCount = _this$props7.ratingCount,\n          type = _this$props7.type,\n          readonly = _this$props7.readonly,\n          ratingTextColor = _this$props7.ratingTextColor;\n      var color = ratingTextColor || TYPES[type].color;\n      return React.createElement(View, {\n        style: styles.showRatingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.ratingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.ratingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }\n      }, \"Rating:\", ' '), React.createElement(Text, {\n        style: [styles.currentRatingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      }, this.getCurrentRating(this.state.value)), React.createElement(Text, {\n        style: [styles.maxRatingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      }, \"/\", ratingCount)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }\n      }, readonly && React.createElement(Text, {\n        style: [styles.readonlyLabel, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 28\n        }\n      }, \"(readonly)\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          readonly = _this$props8.readonly,\n          type = _this$props8.type,\n          ratingImage = _this$props8.ratingImage,\n          ratingColor = _this$props8.ratingColor,\n          ratingBackgroundColor = _this$props8.ratingBackgroundColor,\n          style = _this$props8.style,\n          showRating = _this$props8.showRating;\n\n      if (type === 'custom') {\n        var custom = {\n          source: ratingImage,\n          color: ratingColor,\n          backgroundColor: ratingBackgroundColor\n        };\n        TYPES.custom = custom;\n      }\n\n      return this.state.display ? React.createElement(View, {\n        pointerEvents: readonly ? 'none' : 'auto',\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 7\n        }\n      }, showRating && this.displayCurrentRating(), React.createElement(View, _extends({\n        style: styles.starsWrapper\n      }, this.state.panResponder.panHandlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.starsInsideWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: this.getPrimaryViewStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }\n      }), React.createElement(Animated.View, {\n        style: this.getSecondaryViewStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      })), this.renderRatings())) : null;\n    }\n  }]);\n\n  return SwipeRating;\n}(Component);\n\nSwipeRating.defaultProps = {\n  type: 'star',\n  ratingImage: require(\"./images/star.png\"),\n  ratingColor: '#f1c40f',\n  ratingBackgroundColor: 'white',\n  ratingCount: 5,\n  imageSize: 40,\n  onFinishRating: function onFinishRating() {\n    return console.log('Attach a onFinishRating function here.');\n  },\n  minValue: 0\n};\nexport { SwipeRating as default };\nvar styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nvar fractionsType = function fractionsType(props, propName, componentName) {\n  if (props[propName]) {\n    var value = props[propName];\n\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20 ? null : new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be between 0 and 20\");\n    }\n\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a number\");\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: Image.propTypes.source,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: ViewPropTypes.style,\n  readonly: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};","map":{"version":3,"sources":["C:/learning/Group-Project/node_modules/react-native-ratings/src/SwipeRating.js"],"names":["times","React","Component","PropTypes","ViewPropTypes","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","SwipeRating","props","onStartRating","onFinishRating","fractions","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","event","gesture","newPosition","setValue","x","dx","y","setState","value","onPanResponderRelease","rating","getCurrentRating","state","minValue","setCurrentRating","display","console","log","startingValue","prevProps","imageSize","ratingCount","type","width","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","height","tintColor","index","styles","starContainer","currentRating","Math","ceil","toFixed","initialRating","readonly","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","ratingImage","ratingColor","ratingBackgroundColor","style","showRating","custom","displayCurrentRating","starsWrapper","panHandlers","starsInsideWrapper","getPrimaryViewStyle","getSecondaryViewStyle","renderRatings","defaultProps","StyleSheet","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS","fractionsType","propName","componentName","Error","propTypes","string","Image","number","func","bool"],"mappings":"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","sourcesContent":["import times from 'lodash/times';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { \n  View, Text, Animated, PanResponder, Image, \n  StyleSheet, Platform, ViewPropTypes\n} from 'react-native';\n\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require('./images/star.png');\nconst HEART_IMAGE = require('./images/heart.png');\nconst ROCKET_IMAGE = require('./images/rocket.png');\nconst BELL_IMAGE = require('./images/bell.png');\n\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nexport default class SwipeRating extends Component {\n  static defaultProps = {\n    type: 'star',\n    ratingImage: require('./images/star.png'),\n    ratingColor: '#f1c40f',\n    ratingBackgroundColor: 'white',\n    ratingCount: 5,\n    imageSize: 40,\n    onFinishRating: () => console.log('Attach a onFinishRating function here.'),\n    minValue: 0\n  };\n\n  constructor(props) {\n    super(props);\n    const { onStartRating, onFinishRating, fractions } = this.props;\n    const position = new Animated.ValueXY();\n\n    const panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        if (typeof onStartRating === 'function') {\n          onStartRating();\n        }\n      },\n      onPanResponderMove: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: gesture.dx, y: 0 });\n        this.setState({ position: newPosition, value: gesture.dx });\n      },\n      onPanResponderRelease: event => {\n        const rating = this.getCurrentRating(this.state.value);\n        if (rating >= this.props.minValue) {\n          if (!fractions) {\n            // 'round up' to the nearest rating image\n            this.setCurrentRating(rating);\n          }\n          onFinishRating(rating);\n        }\n      }\n    });\n\n    this.state = { panResponder, position, display: false };\n  }\n\n  async componentDidMount() {\n    try {\n      const STAR_IMAGE = await require('./images/star.png');\n      const HEART_IMAGE = await require('./images/heart.png');\n      const ROCKET_IMAGE = await require('./images/rocket.png');\n      const BELL_IMAGE = await require('./images/bell.png');\n\n      this.setState({ display: true })\n    } catch(err) {\n      console.log(err)\n    }\n\n    this.setCurrentRating(this.props.startingValue);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.startingValue !== prevProps.startingValue) {\n      this.setCurrentRating(this.props.startingValue);\n    }\n  }\n\n  getPrimaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const color = TYPES[type].color;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, (ratingCount * imageSize) / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  getSecondaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const backgroundColor = TYPES[type].backgroundColor;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, (ratingCount * imageSize) / 2, 0],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  renderRatings() {\n    const { imageSize, ratingCount, type, tintColor } = this.props;\n    const source = TYPES[type].source;\n\n    return times(ratingCount, index => (\n      <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }} />\n      </View>\n    ));\n  }\n\n  getCurrentRating(value) {\n    // const { value } = this.state;\n    const { fractions, imageSize, ratingCount } = this.props;\n\n    const startingValue = ratingCount / 2;\n    let currentRating = (this.props.minValue) ? this.props.minValue : 0;\n\n    if (value > (ratingCount * imageSize) / 2) {\n      currentRating = ratingCount;\n    } else if (value < (-ratingCount * imageSize) / 2) {\n      currentRating = (this.props.minValue) ? this.props.minValue : 0;\n    } else if (value <= imageSize || value > imageSize) {\n      currentRating = startingValue + value / imageSize;\n      currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n    } else {\n      currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n    }\n\n    return currentRating;\n  }\n\n  setCurrentRating(rating) {\n    const { imageSize, ratingCount } = this.props;\n\n    // `initialRating` corresponds to `startingValue` in the getter. Naming it\n    // differently here avoids confusion with `value` below.\n    const initialRating = ratingCount / 2;\n    let value = null;\n\n    if (rating > ratingCount) {\n      value = (ratingCount * imageSize) / 2;\n    } else if (rating < 0) {\n      value = (-ratingCount * imageSize) / 2;\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n      value = (rating - initialRating) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    const newPosition = new Animated.ValueXY();\n    newPosition.setValue({ x: value, y: 0 });\n    this.setState({ position: newPosition, value });\n  }\n\n  displayCurrentRating() {\n    const { ratingCount, type, readonly, ratingTextColor } = this.props;\n    const color = ratingTextColor || TYPES[type].color;\n\n    return (\n      <View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating:{' '}</Text>\n          <Text style={[styles.currentRatingText, { color }]}>{this.getCurrentRating(this.state.value)}</Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>{readonly && <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}</View>\n      </View>\n    );\n  }\n\n  render() {\n    const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n\n    if (type === 'custom') {\n      let custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor\n      };\n      TYPES.custom = custom;\n    }\n\n    return (\n      this.state.display ?\n      <View pointerEvents={readonly ? 'none' : 'auto'} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n          <View style={styles.starsInsideWrapper}>\n            <Animated.View style={this.getPrimaryViewStyle()} />\n            <Animated.View style={this.getSecondaryViewStyle()} />\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n      null\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nconst fractionsType = (props, propName, componentName) => {\n  if (props[propName]) {\n    const value = props[propName];\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20\n        ? null\n        : new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n    }\n\n    return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: Image.propTypes.source,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: ViewPropTypes.style,\n  readonly: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};\n"]},"metadata":{},"sourceType":"module"}