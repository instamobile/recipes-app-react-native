{"ast":null,"code":"import PropTypes from 'prop-types';\nvar GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object]))]),\n  simultaneousHandlers: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object]))]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    left: PropTypes.number,\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    vertical: PropTypes.number,\n    horizontal: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number\n  })]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func\n};\nexport default GestureHandlerPropTypes;","map":{"version":3,"sources":["C:/learning/Group-Project/node_modules/react-native-gesture-handler/GestureHandlerPropTypes.js"],"names":["PropTypes","GestureHandlerPropTypes","id","string","minPointers","number","enabled","bool","waitFor","oneOfType","object","arrayOf","simultaneousHandlers","shouldCancelWhenOutside","hitSlop","shape","left","top","right","bottom","vertical","horizontal","width","height","onGestureEvent","func","onHandlerStateChange","onBegan","onFailed","onCancelled","onActivated","onEnded"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAGA,IAAMC,uBAAuB,GAAG;AAC9BC,EAAAA,EAAE,EAAEF,SAAS,CAACG,MADgB;AAE9BC,EAAAA,WAAW,EAAEJ,SAAS,CAACK,MAFO;AAG9BC,EAAAA,OAAO,EAAEN,SAAS,CAACO,IAHW;AAI9BC,EAAAA,OAAO,EAAER,SAAS,CAACS,SAAV,CAAoB,CAC3BT,SAAS,CAACG,MADiB,EAE3BH,SAAS,CAACU,MAFiB,EAG3BV,SAAS,CAACW,OAAV,CACEX,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACG,MAAX,EAAmBH,SAAS,CAACU,MAA7B,CAApB,CADF,CAH2B,CAApB,CAJqB;AAW9BE,EAAAA,oBAAoB,EAAEZ,SAAS,CAACS,SAAV,CAAoB,CACxCT,SAAS,CAACG,MAD8B,EAExCH,SAAS,CAACU,MAF8B,EAGxCV,SAAS,CAACW,OAAV,CACEX,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACG,MAAX,EAAmBH,SAAS,CAACU,MAA7B,CAApB,CADF,CAHwC,CAApB,CAXQ;AAkB9BG,EAAAA,uBAAuB,EAAEb,SAAS,CAACO,IAlBL;AAmB9BO,EAAAA,OAAO,EAAEd,SAAS,CAACS,SAAV,CAAoB,CAC3BT,SAAS,CAACK,MADiB,EAE3BL,SAAS,CAACe,KAAV,CAAgB;AACdC,IAAAA,IAAI,EAAEhB,SAAS,CAACK,MADF;AAEdY,IAAAA,GAAG,EAAEjB,SAAS,CAACK,MAFD;AAGda,IAAAA,KAAK,EAAElB,SAAS,CAACK,MAHH;AAIdc,IAAAA,MAAM,EAAEnB,SAAS,CAACK,MAJJ;AAKde,IAAAA,QAAQ,EAAEpB,SAAS,CAACK,MALN;AAMdgB,IAAAA,UAAU,EAAErB,SAAS,CAACK,MANR;AAOdiB,IAAAA,KAAK,EAAEtB,SAAS,CAACK,MAPH;AAQdkB,IAAAA,MAAM,EAAEvB,SAAS,CAACK;AARJ,GAAhB,CAF2B,CAApB,CAnBqB;AAgC9BmB,EAAAA,cAAc,EAAExB,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACyB,IAAX,EAAiBzB,SAAS,CAACU,MAA3B,CAApB,CAhCc;AAiC9BgB,EAAAA,oBAAoB,EAAE1B,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACyB,IAAX,EAAiBzB,SAAS,CAACU,MAA3B,CAApB,CAjCQ;AAkC9BiB,EAAAA,OAAO,EAAE3B,SAAS,CAACyB,IAlCW;AAmC9BG,EAAAA,QAAQ,EAAE5B,SAAS,CAACyB,IAnCU;AAoC9BI,EAAAA,WAAW,EAAE7B,SAAS,CAACyB,IApCO;AAqC9BK,EAAAA,WAAW,EAAE9B,SAAS,CAACyB,IArCO;AAsC9BM,EAAAA,OAAO,EAAE/B,SAAS,CAACyB;AAtCW,CAAhC;AAyCA,eAAexB,uBAAf","sourcesContent":["import PropTypes from 'prop-types';\n\n// If changed, add changes to NATIVE_WRAPPER_PROPS_FILTER as well\nconst GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  simultaneousHandlers: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func,\n};\n\nexport default GestureHandlerPropTypes;\n"]},"metadata":{},"sourceType":"module"}