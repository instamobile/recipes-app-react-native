{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\n\nvar NavigationEventManager = function (_React$Component) {\n  _inherits(NavigationEventManager, _React$Component);\n\n  var _super = _createSuper(NavigationEventManager);\n\n  function NavigationEventManager() {\n    var _this;\n\n    _classCallCheck(this, NavigationEventManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_actionSubscription\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_willFocusSubscription\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_willBlurSubscription\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_didFocusSubscription\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_didBlurSubscription\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_refocusSubscription\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastWillBlurKey\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastWillFocusKey\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastDidBlurKey\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastDidFocusKey\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleAction\", function (_ref) {\n      var state = _ref.state,\n          lastState = _ref.lastState,\n          action = _ref.action,\n          type = _ref.type,\n          context = _ref.context;\n\n      var _lastState$routes;\n\n      var _this$props = _this.props,\n          navigation = _this$props.navigation,\n          onEvent = _this$props.onEvent;\n\n      if (!navigation.isFocused()) {\n        return;\n      }\n\n      var previous = lastState ? (_lastState$routes = lastState.routes) === null || _lastState$routes === void 0 ? void 0 : _lastState$routes[lastState.index] : undefined;\n      var current = state.routes[state.index];\n      var payload = {\n        context: \"\".concat(current.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n        state: current,\n        lastState: previous,\n        action: action,\n        type: type\n      };\n\n      if ((previous === null || previous === void 0 ? void 0 : previous.key) !== current.key) {\n        _this._emitWillFocus(current.key, payload);\n\n        if (previous === null || previous === void 0 ? void 0 : previous.key) {\n          _this._emitWillBlur(previous.key, payload);\n        }\n      }\n\n      if ((lastState === null || lastState === void 0 ? void 0 : lastState.isTransitioning) !== state.isTransitioning && state.isTransitioning === false) {\n        if (_this._lastWillBlurKey) {\n          _this._emitDidBlur(_this._lastWillBlurKey, payload);\n        }\n\n        if (_this._lastWillFocusKey) {\n          _this._emitDidFocus(_this._lastWillFocusKey, payload);\n        }\n      }\n\n      onEvent(current.key, 'action', payload);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleWillFocus\", function (_ref2) {\n      var lastState = _ref2.lastState,\n          action = _ref2.action,\n          context = _ref2.context,\n          type = _ref2.type;\n\n      var _lastState$routes2;\n\n      var navigation = _this.props.navigation;\n      var route = navigation.state.routes[navigation.state.index];\n\n      _this._emitWillFocus(route.key, {\n        context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n        state: route,\n        lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes2 = lastState.routes) === null || _lastState$routes2 === void 0 ? void 0 : _lastState$routes2.find(function (r) {\n          return r.key === route.key;\n        }),\n        action: action,\n        type: type\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleWillBlur\", function (_ref3) {\n      var lastState = _ref3.lastState,\n          action = _ref3.action,\n          context = _ref3.context,\n          type = _ref3.type;\n\n      var _lastState$routes3;\n\n      var navigation = _this.props.navigation;\n      var route = navigation.state.routes[navigation.state.index];\n\n      _this._emitWillBlur(route.key, {\n        context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n        state: route,\n        lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes3 = lastState.routes) === null || _lastState$routes3 === void 0 ? void 0 : _lastState$routes3.find(function (r) {\n          return r.key === route.key;\n        }),\n        action: action,\n        type: type\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleDidFocus\", function (_ref4) {\n      var lastState = _ref4.lastState,\n          action = _ref4.action,\n          context = _ref4.context,\n          type = _ref4.type;\n      var navigation = _this.props.navigation;\n\n      if (_this._lastWillFocusKey) {\n        var route = navigation.state.routes.find(function (r) {\n          return r.key === _this._lastWillFocusKey;\n        });\n\n        if (route) {\n          var _lastState$routes4;\n\n          _this._emitDidFocus(route.key, {\n            context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n            state: route,\n            lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes4 = lastState.routes) === null || _lastState$routes4 === void 0 ? void 0 : _lastState$routes4.find(function (r) {\n              return r.key === route.key;\n            }),\n            action: action,\n            type: type\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleDidBlur\", function (_ref5) {\n      var lastState = _ref5.lastState,\n          action = _ref5.action,\n          context = _ref5.context,\n          type = _ref5.type;\n      var navigation = _this.props.navigation;\n\n      if (_this._lastWillBlurKey) {\n        var route = navigation.state.routes.find(function (r) {\n          return r.key === _this._lastWillBlurKey;\n        });\n\n        if (route) {\n          var _lastState$routes5;\n\n          _this._emitDidBlur(route.key, {\n            context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n            state: route,\n            lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes5 = lastState.routes) === null || _lastState$routes5 === void 0 ? void 0 : _lastState$routes5.find(function (r) {\n              return r.key === route.key;\n            }),\n            action: action,\n            type: type\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleRefocus\", function () {\n      var _this$props2 = _this.props,\n          onEvent = _this$props2.onEvent,\n          navigation = _this$props2.navigation;\n      var route = navigation.state.routes[navigation.state.index];\n      onEvent(route.key, 'refocus');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_emitWillFocus\", function (target, payload) {\n      if (_this._lastWillBlurKey === target) {\n        _this._lastWillBlurKey = undefined;\n      }\n\n      if (_this._lastWillFocusKey === target) {\n        return;\n      }\n\n      _this._lastDidFocusKey = undefined;\n      _this._lastWillFocusKey = target;\n      var _this$props3 = _this.props,\n          navigation = _this$props3.navigation,\n          onEvent = _this$props3.onEvent;\n      onEvent(target, 'willFocus', payload);\n\n      if (typeof navigation.state.isTransitioning !== 'boolean' || navigation.state.isTransitioning !== true && !navigation.dangerouslyGetParent()) {\n        _this._emitDidFocus(target, payload);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_emitWillBlur\", function (target, payload) {\n      if (_this._lastWillFocusKey === target) {\n        _this._lastWillFocusKey = undefined;\n      }\n\n      if (_this._lastWillBlurKey === target) {\n        return;\n      }\n\n      _this._lastDidBlurKey = undefined;\n      _this._lastWillBlurKey = target;\n      var _this$props4 = _this.props,\n          navigation = _this$props4.navigation,\n          onEvent = _this$props4.onEvent;\n      onEvent(target, 'willBlur', payload);\n\n      if (typeof navigation.state.isTransitioning !== 'boolean' || navigation.state.isTransitioning !== true && !navigation.dangerouslyGetParent()) {\n        _this._emitDidBlur(target, payload);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_emitDidFocus\", function (target, payload) {\n      if (_this._lastWillFocusKey !== target || _this._lastDidFocusKey === target) {\n        return;\n      }\n\n      _this._lastDidFocusKey = target;\n      var onEvent = _this.props.onEvent;\n      onEvent(target, 'didFocus', payload);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_emitDidBlur\", function (target, payload) {\n      if (_this._lastWillBlurKey !== target || _this._lastDidBlurKey === target) {\n        return;\n      }\n\n      _this._lastDidBlurKey = target;\n      var onEvent = _this.props.onEvent;\n      onEvent(target, 'didBlur', payload);\n    });\n\n    return _this;\n  }\n\n  _createClass(NavigationEventManager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var navigation = this.props.navigation;\n      this._actionSubscription = navigation.addListener('action', this._handleAction);\n      this._willFocusSubscription = navigation.addListener('willFocus', this._handleWillFocus);\n      this._willBlurSubscription = navigation.addListener('willBlur', this._handleWillBlur);\n      this._didFocusSubscription = navigation.addListener('didFocus', this._handleDidFocus);\n      this._didBlurSubscription = navigation.addListener('didBlur', this._handleDidBlur);\n      this._refocusSubscription = navigation.addListener('refocus', this._handleRefocus);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$_actionSubscrip, _this$_willFocusSubsc, _this$_willBlurSubscr, _this$_didFocusSubscr, _this$_didBlurSubscri, _this$_refocusSubscri;\n\n      (_this$_actionSubscrip = this._actionSubscription) === null || _this$_actionSubscrip === void 0 ? void 0 : _this$_actionSubscrip.remove();\n      (_this$_willFocusSubsc = this._willFocusSubscription) === null || _this$_willFocusSubsc === void 0 ? void 0 : _this$_willFocusSubsc.remove();\n      (_this$_willBlurSubscr = this._willBlurSubscription) === null || _this$_willBlurSubscr === void 0 ? void 0 : _this$_willBlurSubscr.remove();\n      (_this$_didFocusSubscr = this._didFocusSubscription) === null || _this$_didFocusSubscr === void 0 ? void 0 : _this$_didFocusSubscr.remove();\n      (_this$_didBlurSubscri = this._didBlurSubscription) === null || _this$_didBlurSubscri === void 0 ? void 0 : _this$_didBlurSubscri.remove();\n      (_this$_refocusSubscri = this._refocusSubscription) === null || _this$_refocusSubscri === void 0 ? void 0 : _this$_refocusSubscri.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return NavigationEventManager;\n}(React.Component);\n\nexport { NavigationEventManager as default };","map":{"version":3,"sources":["NavigationFocusEvents.js"],"names":["React","componentDidMount","navigation","componentWillUnmount","context","onEvent","previous","lastState","current","state","payload","action","type","route","r","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,KAAP,KAAA,MAAA,OAAA;;IAiCe,sB;;;;;AAAqD,oCAAA;AAAA;;AAAA;;AAAA,sCAAA,IAAA;AAAA,MAAA,IAAA;AAAA;;AAAA,oDAAA,IAAA;;AAAA,IAAA,eAAA,gCAAA,qBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,wBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,uBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,uBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,sBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,sBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,kBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,mBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,iBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,kBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,eAAA,EAoGlD,gBAAiD;AAAA,UAAhD,KAAgD,QAAhD,KAAgD;AAAA,UAAhD,SAAgD,QAAhD,SAAgD;AAAA,UAAhD,MAAgD,QAAhD,MAAgD;AAAA,UAAhD,IAAgD,QAAhD,IAAgD;AAAA,UAAdI,OAAc,QAAdA,OAAc;;AAAA,UAAA,iBAAA;;AAC/D,wBAAgC,MAD+B,KAC/D;AAAA,UAAM,UAAN,eAAM,UAAN;AAAA,UAAoBC,OAApB,eAAoBA,OAApB;;AAIA,UAAI,CAACH,UAAU,CAAf,SAAKA,EAAL,EAA6B;AAC3B;AACD;;AAED,UAAMI,QAAQ,GAAGC,SAAS,GAAA,CAAA,iBAAA,GACtBA,SAAS,CADa,MAAA,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GACtBA,iBAAAA,CAAmBA,SAAS,CADN,KACtBA,CADsB,GAA1B,SAAA;AAGA,UAAMC,OAAO,GAAGC,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlC,KAAgBA,CAAhB;AAEA,UAAMC,OAAO,GAAG;AACdN,QAAAA,OAAO,EAAA,GAAA,MAAA,CAAKI,OAAO,CAAZ,GAAA,EAAA,GAAA,EAAA,MAAA,CAAoBG,MAAM,CAA1B,IAAA,EAAA,GAAA,EAAA,MAAA,CAAmCP,OAAO,IADnC,MACP,CADO;AAEdK,QAAAA,KAAK,EAFS,OAAA;AAGdF,QAAAA,SAAS,EAHK,QAAA;AAIdI,QAAAA,MAJc,EAIdA,MAJc;AAKdC,QAAAA,IAAAA,EAAAA;AALc,OAAhB;;AAQA,UAAI,CAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,KAAA,KAAR,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAR,GAAA,MAAkBJ,OAAO,CAA7B,GAAA,EAAmC;AACjC,cAAA,cAAA,CAAoBA,OAAO,CAA3B,GAAA,EAAA,OAAA;;AAEA,YAAIF,QAAJ,KAAA,IAAIA,IAAAA,QAAJ,KAAA,KAAA,CAAIA,GAAJ,KAAA,CAAIA,GAAAA,QAAQ,CAAZ,GAAA,EAAmB;AACjB,gBAAA,aAAA,CAAmBA,QAAQ,CAA3B,GAAA,EAAA,OAAA;AACD;AACF;;AAED,UACE,CAAA,SAAS,KAAT,IAAA,IAAA,SAAS,KAAA,KAAT,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAT,eAAA,MAA+BG,KAAK,CAApC,eAAA,IACAA,KAAK,CAALA,eAAAA,KAFF,KAAA,EAGE;AACA,YAAI,MAAJ,gBAAA,EAA2B;AACzB,gBAAA,YAAA,CAAkB,MAAlB,gBAAA,EAAA,OAAA;AACD;;AAED,YAAI,MAAJ,iBAAA,EAA4B;AAC1B,gBAAA,aAAA,CAAmB,MAAnB,iBAAA,EAAA,OAAA;AACD;AACF;;AAEDJ,MAAAA,OAAO,CAACG,OAAO,CAAR,GAAA,EAAA,QAAA,EAAPH,OAAO,CAAPA;AA/IgE,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,kBAAA,EAqJ/C,iBAA0C;AAAA,UAAzC,SAAyC,SAAzC,SAAyC;AAAA,UAAzC,MAAyC,SAAzC,MAAyC;AAAA,UAAzC,OAAyC,SAAzC,OAAyC;AAAA,UAAXO,IAAW,SAAXA,IAAW;;AAAA,UAAA,kBAAA;;AAC3D,UAAQV,UAAR,GAAuB,MAAvB,KAAA,CAAQA,UAAR;AACA,UAAMW,KAAK,GAAGX,UAAU,CAAVA,KAAAA,CAAAA,MAAAA,CAAwBA,UAAU,CAAVA,KAAAA,CAAtC,KAAcA,CAAd;;AAEA,YAAA,cAAA,CAAoBW,KAAK,CAAzB,GAAA,EAA+B;AAC7BT,QAAAA,OAAO,EAAA,GAAA,MAAA,CAAKS,KAAK,CAAV,GAAA,EAAA,GAAA,EAAA,MAAA,CAAkBF,MAAM,CAAxB,IAAA,EAAA,GAAA,EAAA,MAAA,CAAiCP,OAAO,IADlB,MACtB,CADsB;AAE7BK,QAAAA,KAAK,EAFwB,KAAA;AAG7BF,QAAAA,SAAS,EAAEA,SAAF,KAAA,IAAEA,IAAAA,SAAF,KAAA,KAAA,CAAEA,GAAF,KAAA,CAAEA,GAAF,CAAA,kBAAA,GAAEA,SAAS,CAAX,MAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,kBAAAA,CAAAA,IAAAA,CAAyBO,UAAAA,CAAD;AAAA,iBAAOA,CAAC,CAADA,GAAAA,KAAUD,KAAK,CAH5B,GAGM;AAAA,SAAxBN,CAHkB;AAI7BI,QAAAA,MAJ6B,EAI7BA,MAJ6B;AAK7BC,QAAAA,IAAAA,EAAAA;AAL6B,OAA/B;AAzJgE,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,iBAAA,EAqKhD,iBAA0C;AAAA,UAAzC,SAAyC,SAAzC,SAAyC;AAAA,UAAzC,MAAyC,SAAzC,MAAyC;AAAA,UAAzC,OAAyC,SAAzC,OAAyC;AAAA,UAAXA,IAAW,SAAXA,IAAW;;AAAA,UAAA,kBAAA;;AAC1D,UAAQV,UAAR,GAAuB,MAAvB,KAAA,CAAQA,UAAR;AACA,UAAMW,KAAK,GAAGX,UAAU,CAAVA,KAAAA,CAAAA,MAAAA,CAAwBA,UAAU,CAAVA,KAAAA,CAAtC,KAAcA,CAAd;;AAEA,YAAA,aAAA,CAAmBW,KAAK,CAAxB,GAAA,EAA8B;AAC5BT,QAAAA,OAAO,EAAA,GAAA,MAAA,CAAKS,KAAK,CAAV,GAAA,EAAA,GAAA,EAAA,MAAA,CAAkBF,MAAM,CAAxB,IAAA,EAAA,GAAA,EAAA,MAAA,CAAiCP,OAAO,IADnB,MACrB,CADqB;AAE5BK,QAAAA,KAAK,EAFuB,KAAA;AAG5BF,QAAAA,SAAS,EAAEA,SAAF,KAAA,IAAEA,IAAAA,SAAF,KAAA,KAAA,CAAEA,GAAF,KAAA,CAAEA,GAAF,CAAA,kBAAA,GAAEA,SAAS,CAAX,MAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,kBAAAA,CAAAA,IAAAA,CAAyBO,UAAAA,CAAD;AAAA,iBAAOA,CAAC,CAADA,GAAAA,KAAUD,KAAK,CAH7B,GAGO;AAAA,SAAxBN,CAHiB;AAI5BI,QAAAA,MAJ4B,EAI5BA,MAJ4B;AAK5BC,QAAAA,IAAAA,EAAAA;AAL4B,OAA9B;AAzKgE,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,iBAAA,EAqLhD,iBAA0C;AAAA,UAAzC,SAAyC,SAAzC,SAAyC;AAAA,UAAzC,MAAyC,SAAzC,MAAyC;AAAA,UAAzC,OAAyC,SAAzC,OAAyC;AAAA,UAAXA,IAAW,SAAXA,IAAW;AAC1D,UAAQV,UAAR,GAAuB,MAAvB,KAAA,CAAQA,UAAR;;AAEA,UAAI,MAAJ,iBAAA,EAA4B;AAC1B,YAAMW,KAAK,GAAGX,UAAU,CAAVA,KAAAA,CAAAA,MAAAA,CAAAA,IAAAA,CACXY,UAAAA,CAAD;AAAA,iBAAOA,CAAC,CAADA,GAAAA,KAAU,MADnB,iBACE;AAAA,SADYZ,CAAd;;AAIA,YAAA,KAAA,EAAW;AAAA,cAAA,kBAAA;;AACT,gBAAA,aAAA,CAAmBW,KAAK,CAAxB,GAAA,EAA8B;AAC5BT,YAAAA,OAAO,EAAA,GAAA,MAAA,CAAKS,KAAK,CAAV,GAAA,EAAA,GAAA,EAAA,MAAA,CAAkBF,MAAM,CAAxB,IAAA,EAAA,GAAA,EAAA,MAAA,CAAiCP,OAAO,IADnB,MACrB,CADqB;AAE5BK,YAAAA,KAAK,EAFuB,KAAA;AAG5BF,YAAAA,SAAS,EAAEA,SAAF,KAAA,IAAEA,IAAAA,SAAF,KAAA,KAAA,CAAEA,GAAF,KAAA,CAAEA,GAAF,CAAA,kBAAA,GAAEA,SAAS,CAAX,MAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,kBAAAA,CAAAA,IAAAA,CAAyBO,UAAAA,CAAD;AAAA,qBAAOA,CAAC,CAADA,GAAAA,KAAUD,KAAK,CAH7B,GAGO;AAAA,aAAxBN,CAHiB;AAI5BI,YAAAA,MAJ4B,EAI5BA,MAJ4B;AAK5BC,YAAAA,IAAAA,EAAAA;AAL4B,WAA9B;AAOD;AACF;AAtM+D,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,gBAAA,EA4MjD,iBAA0C;AAAA,UAAzC,SAAyC,SAAzC,SAAyC;AAAA,UAAzC,MAAyC,SAAzC,MAAyC;AAAA,UAAzC,OAAyC,SAAzC,OAAyC;AAAA,UAAXA,IAAW,SAAXA,IAAW;AACzD,UAAQV,UAAR,GAAuB,MAAvB,KAAA,CAAQA,UAAR;;AAEA,UAAI,MAAJ,gBAAA,EAA2B;AACzB,YAAMW,KAAK,GAAGX,UAAU,CAAVA,KAAAA,CAAAA,MAAAA,CAAAA,IAAAA,CACXY,UAAAA,CAAD;AAAA,iBAAOA,CAAC,CAADA,GAAAA,KAAU,MADnB,gBACE;AAAA,SADYZ,CAAd;;AAIA,YAAA,KAAA,EAAW;AAAA,cAAA,kBAAA;;AACT,gBAAA,YAAA,CAAkBW,KAAK,CAAvB,GAAA,EAA6B;AAC3BT,YAAAA,OAAO,EAAA,GAAA,MAAA,CAAKS,KAAK,CAAV,GAAA,EAAA,GAAA,EAAA,MAAA,CAAkBF,MAAM,CAAxB,IAAA,EAAA,GAAA,EAAA,MAAA,CAAiCP,OAAO,IADpB,MACpB,CADoB;AAE3BK,YAAAA,KAAK,EAFsB,KAAA;AAG3BF,YAAAA,SAAS,EAAEA,SAAF,KAAA,IAAEA,IAAAA,SAAF,KAAA,KAAA,CAAEA,GAAF,KAAA,CAAEA,GAAF,CAAA,kBAAA,GAAEA,SAAS,CAAX,MAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,kBAAAA,CAAAA,IAAAA,CAAyBO,UAAAA,CAAD;AAAA,qBAAOA,CAAC,CAADA,GAAAA,KAAUD,KAAK,CAH9B,GAGQ;AAAA,aAAxBN,CAHgB;AAI3BI,YAAAA,MAJ2B,EAI3BA,MAJ2B;AAK3BC,YAAAA,IAAAA,EAAAA;AAL2B,WAA7B;AAOD;AACF;AA7N+D,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,gBAAA,EAgOjD,YAAM;AACrB,yBAAgC,MAAhC,KAAA;AAAA,UAAM,OAAN,gBAAM,OAAN;AAAA,UAAiBV,UAAjB,gBAAiBA,UAAjB;AACA,UAAMW,KAAK,GAAGX,UAAU,CAAVA,KAAAA,CAAAA,MAAAA,CAAwBA,UAAU,CAAVA,KAAAA,CAAtC,KAAcA,CAAd;AAEAG,MAAAA,OAAO,CAACQ,KAAK,CAAN,GAAA,EAAPR,SAAO,CAAPA;AApOgE,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,gBAAA,EA2OjD,UAAA,MAAA,EAAA,OAAA,EAAqB;AACpC,UAAI,MAAA,gBAAA,KAAJ,MAAA,EAAsC;AACpC,cAAA,gBAAA,GAAA,SAAA;AACD;;AAED,UAAI,MAAA,iBAAA,KAAJ,MAAA,EAAuC;AACrC;AACD;;AAED,YAAA,gBAAA,GAAA,SAAA;AACA,YAAA,iBAAA,GAAA,MAAA;AAEA,yBAAgC,MAAhC,KAAA;AAAA,UAAM,UAAN,gBAAM,UAAN;AAAA,UAAoBA,OAApB,gBAAoBA,OAApB;AAEAA,MAAAA,OAAO,CAAA,MAAA,EAAA,WAAA,EAAPA,OAAO,CAAPA;;AAEA,UACE,OAAOH,UAAU,CAAVA,KAAAA,CAAP,eAAA,KAAA,SAAA,IACCA,UAAU,CAAVA,KAAAA,CAAAA,eAAAA,KAAAA,IAAAA,IACC,CAACA,UAAU,CAHf,oBAGKA,EAHL,EAIE;AACA,cAAA,aAAA,CAAA,MAAA,EAAA,OAAA;AACD;AAjQ+D,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,eAAA,EAwQlD,UAAA,MAAA,EAAA,OAAA,EAAqB;AACnC,UAAI,MAAA,iBAAA,KAAJ,MAAA,EAAuC;AACrC,cAAA,iBAAA,GAAA,SAAA;AACD;;AAED,UAAI,MAAA,gBAAA,KAAJ,MAAA,EAAsC;AACpC;AACD;;AAED,YAAA,eAAA,GAAA,SAAA;AACA,YAAA,gBAAA,GAAA,MAAA;AAEA,yBAAgC,MAAhC,KAAA;AAAA,UAAM,UAAN,gBAAM,UAAN;AAAA,UAAoBG,OAApB,gBAAoBA,OAApB;AAEAA,MAAAA,OAAO,CAAA,MAAA,EAAA,UAAA,EAAPA,OAAO,CAAPA;;AAEA,UACE,OAAOH,UAAU,CAAVA,KAAAA,CAAP,eAAA,KAAA,SAAA,IACCA,UAAU,CAAVA,KAAAA,CAAAA,eAAAA,KAAAA,IAAAA,IACC,CAACA,UAAU,CAHf,oBAGKA,EAHL,EAIE;AACA,cAAA,YAAA,CAAA,MAAA,EAAA,OAAA;AACD;AA9R+D,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,eAAA,EAqSlD,UAAA,MAAA,EAAA,OAAA,EAAqB;AACnC,UAAI,MAAA,iBAAA,KAAA,MAAA,IAAqC,MAAA,gBAAA,KAAzC,MAAA,EAA2E;AACzE;AACD;;AAED,YAAA,gBAAA,GAAA,MAAA;AAEA,UAAQG,OAAR,GAAoB,MAApB,KAAA,CAAQA,OAAR;AAEAA,MAAAA,OAAO,CAAA,MAAA,EAAA,UAAA,EAAPA,OAAO,CAAPA;AA9SgE,KAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,cAAA,EAqTnD,UAAA,MAAA,EAAA,OAAA,EAAqB;AAClC,UAAI,MAAA,gBAAA,KAAA,MAAA,IAAoC,MAAA,eAAA,KAAxC,MAAA,EAAyE;AACvE;AACD;;AAED,YAAA,eAAA,GAAA,MAAA;AAEA,UAAQA,OAAR,GAAoB,MAApB,KAAA,CAAQA,OAAR;AAEAA,MAAAA,OAAO,CAAA,MAAA,EAAA,SAAA,EAAPA,OAAO,CAAPA;AA9TgE,KAAA,CAAA;;AAAA;AAAA;;;;WAClEJ,6BAAoB;AAClB,UAAQC,UAAR,GAAuB,KAAvB,KAAA,CAAQA,UAAR;AAEA,WAAA,mBAAA,GAA2BA,UAAU,CAAVA,WAAAA,CAAAA,QAAAA,EAEzB,KAFF,aAA2BA,CAA3B;AAKA,WAAA,sBAAA,GAA8BA,UAAU,CAAVA,WAAAA,CAAAA,WAAAA,EAE5B,KAFF,gBAA8BA,CAA9B;AAKA,WAAA,qBAAA,GAA6BA,UAAU,CAAVA,WAAAA,CAAAA,UAAAA,EAE3B,KAFF,eAA6BA,CAA7B;AAKA,WAAA,qBAAA,GAA6BA,UAAU,CAAVA,WAAAA,CAAAA,UAAAA,EAE3B,KAFF,eAA6BA,CAA7B;AAKA,WAAA,oBAAA,GAA4BA,UAAU,CAAVA,WAAAA,CAAAA,SAAAA,EAE1B,KAFF,cAA4BA,CAA5B;AAKA,WAAA,oBAAA,GAA4BA,UAAU,CAAVA,WAAAA,CAAAA,SAAAA,EAE1B,KAFF,cAA4BA,CAA5B;AAID;;;WAEDC,gCAAuB;AAAA,UAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA;;AACrB,OAAA,qBAAA,GAAA,KAAA,mBAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,MAAA,EAAA;AACA,OAAA,qBAAA,GAAA,KAAA,sBAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,MAAA,EAAA;AACA,OAAA,qBAAA,GAAA,KAAA,qBAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,MAAA,EAAA;AACA,OAAA,qBAAA,GAAA,KAAA,qBAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,MAAA,EAAA;AACA,OAAA,qBAAA,GAAA,KAAA,oBAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,MAAA,EAAA;AACA,OAAA,qBAAA,GAAA,KAAA,oBAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,MAAA,EAAA;AACD;;;WAuRDY,kBAAS;AACP,aAAA,IAAA;AACD;;;;EAnUiDf,KAAK,CAA1C,S;;SAAA,sB","sourcesContent":["// @ts-check\n\nimport * as React from 'react';\n\n/**\n * @typedef {object} State\n * @prop {number} index\n * @prop {({ key: string } & (State | {}))[]} routes\n * @prop {boolean} [isTransitioning]\n *\n * @typedef {object} ParentPayload\n * @prop {string} type\n * @prop {object} action\n * @prop {State} state\n * @prop {State | {key: string, routes?: undefined, index?: undefined, isTransitioning?: undefined} | undefined | null} lastState\n * @prop {string} [context]\n *\n * @typedef {object} Payload\n * @prop {string} type\n * @prop {object} action\n * @prop {State | {key: string}} state\n * @prop {State | {key: string} | undefined | null} lastState\n * @prop {string} [context]\n *\n * @typedef {object} Props\n * @prop {object} navigation\n * @prop {Function} navigation.addListener\n * @prop {Function} navigation.removeListener\n * @prop {() => boolean} navigation.isFocused\n * @prop {() => object | undefined} navigation.dangerouslyGetParent\n * @prop {State} navigation.state\n * @prop {(target: string, type: string, data: any) => void} onEvent\n *\n * @extends {React.Component<Props>}\n */\nexport default class NavigationEventManager extends React.Component {\n  componentDidMount() {\n    const { navigation } = this.props;\n\n    this._actionSubscription = navigation.addListener(\n      'action',\n      this._handleAction\n    );\n\n    this._willFocusSubscription = navigation.addListener(\n      'willFocus',\n      this._handleWillFocus\n    );\n\n    this._willBlurSubscription = navigation.addListener(\n      'willBlur',\n      this._handleWillBlur\n    );\n\n    this._didFocusSubscription = navigation.addListener(\n      'didFocus',\n      this._handleDidFocus\n    );\n\n    this._didBlurSubscription = navigation.addListener(\n      'didBlur',\n      this._handleDidBlur\n    );\n\n    this._refocusSubscription = navigation.addListener(\n      'refocus',\n      this._handleRefocus\n    );\n  }\n\n  componentWillUnmount() {\n    this._actionSubscription?.remove();\n    this._willFocusSubscription?.remove();\n    this._willBlurSubscription?.remove();\n    this._didFocusSubscription?.remove();\n    this._didBlurSubscription?.remove();\n    this._refocusSubscription?.remove();\n  }\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _actionSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _willFocusSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _willBlurSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _didFocusSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _didBlurSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _refocusSubscription;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastWillBlurKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastWillFocusKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastDidBlurKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastDidFocusKey;\n\n  /**\n   * The 'action' event will fire when navigation state changes.\n   * Detect if the focused route changed here and emit appropriate events.\n   *\n   * @param {ParentPayload} payload\n   */\n  _handleAction = ({ state, lastState, action, type, context }) => {\n    const { navigation, onEvent } = this.props;\n\n    // We should only emit events when the navigator is focused\n    // When navigator is not focused, screens inside shouldn't receive focused status either\n    if (!navigation.isFocused()) {\n      return;\n    }\n\n    const previous = lastState\n      ? lastState.routes?.[lastState.index]\n      : undefined;\n    const current = state.routes[state.index];\n\n    const payload = {\n      context: `${current.key}:${action.type}_${context || 'Root'}`,\n      state: current,\n      lastState: previous,\n      action,\n      type,\n    };\n\n    if (previous?.key !== current.key) {\n      this._emitWillFocus(current.key, payload);\n\n      if (previous?.key) {\n        this._emitWillBlur(previous.key, payload);\n      }\n    }\n\n    if (\n      lastState?.isTransitioning !== state.isTransitioning &&\n      state.isTransitioning === false\n    ) {\n      if (this._lastWillBlurKey) {\n        this._emitDidBlur(this._lastWillBlurKey, payload);\n      }\n\n      if (this._lastWillFocusKey) {\n        this._emitDidFocus(this._lastWillFocusKey, payload);\n      }\n    }\n\n    onEvent(current.key, 'action', payload);\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleWillFocus = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    this._emitWillFocus(route.key, {\n      context: `${route.key}:${action.type}_${context || 'Root'}`,\n      state: route,\n      lastState: lastState?.routes?.find((r) => r.key === route.key),\n      action,\n      type,\n    });\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleWillBlur = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    this._emitWillBlur(route.key, {\n      context: `${route.key}:${action.type}_${context || 'Root'}`,\n      state: route,\n      lastState: lastState?.routes?.find((r) => r.key === route.key),\n      action,\n      type,\n    });\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleDidFocus = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n\n    if (this._lastWillFocusKey) {\n      const route = navigation.state.routes.find(\n        (r) => r.key === this._lastWillFocusKey\n      );\n\n      if (route) {\n        this._emitDidFocus(route.key, {\n          context: `${route.key}:${action.type}_${context || 'Root'}`,\n          state: route,\n          lastState: lastState?.routes?.find((r) => r.key === route.key),\n          action,\n          type,\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleDidBlur = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n\n    if (this._lastWillBlurKey) {\n      const route = navigation.state.routes.find(\n        (r) => r.key === this._lastWillBlurKey\n      );\n\n      if (route) {\n        this._emitDidBlur(route.key, {\n          context: `${route.key}:${action.type}_${context || 'Root'}`,\n          state: route,\n          lastState: lastState?.routes?.find((r) => r.key === route.key),\n          action,\n          type,\n        });\n      }\n    }\n  };\n\n  _handleRefocus = () => {\n    const { onEvent, navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    onEvent(route.key, 'refocus');\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitWillFocus = (target, payload) => {\n    if (this._lastWillBlurKey === target) {\n      this._lastWillBlurKey = undefined;\n    }\n\n    if (this._lastWillFocusKey === target) {\n      return;\n    }\n\n    this._lastDidFocusKey = undefined;\n    this._lastWillFocusKey = target;\n\n    const { navigation, onEvent } = this.props;\n\n    onEvent(target, 'willFocus', payload);\n\n    if (\n      typeof navigation.state.isTransitioning !== 'boolean' ||\n      (navigation.state.isTransitioning !== true &&\n        !navigation.dangerouslyGetParent())\n    ) {\n      this._emitDidFocus(target, payload);\n    }\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitWillBlur = (target, payload) => {\n    if (this._lastWillFocusKey === target) {\n      this._lastWillFocusKey = undefined;\n    }\n\n    if (this._lastWillBlurKey === target) {\n      return;\n    }\n\n    this._lastDidBlurKey = undefined;\n    this._lastWillBlurKey = target;\n\n    const { navigation, onEvent } = this.props;\n\n    onEvent(target, 'willBlur', payload);\n\n    if (\n      typeof navigation.state.isTransitioning !== 'boolean' ||\n      (navigation.state.isTransitioning !== true &&\n        !navigation.dangerouslyGetParent())\n    ) {\n      this._emitDidBlur(target, payload);\n    }\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitDidFocus = (target, payload) => {\n    if (this._lastWillFocusKey !== target || this._lastDidFocusKey === target) {\n      return;\n    }\n\n    this._lastDidFocusKey = target;\n\n    const { onEvent } = this.props;\n\n    onEvent(target, 'didFocus', payload);\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitDidBlur = (target, payload) => {\n    if (this._lastWillBlurKey !== target || this._lastDidBlurKey === target) {\n      return;\n    }\n\n    this._lastDidBlurKey = target;\n\n    const { onEvent } = this.props;\n\n    onEvent(target, 'didBlur', payload);\n  };\n\n  render() {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}