{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport SceneView from \"../SceneView\";\n\nvar SwitchView = function (_React$Component) {\n  _inherits(SwitchView, _React$Component);\n\n  var _super = _createSuper(SwitchView);\n\n  function SwitchView() {\n    _classCallCheck(this, SwitchView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SwitchView, [{\n    key: \"render\",\n    value: function render() {\n      var state = this.props.navigation.state;\n      var activeKey = state.routes[state.index].key;\n      var descriptor = this.props.descriptors[activeKey];\n      var ChildComponent = descriptor.getComponent();\n      return React.createElement(SceneView, {\n        component: ChildComponent,\n        navigation: descriptor.navigation,\n        screenProps: this.props.screenProps\n      });\n    }\n  }]);\n\n  return SwitchView;\n}(React.Component);\n\nexport { SwitchView as default };","map":{"version":3,"sources":["SwitchView.js"],"names":["React","render","state","activeKey","descriptor","ChildComponent","screenProps"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,SAAA;;IAEe,U;;;;;;;;;;;;;WACbC,kBAAS;AACP,UAAQC,KAAR,GAAkB,KAAA,KAAA,CAAlB,UAAA,CAAQA,KAAR;AACA,UAAMC,SAAS,GAAGD,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlBA,KAAAA,EAAlB,GAAA;AACA,UAAME,UAAU,GAAG,KAAA,KAAA,CAAA,WAAA,CAAnB,SAAmB,CAAnB;AACA,UAAMC,cAAc,GAAGD,UAAU,CAAjC,YAAuBA,EAAvB;AAEA,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AACE,QAAA,SAAS,EADX,cAAA;AAEE,QAAA,UAAU,EAAEA,UAAU,CAFxB,UAAA;AAGE,QAAA,WAAW,EAAE,KAAA,KAAA,CAAWE;AAH1B,OAAA,CADF;AAOD;;;;EAdqCN,KAAK,CAA9B,S;;SAAA,U","sourcesContent":["import * as React from 'react';\nimport SceneView from '../SceneView';\n\nexport default class SwitchView extends React.Component {\n  render() {\n    const { state } = this.props.navigation;\n    const activeKey = state.routes[state.index].key;\n    const descriptor = this.props.descriptors[activeKey];\n    const ChildComponent = descriptor.getComponent();\n\n    return (\n      <SceneView\n        component={ChildComponent}\n        navigation={descriptor.navigation}\n        screenProps={this.props.screenProps}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}