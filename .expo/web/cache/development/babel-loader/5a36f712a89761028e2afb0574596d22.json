{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from \"../base\";\nimport AnimatedNode from \"../core/AnimatedNode\";\nvar procColor = proc(function (r, g, b, a) {\n  var color = add(multiply(a, 1 << 24), multiply(round(r), 1 << 16), multiply(round(g), 1 << 8), round(b));\n\n  if (Platform.OS === 'android') {\n    return cond(lessThan(color, 1 << 31 >>> 0), color, sub(color, Math.pow(2, 32)));\n  }\n\n  return color;\n});\nexport default function color(r, g, b) {\n  var a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n  if (Platform.OS === 'web') {\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}","map":{"version":3,"sources":["color.js"],"names":["procColor","proc","color","add","multiply","round","Platform","cond","lessThan","sub","Math","a","concat"],"mappings":";AAEA,SAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA;AACA,OAAA,YAAA;AAEA,IAAMA,SAAS,GAAGC,IAAI,CAAC,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAqB;AAC1C,MAAMC,KAAK,GAAGC,GAAG,CACfC,QAAQ,CAAA,CAAA,EAAI,KADG,EACP,CADO,EAEfA,QAAQ,CAACC,KAAK,CAAN,CAAM,CAAN,EAAW,KAFJ,EAEP,CAFO,EAGfD,QAAQ,CAACC,KAAK,CAAN,CAAM,CAAN,EAAW,KAHJ,CAGP,CAHO,EAIfA,KAAK,CAJP,CAIO,CAJU,CAAjB;;AAOA,MAAIC,QAAQ,CAARA,EAAAA,KAAJ,SAAA,EAA+B;AAE7B,WAAOC,IAAI,CACTC,QAAQ,CAAA,KAAA,EAAS,KAAD,EAAC,KADR,CACD,CADC,EAAA,KAAA,EAGTC,GAAG,CAAA,KAAA,EAAQC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAHb,EAGaA,CAAR,CAHM,CAAX;AAKD;;AACD,SAAA,KAAA;AAhBF,CAAsB,CAAtB;AAmBA,eAAe,SAAA,KAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAA+B;AAAA,MAAPC,CAAO,uEAA/B,CAA+B;;AAC5C,MAAIL,QAAQ,CAARA,EAAAA,KAAJ,KAAA,EAA2B;AAEzB,WAAOM,MAAM,CAAA,OAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAb,GAAa,CAAb;AACD;;AAED,MAAID,CAAC,YAAL,YAAA,EAA+B;AAC7BA,IAAAA,CAAC,GAAGN,KAAK,CAACD,QAAQ,CAAA,CAAA,EAAlBO,GAAkB,CAAT,CAATA;AADF,GAAA,MAEO;AACLA,IAAAA,CAAC,GAAGD,IAAI,CAAJA,KAAAA,CAAWC,CAAC,GAAhBA,GAAID,CAAJC;AACD;;AAED,SAAOX,SAAS,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAhB,CAAgB,CAAhB;AACD","sourcesContent":["import { Platform } from 'react-native';\n\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from '../base';\nimport AnimatedNode from '../core/AnimatedNode';\n\nconst procColor = proc(function(r, g, b, a) {\n  const color = add(\n    multiply(a, 1 << 24),\n    multiply(round(r), 1 << 16),\n    multiply(round(g), 1 << 8),\n    round(b)\n  );\n  \n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return cond(\n      lessThan(color, (1 << 31) >>> 0),\n      color,\n      sub(color, Math.pow(2, 32))\n    );\n  }\n  return color;\n});\n\nexport default function color(r, g, b, a = 1) {\n  if (Platform.OS === 'web') {\n    // doesn't support bit shifting\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}\n"]},"metadata":{},"sourceType":"module"}