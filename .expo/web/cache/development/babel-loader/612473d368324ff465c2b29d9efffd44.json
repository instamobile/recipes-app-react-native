{"ast":null,"code":"'use strict';\n\nvar deepDiffer = function deepDiffer(one, two, maxDepth) {\n  if (maxDepth === void 0) {\n    maxDepth = -1;\n  }\n\n  if (maxDepth === 0) {\n    return true;\n  }\n\n  if (one === two) {\n    return false;\n  }\n\n  if (typeof one === 'function' && typeof two === 'function') {\n    return false;\n  }\n\n  if (typeof one !== 'object' || one === null) {\n    return one !== two;\n  }\n\n  if (typeof two !== 'object' || two === null) {\n    return true;\n  }\n\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n\n  if (Array.isArray(one)) {\n    var len = one.length;\n\n    if (two.length !== len) {\n      return true;\n    }\n\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n\n    for (var twoKey in two) {\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nexport default deepDiffer;","map":{"version":3,"sources":["C:/learning/Group-Project/node_modules/react-native-web/dist/vendor/react-native/deepDiffer/index.js"],"names":["deepDiffer","one","two","maxDepth","constructor","Array","isArray","len","length","ii","key","twoKey","undefined"],"mappings":"AASA;;AAKA,IAAIA,UAAU,GAAG,SAASA,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,QAA9B,EAAwC;AACvD,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,IAAAA,QAAQ,GAAG,CAAC,CAAZ;AACD;;AAED,MAAIA,QAAQ,KAAK,CAAjB,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,MAAIF,GAAG,KAAKC,GAAZ,EAAiB;AAEf,WAAO,KAAP;AACD;;AAED,MAAI,OAAOD,GAAP,KAAe,UAAf,IAA6B,OAAOC,GAAP,KAAe,UAAhD,EAA4D;AAE1D,WAAO,KAAP;AACD;;AAED,MAAI,OAAOD,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AAE3C,WAAOA,GAAG,KAAKC,GAAf;AACD;;AAED,MAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AAG3C,WAAO,IAAP;AACD;;AAED,MAAID,GAAG,CAACG,WAAJ,KAAoBF,GAAG,CAACE,WAA5B,EAAyC;AACvC,WAAO,IAAP;AACD;;AAED,MAAIC,KAAK,CAACC,OAAN,CAAcL,GAAd,CAAJ,EAAwB;AAEtB,QAAIM,GAAG,GAAGN,GAAG,CAACO,MAAd;;AAEA,QAAIN,GAAG,CAACM,MAAJ,KAAeD,GAAnB,EAAwB;AACtB,aAAO,IAAP;AACD;;AAED,SAAK,IAAIE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGF,GAAtB,EAA2BE,EAAE,EAA7B,EAAiC;AAC/B,UAAIT,UAAU,CAACC,GAAG,CAACQ,EAAD,CAAJ,EAAUP,GAAG,CAACO,EAAD,CAAb,EAAmBN,QAAQ,GAAG,CAA9B,CAAd,EAAgD;AAC9C,eAAO,IAAP;AACD;AACF;AACF,GAbD,MAaO;AACL,SAAK,IAAIO,GAAT,IAAgBT,GAAhB,EAAqB;AACnB,UAAID,UAAU,CAACC,GAAG,CAACS,GAAD,CAAJ,EAAWR,GAAG,CAACQ,GAAD,CAAd,EAAqBP,QAAQ,GAAG,CAAhC,CAAd,EAAkD;AAChD,eAAO,IAAP;AACD;AACF;;AAED,SAAK,IAAIQ,MAAT,IAAmBT,GAAnB,EAAwB;AAGtB,UAAID,GAAG,CAACU,MAAD,CAAH,KAAgBC,SAAhB,IAA6BV,GAAG,CAACS,MAAD,CAAH,KAAgBC,SAAjD,EAA4D;AAC1D,eAAO,IAAP;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD,CAhED;;AAkEA,eAAeZ,UAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n/*\n * @returns {bool} true if different, false if equal\n */\n\nvar deepDiffer = function deepDiffer(one, two, maxDepth) {\n  if (maxDepth === void 0) {\n    maxDepth = -1;\n  }\n\n  if (maxDepth === 0) {\n    return true;\n  }\n\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal\n    return false;\n  }\n\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    var len = one.length;\n\n    if (two.length !== len) {\n      return true;\n    }\n\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n\n    for (var twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nexport default deepDiffer;"]},"metadata":{},"sourceType":"module"}