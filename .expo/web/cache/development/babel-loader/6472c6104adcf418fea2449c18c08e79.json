{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar deprecatedKeys = ['tabBar'];\nexport default (function (screenOptions, route) {\n  var keys = Object.keys(screenOptions);\n  var deprecatedKey = keys.find(function (key) {\n    return deprecatedKeys.includes(key);\n  });\n\n  if (typeof screenOptions.title === 'function') {\n    throw new Error([\"`title` cannot be defined as a function in navigation options for `\".concat(route.routeName, \"` screen. \\n\"), 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\\n'));\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {\n    throw new Error([\"`\".concat(deprecatedKey, \"` cannot be defined as a function in navigation options for `\").concat(route.routeName, \"` screen. \\n\"), 'Try replacing the following:', '{', \"    \".concat(deprecatedKey, \": ({ state }) => ({\"), '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', \"    \".concat(deprecatedKey, \"Key: navigation.state...\"), '})'].join('\\n'));\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {\n    throw new Error([\"Invalid key `\".concat(deprecatedKey, \"` defined in navigation options for `\").concat(route.routeName, \"` screen.\"), '\\n', 'Try replacing the following navigation options:', '{', \"    \".concat(deprecatedKey, \": {\")].concat(_toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {\n      return \"        \".concat(key, \": ...,\");\n    })), ['    },', '}', '\\n', 'with:', '{'], _toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {\n      return \"    \".concat(deprecatedKey + key[0].toUpperCase() + key.slice(1), \": ...,\");\n    })), ['}']).join('\\n'));\n  }\n});","map":{"version":3,"sources":["validateScreenOptions.js"],"names":["deprecatedKeys","keys","Object","deprecatedKey","key","screenOptions","route"],"mappings":";AAAA,IAAMA,cAAc,GAAG,CAAvB,QAAuB,CAAvB;AAMA,gBAAe,UAAA,aAAA,EAAA,KAAA,EAA0B;AACvC,MAAMC,IAAI,GAAGC,MAAM,CAANA,IAAAA,CAAb,aAAaA,CAAb;AAEA,MAAMC,aAAa,GAAGF,IAAI,CAAJA,IAAAA,CAAWG,UAAAA,GAAD;AAAA,WAASJ,cAAc,CAAdA,QAAAA,CAAzC,GAAyCA,CAAT;AAAA,GAAVC,CAAtB;;AAEA,MAAI,OAAOI,aAAa,CAApB,KAAA,KAAJ,UAAA,EAA+C;AAC7C,UAAM,IAAA,KAAA,CACJ,CAAA,sEAAA,MAAA,CAC2EC,KAAK,CADhF,SAAA,EAAA,cAAA,CAAA,EAAA,8BAAA,EAAA,GAAA,EAAA,oCAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,wBAAA,EAAA,gCAAA,EAAA,IAAA,EAAA,IAAA,CADF,IACE,CADI,CAAN;AAcD;;AAED,MAAIH,aAAa,IAAI,OAAOE,aAAa,CAApB,aAAoB,CAApB,KAArB,UAAA,EAAyE;AACvE,UAAM,IAAA,KAAA,CACJ,CAAA,IAAA,MAAA,CAAA,aAAA,EAAA,+DAAA,EAAA,MAAA,CACsFC,KAAK,CAD3F,SAAA,EAAA,cAAA,CAAA,EAAA,8BAAA,EAAA,GAAA,EAAA,OAAA,MAAA,CAAA,aAAA,EAAA,qBAAA,CAAA,EAAA,wBAAA,EAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,wBAAA,EAAA,OAAA,MAAA,CAAA,aAAA,EAAA,0BAAA,CAAA,EAAA,IAAA,EAAA,IAAA,CADF,IACE,CADI,CAAN;AAgBD;;AAED,MAAIH,aAAa,IAAI,OAAOE,aAAa,CAApB,aAAoB,CAApB,KAArB,QAAA,EAAuE;AACrE,UAAM,IAAA,KAAA,CACJ,CAAA,gBAAA,MAAA,CAAA,aAAA,EAAA,uCAAA,EAAA,MAAA,CAC0EC,KAAK,CAD/E,SAAA,EAAA,WAAA,CAAA,EAAA,IAAA,EAAA,iDAAA,EAAA,GAAA,EAAA,OAAA,MAAA,CAAA,aAAA,EAAA,KAAA,CAAA,4BAMKJ,MAAM,CAANA,IAAAA,CAAYG,aAAa,CAAzBH,aAAyB,CAAzBA,EAAAA,GAAAA,CACAE,UAAAA,GAAD;AAAA,aAAA,WAAA,MAAA,CAAA,GAAA,EAPJ,QAOI,CAAA;AAAA,KADCF,CANL,IAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,sBAcKA,MAAM,CAANA,IAAAA,CAAYG,aAAa,CAAzBH,aAAyB,CAAzBA,EAAAA,GAAAA,CACAE,UAAAA,GAAD;AAAA,aAAA,OAAA,MAAA,CACSD,aAAa,GAAGC,GAAG,CAAHA,CAAG,CAAHA,CAAhBD,WAAgBC,EAAhBD,GAAuCC,GAAG,CAAHA,KAAAA,CADhD,CACgDA,CADhD,EAfJ,QAeI,CAAA;AAAA,KADCF,CAdL,IAAA,GAAA,GAAA,IAAA,CADF,IACE,CADI,CAAN;AAsBD;AAhEH,CAAA","sourcesContent":["const deprecatedKeys = ['tabBar'];\n\n/**\n * Make sure screen options returned by the `getScreenOption`\n * are valid\n */\nexport default (screenOptions, route) => {\n  const keys = Object.keys(screenOptions);\n\n  const deprecatedKey = keys.find((key) => deprecatedKeys.includes(key));\n\n  if (typeof screenOptions.title === 'function') {\n    throw new Error(\n      [\n        `\\`title\\` cannot be defined as a function in navigation options for \\`${route.routeName}\\` screen. \\n`,\n        'Try replacing the following:',\n        '{',\n        '    title: ({ state }) => state...',\n        '}',\n        '',\n        'with:',\n        '({ navigation }) => ({',\n        '    title: navigation.state...',\n        '})',\n      ].join('\\n')\n    );\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {\n    throw new Error(\n      [\n        `\\`${deprecatedKey}\\` cannot be defined as a function in navigation options for \\`${route.routeName}\\` screen. \\n`,\n        'Try replacing the following:',\n        '{',\n        `    ${deprecatedKey}: ({ state }) => ({`,\n        '         key: state...',\n        '    })',\n        '}',\n        '',\n        'with:',\n        '({ navigation }) => ({',\n        `    ${deprecatedKey}Key: navigation.state...`,\n        '})',\n      ].join('\\n')\n    );\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {\n    throw new Error(\n      [\n        `Invalid key \\`${deprecatedKey}\\` defined in navigation options for \\`${route.routeName}\\` screen.`,\n        '\\n',\n        'Try replacing the following navigation options:',\n        '{',\n        `    ${deprecatedKey}: {`,\n        ...Object.keys(screenOptions[deprecatedKey]).map(\n          (key) => `        ${key}: ...,`\n        ),\n        '    },',\n        '}',\n        '\\n',\n        'with:',\n        '{',\n        ...Object.keys(screenOptions[deprecatedKey]).map(\n          (key) =>\n            `    ${deprecatedKey + key[0].toUpperCase() + key.slice(1)}: ...,`\n        ),\n        '}',\n      ].join('\\n')\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}