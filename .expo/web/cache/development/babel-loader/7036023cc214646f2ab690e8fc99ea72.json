{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"isFocused\", \"childNavigation\", \"removeClippedSubviews\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SceneView } from '@react-navigation/core';\nvar FAR_FAR_AWAY = 3000;\n\nvar ResourceSavingSceneView = function (_React$PureComponent) {\n  _inherits(ResourceSavingSceneView, _React$PureComponent);\n\n  var _super = _createSuper(ResourceSavingSceneView);\n\n  function ResourceSavingSceneView(props) {\n    var _this;\n\n    _classCallCheck(this, ResourceSavingSceneView);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"_mustAlwaysBeVisible\", function () {\n      return _this.props.animationEnabled || _this.props.swipeEnabled;\n    });\n\n    _this.state = {\n      awake: props.lazy ? props.isFocused : true\n    };\n    return _this;\n  }\n\n  _createClass(ResourceSavingSceneView, [{\n    key: \"render\",\n    value: function render() {\n      var awake = this.state.awake;\n\n      var _this$props = this.props,\n          isFocused = _this$props.isFocused,\n          childNavigation = _this$props.childNavigation,\n          removeClippedSubviews = _this$props.removeClippedSubviews,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      return React.createElement(View, {\n        style: styles.container,\n        collapsable: false,\n        removeClippedSubviews: Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews\n      }, React.createElement(View, {\n        style: this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached\n      }, awake ? React.createElement(SceneView, _extends({}, rest, {\n        navigation: childNavigation\n      })) : null));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isFocused && !prevState.awake) {\n        return {\n          awake: true\n        };\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return ResourceSavingSceneView;\n}(React.PureComponent);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  innerAttached: {\n    flex: 1\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});\nexport default ResourceSavingSceneView;","map":{"version":3,"sources":["ResourceSavingSceneView.js"],"names":["FAR_FAR_AWAY","React","nextProps","prevState","awake","constructor","props","render","rest","styles","Platform","removeClippedSubviews","innerDetached","childNavigation","container","flex","overflow","innerAttached","top"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAEA,SAAA,SAAA,QAAA,wBAAA;AAEA,IAAMA,YAAY,GAAlB,IAAA;;IAEA,uB;;;;;AASEK,mCAAW,KAAXA,EAAmB;AAAA;;AAAA;;AACjB;;AADiB,IAAA,eAAA,gCAAA,sBAAA,EAQI,YAAM;AAC3B,aAAO,MAAA,KAAA,CAAA,gBAAA,IAA+B,MAAA,KAAA,CAAtC,YAAA;AATiB,KAAA,CAAA;;AAGjB,UAAA,KAAA,GAAa;AACXD,MAAAA,KAAK,EAAEE,KAAK,CAALA,IAAAA,GAAaA,KAAK,CAAlBA,SAAAA,GAA+B;AAD3B,KAAb;AAHiB;AAMlB;;;;WAMDC,kBAAS;AACP,UAAQH,KAAR,GAAkB,KAAlB,KAAA,CAAQA,KAAR;;AACA,wBAKI,KALJ,KAAA;AAAA,UAAM,SAAN,eAAM,SAAN;AAAA,UAAM,eAAN,eAAM,eAAN;AAAA,UAAM,qBAAN,eAAM,qBAAN;AAAA,UAIKI,IAJL;;AAOA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,QAAA,KAAK,EAAEC,MAAM,CADf,SAAA;AAEE,QAAA,WAAW,EAFb,KAAA;AAGE,QAAA,qBAAqB,EACnBC,QAAQ,CAARA,EAAAA,KAAAA,SAAAA,GAAAA,qBAAAA,GAEI,CAAA,SAAA,IAAcC;AANtB,OAAA,EASE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,QAAA,KAAK,EACH,KAAA,oBAAA,MAAA,SAAA,GACIF,MAAM,CADV,aAAA,GAEIA,MAAM,CAACG;AAJf,OAAA,EAOGR,KAAK,GAAG,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAqB,QAAA,UAAU,EAAES;AAAjC,OAAA,CAAA,CAAH,GAjBZ,IAUI,CATF,CADF;AAqBD;;;WAlDD,kCAAA,SAAA,EAAA,SAAA,EAAsD;AACpD,UAAIX,SAAS,CAATA,SAAAA,IAAuB,CAACC,SAAS,CAArC,KAAA,EAA6C;AAC3C,eAAO;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAP;AADF,OAAA,MAEO;AACL,eAAA,IAAA;AACD;AACF;;;;EAPmCH,KAAK,CAA3C,a;;AAsDA,IAAMQ,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BK,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EADK,CAAA;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAK/BC,EAAAA,aAAa,EAAE;AACbF,IAAAA,IAAI,EAAE;AADO,GALgB;AAQ/BH,EAAAA,aAAa,EAAE;AACbG,IAAAA,IAAI,EADS,CAAA;AAEbG,IAAAA,GAAG,EAAElB;AAFQ;AARgB,CAAlB,CAAf;AAcA,eAAA,uBAAA","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { SceneView } from '@react-navigation/core';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nclass ResourceSavingSceneView extends React.PureComponent {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return { awake: true };\n    } else {\n      return null;\n    }\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      awake: props.lazy ? props.isFocused : true,\n    };\n  }\n\n  _mustAlwaysBeVisible = () => {\n    return this.props.animationEnabled || this.props.swipeEnabled;\n  };\n\n  render() {\n    const { awake } = this.state;\n    const {\n      isFocused,\n      childNavigation,\n      removeClippedSubviews,\n      ...rest\n    } = this.props;\n\n    return (\n      <View\n        style={styles.container}\n        collapsable={false}\n        removeClippedSubviews={\n          Platform.OS === 'android'\n            ? removeClippedSubviews\n            : !isFocused && removeClippedSubviews\n        }\n      >\n        <View\n          style={\n            this._mustAlwaysBeVisible() || isFocused\n              ? styles.innerAttached\n              : styles.innerDetached\n          }\n        >\n          {awake ? <SceneView {...rest} navigation={childNavigation} /> : null}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  innerAttached: {\n    flex: 1,\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n\nexport default ResourceSavingSceneView;\n"]},"metadata":{},"sourceType":"module"}