{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport SwitchRouter from \"./SwitchRouter\";\nimport withDefaultValue from \"../utils/withDefaultValue\";\nexport default (function (routeConfigs) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  config = _objectSpread({}, config);\n  config = withDefaultValue(config, 'resetOnBlur', false);\n  config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n  var switchRouter = SwitchRouter(routeConfigs, config);\n  return switchRouter;\n});","map":{"version":3,"sources":["TabRouter.js"],"names":["config","withDefaultValue","switchRouter","SwitchRouter"],"mappings":";;;;;;AAAA,OAAA,YAAA;AACA,OAAA,gBAAA;AAEA,gBAAe,UAAA,YAAA,EAA+B;AAAA,MAAhBA,MAAgB,uEAA/B,EAA+B;AAC5CA,EAAAA,MAAM,qBAAQA,MAAR,CAANA;AACAA,EAAAA,MAAM,GAAGC,gBAAgB,CAAA,MAAA,EAAA,aAAA,EAAzBD,KAAyB,CAAzBA;AACAA,EAAAA,MAAM,GAAGC,gBAAgB,CAAA,MAAA,EAAA,cAAA,EAAzBD,cAAyB,CAAzBA;AAEA,MAAME,YAAY,GAAGC,YAAY,CAAA,YAAA,EAAjC,MAAiC,CAAjC;AACA,SAAA,YAAA;AANF,CAAA","sourcesContent":["import SwitchRouter from './SwitchRouter';\nimport withDefaultValue from '../utils/withDefaultValue';\n\nexport default (routeConfigs, config = {}) => {\n  config = { ...config };\n  config = withDefaultValue(config, 'resetOnBlur', false);\n  config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n\n  const switchRouter = SwitchRouter(routeConfigs, config);\n  return switchRouter;\n};\n"]},"metadata":{},"sourceType":"module"}