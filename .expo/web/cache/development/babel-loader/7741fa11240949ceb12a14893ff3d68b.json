{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar IS_ANDROID = Platform.OS === 'android';\nexport function getInputRangeFromIndexes(range, index, carouselProps) {\n  var sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n  var inputRange = [];\n\n  for (var i = 0; i < range.length; i++) {\n    inputRange.push((index - range[i]) * sizeRef);\n  }\n\n  return inputRange;\n}\nexport function defaultScrollInterpolator(index, carouselProps) {\n  var range = [1, 0, -1];\n  var inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n  var outputRange = [0, 1, 0];\n  return {\n    inputRange: inputRange,\n    outputRange: outputRange\n  };\n}\nexport function defaultAnimatedStyles(index, animatedValue, carouselProps) {\n  var animatedOpacity = {};\n  var animatedScale = {};\n\n  if (carouselProps.inactiveSlideOpacity < 1) {\n    animatedOpacity = {\n      opacity: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [carouselProps.inactiveSlideOpacity, 1]\n      })\n    };\n  }\n\n  if (carouselProps.inactiveSlideScale < 1) {\n    animatedScale = {\n      transform: [{\n        scale: animatedValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [carouselProps.inactiveSlideScale, 1]\n        })\n      }]\n    };\n  }\n\n  return _objectSpread(_objectSpread({}, animatedOpacity), animatedScale);\n}\nexport function shiftAnimatedStyles(index, animatedValue, carouselProps) {\n  var animatedOpacity = {};\n  var animatedScale = {};\n  var animatedTranslate = {};\n\n  if (carouselProps.inactiveSlideOpacity < 1) {\n    animatedOpacity = {\n      opacity: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [carouselProps.inactiveSlideOpacity, 1]\n      })\n    };\n  }\n\n  if (carouselProps.inactiveSlideScale < 1) {\n    animatedScale = {\n      scale: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [carouselProps.inactiveSlideScale, 1]\n      })\n    };\n  }\n\n  if (carouselProps.inactiveSlideShift !== 0) {\n    var translateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n    animatedTranslate = _defineProperty({}, translateProp, animatedValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [carouselProps.inactiveSlideShift, 0]\n    }));\n  }\n\n  return _objectSpread(_objectSpread({}, animatedOpacity), {}, {\n    transform: [_objectSpread({}, animatedScale), _objectSpread({}, animatedTranslate)]\n  });\n}\nexport function stackScrollInterpolator(index, carouselProps) {\n  var range = IS_ANDROID ? [1, 0, -1, -2, -3] : [3, 2, 1, 0, -1];\n  var inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n  var outputRange = range;\n  return {\n    inputRange: inputRange,\n    outputRange: outputRange\n  };\n}\nexport function stackAnimatedStyles(index, animatedValue, carouselProps, cardOffset) {\n  var sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n  var translateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n  var card1Scale = 0.9;\n  var card2Scale = 0.8;\n  cardOffset = !cardOffset && cardOffset !== 0 ? 18 : cardOffset;\n\n  var getTranslateFromScale = function getTranslateFromScale(cardIndex, scale) {\n    var centerFactor = 1 / scale * cardIndex;\n    var centeredPosition = -Math.round(sizeRef * centerFactor);\n    var edgeAlignment = Math.round((sizeRef - sizeRef * scale) / 2);\n    var offset = Math.round(cardOffset * Math.abs(cardIndex) / scale);\n    return IS_ANDROID ? centeredPosition - edgeAlignment - offset : centeredPosition + edgeAlignment + offset;\n  };\n\n  var opacityOutputRange = carouselProps.inactiveSlideOpacity === 1 ? [1, 1, 1, 0] : [1, 0.75, 0.5, 0];\n  return IS_ANDROID ? {\n    opacity: animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0],\n      outputRange: opacityOutputRange.reverse(),\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [-2, -1, 0, 1],\n        outputRange: [card2Scale, card1Scale, 1, card1Scale],\n        extrapolate: 'clamp'\n      })\n    }, _defineProperty({}, translateProp, animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0, 1],\n      outputRange: [getTranslateFromScale(-3, card2Scale), getTranslateFromScale(-2, card2Scale), getTranslateFromScale(-1, card1Scale), 0, sizeRef * 0.5],\n      extrapolate: 'clamp'\n    }))]\n  } : {\n    zIndex: carouselProps.data.length - index,\n    opacity: animatedValue.interpolate({\n      inputRange: [0, 1, 2, 3],\n      outputRange: opacityOutputRange,\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [-1, 0, 1, 2],\n        outputRange: [card1Scale, 1, card1Scale, card2Scale],\n        extrapolate: 'clamp'\n      })\n    }, _defineProperty({}, translateProp, animatedValue.interpolate({\n      inputRange: [-1, 0, 1, 2, 3],\n      outputRange: [-sizeRef * 0.5, 0, getTranslateFromScale(1, card1Scale), getTranslateFromScale(2, card2Scale), getTranslateFromScale(3, card2Scale)],\n      extrapolate: 'clamp'\n    }))]\n  };\n}\nexport function tinderScrollInterpolator(index, carouselProps) {\n  var range = IS_ANDROID ? [1, 0, -1, -2, -3] : [3, 2, 1, 0, -1];\n  var inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n  var outputRange = range;\n  return {\n    inputRange: inputRange,\n    outputRange: outputRange\n  };\n}\nexport function tinderAnimatedStyles(index, animatedValue, carouselProps, cardOffset) {\n  var sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n  var mainTranslateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n  var secondaryTranslateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n  var card1Scale = 0.96;\n  var card2Scale = 0.92;\n  var card3Scale = 0.88;\n  var peekingCardsOpacity = IS_ANDROID ? 0.92 : 1;\n  cardOffset = !cardOffset && cardOffset !== 0 ? 9 : cardOffset;\n\n  var getMainTranslateFromScale = function getMainTranslateFromScale(cardIndex, scale) {\n    var centerFactor = 1 / scale * cardIndex;\n    return -Math.round(sizeRef * centerFactor);\n  };\n\n  var getSecondaryTranslateFromScale = function getSecondaryTranslateFromScale(cardIndex, scale) {\n    return Math.round(cardOffset * Math.abs(cardIndex) / scale);\n  };\n\n  return IS_ANDROID ? {\n    opacity: animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0, 1],\n      outputRange: [0, peekingCardsOpacity, peekingCardsOpacity, 1, 0],\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [-3, -2, -1, 0],\n        outputRange: [card3Scale, card2Scale, card1Scale, 1],\n        extrapolate: 'clamp'\n      })\n    }, {\n      rotate: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '22deg'],\n        extrapolate: 'clamp'\n      })\n    }, _defineProperty({}, mainTranslateProp, animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0, 1],\n      outputRange: [getMainTranslateFromScale(-3, card3Scale), getMainTranslateFromScale(-2, card2Scale), getMainTranslateFromScale(-1, card1Scale), 0, sizeRef * 1.1],\n      extrapolate: 'clamp'\n    })), _defineProperty({}, secondaryTranslateProp, animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0],\n      outputRange: [getSecondaryTranslateFromScale(-3, card3Scale), getSecondaryTranslateFromScale(-2, card2Scale), getSecondaryTranslateFromScale(-1, card1Scale), 0],\n      extrapolate: 'clamp'\n    }))]\n  } : {\n    zIndex: carouselProps.data.length - index,\n    opacity: animatedValue.interpolate({\n      inputRange: [-1, 0, 1, 2, 3],\n      outputRange: [0, 1, peekingCardsOpacity, peekingCardsOpacity, 0],\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [0, 1, 2, 3],\n        outputRange: [1, card1Scale, card2Scale, card3Scale],\n        extrapolate: 'clamp'\n      })\n    }, {\n      rotate: animatedValue.interpolate({\n        inputRange: [-1, 0],\n        outputRange: ['-22deg', '0deg'],\n        extrapolate: 'clamp'\n      })\n    }, _defineProperty({}, mainTranslateProp, animatedValue.interpolate({\n      inputRange: [-1, 0, 1, 2, 3],\n      outputRange: [-sizeRef * 1.1, 0, getMainTranslateFromScale(1, card1Scale), getMainTranslateFromScale(2, card2Scale), getMainTranslateFromScale(3, card3Scale)],\n      extrapolate: 'clamp'\n    })), _defineProperty({}, secondaryTranslateProp, animatedValue.interpolate({\n      inputRange: [0, 1, 2, 3],\n      outputRange: [0, getSecondaryTranslateFromScale(1, card1Scale), getSecondaryTranslateFromScale(2, card2Scale), getSecondaryTranslateFromScale(3, card3Scale)],\n      extrapolate: 'clamp'\n    }))]\n  };\n}","map":{"version":3,"sources":["C:/learning/Group-Project/node_modules/react-native-snap-carousel/src/utils/animations.js"],"names":["IS_ANDROID","Platform","OS","getInputRangeFromIndexes","range","index","carouselProps","sizeRef","vertical","itemHeight","itemWidth","inputRange","i","length","push","defaultScrollInterpolator","outputRange","defaultAnimatedStyles","animatedValue","animatedOpacity","animatedScale","inactiveSlideOpacity","opacity","interpolate","inactiveSlideScale","transform","scale","shiftAnimatedStyles","animatedTranslate","inactiveSlideShift","translateProp","stackScrollInterpolator","stackAnimatedStyles","cardOffset","card1Scale","card2Scale","getTranslateFromScale","cardIndex","centerFactor","centeredPosition","Math","round","edgeAlignment","offset","abs","opacityOutputRange","reverse","extrapolate","zIndex","data","tinderScrollInterpolator","tinderAnimatedStyles","mainTranslateProp","secondaryTranslateProp","card3Scale","peekingCardsOpacity","getMainTranslateFromScale","getSecondaryTranslateFromScale","rotate"],"mappings":";;;;;;;AAEA,IAAMA,UAAU,GAAGC,QAAQ,CAACC,EAAT,KAAgB,SAAnC;AAYA,OAAO,SAASC,wBAAT,CAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,aAAjD,EAAgE;AACnE,MAAMC,OAAO,GAAGD,aAAa,CAACE,QAAd,GAAyBF,aAAa,CAACG,UAAvC,GAAoDH,aAAa,CAACI,SAAlF;AACA,MAAIC,UAAU,GAAG,EAAjB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACS,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCD,IAAAA,UAAU,CAACG,IAAX,CAAgB,CAACT,KAAK,GAAGD,KAAK,CAACQ,CAAD,CAAd,IAAqBL,OAArC;AACH;;AAED,SAAOI,UAAP;AACH;AAKD,OAAO,SAASI,yBAAT,CAAoCV,KAApC,EAA2CC,aAA3C,EAA0D;AAC7D,MAAMF,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,CAAd;AACA,MAAMO,UAAU,GAAGR,wBAAwB,CAACC,KAAD,EAAQC,KAAR,EAAeC,aAAf,CAA3C;AACA,MAAMU,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApB;AAEA,SAAO;AAAEL,IAAAA,UAAU,EAAVA,UAAF;AAAcK,IAAAA,WAAW,EAAXA;AAAd,GAAP;AACH;AACD,OAAO,SAASC,qBAAT,CAAgCZ,KAAhC,EAAuCa,aAAvC,EAAsDZ,aAAtD,EAAqE;AACxE,MAAIa,eAAe,GAAG,EAAtB;AACA,MAAIC,aAAa,GAAG,EAApB;;AAEA,MAAId,aAAa,CAACe,oBAAd,GAAqC,CAAzC,EAA4C;AACxCF,IAAAA,eAAe,GAAG;AACdG,MAAAA,OAAO,EAAEJ,aAAa,CAACK,WAAd,CAA0B;AAC/BZ,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADmB;AAE/BK,QAAAA,WAAW,EAAE,CAACV,aAAa,CAACe,oBAAf,EAAqC,CAArC;AAFkB,OAA1B;AADK,KAAlB;AAMH;;AAED,MAAIf,aAAa,CAACkB,kBAAd,GAAmC,CAAvC,EAA0C;AACtCJ,IAAAA,aAAa,GAAG;AACZK,MAAAA,SAAS,EAAE,CAAC;AACRC,QAAAA,KAAK,EAAER,aAAa,CAACK,WAAd,CAA0B;AAC7BZ,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADiB;AAE7BK,UAAAA,WAAW,EAAE,CAACV,aAAa,CAACkB,kBAAf,EAAmC,CAAnC;AAFgB,SAA1B;AADC,OAAD;AADC,KAAhB;AAQH;;AAED,yCACOL,eADP,GAEOC,aAFP;AAIH;AAKD,OAAO,SAASO,mBAAT,CAA8BtB,KAA9B,EAAqCa,aAArC,EAAoDZ,aAApD,EAAmE;AACtE,MAAIa,eAAe,GAAG,EAAtB;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIQ,iBAAiB,GAAG,EAAxB;;AAEA,MAAItB,aAAa,CAACe,oBAAd,GAAqC,CAAzC,EAA4C;AACxCF,IAAAA,eAAe,GAAG;AACdG,MAAAA,OAAO,EAAEJ,aAAa,CAACK,WAAd,CAA0B;AAC/BZ,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADmB;AAE/BK,QAAAA,WAAW,EAAE,CAACV,aAAa,CAACe,oBAAf,EAAqC,CAArC;AAFkB,OAA1B;AADK,KAAlB;AAMH;;AAED,MAAIf,aAAa,CAACkB,kBAAd,GAAmC,CAAvC,EAA0C;AACtCJ,IAAAA,aAAa,GAAG;AACZM,MAAAA,KAAK,EAAER,aAAa,CAACK,WAAd,CAA0B;AAC7BZ,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADiB;AAE7BK,QAAAA,WAAW,EAAE,CAACV,aAAa,CAACkB,kBAAf,EAAmC,CAAnC;AAFgB,OAA1B;AADK,KAAhB;AAMH;;AAED,MAAIlB,aAAa,CAACuB,kBAAd,KAAqC,CAAzC,EAA4C;AACxC,QAAMC,aAAa,GAAGxB,aAAa,CAACE,QAAd,GAAyB,YAAzB,GAAwC,YAA9D;AACAoB,IAAAA,iBAAiB,uBACZE,aADY,EACIZ,aAAa,CAACK,WAAd,CAA0B;AACvCZ,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD2B;AAEvCK,MAAAA,WAAW,EAAE,CAACV,aAAa,CAACuB,kBAAf,EAAmC,CAAnC;AAF0B,KAA1B,CADJ,CAAjB;AAMH;;AAED,yCACOV,eADP;AAEIM,IAAAA,SAAS,EAAE,mBACFL,aADE,qBAEFQ,iBAFE;AAFf;AAOH;AAOD,OAAO,SAASG,uBAAT,CAAkC1B,KAAlC,EAAyCC,aAAzC,EAAwD;AAC3D,MAAMF,KAAK,GAAGJ,UAAU,GACpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CADoB,GAEpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAC,CAAd,CAFJ;AAGA,MAAMW,UAAU,GAAGR,wBAAwB,CAACC,KAAD,EAAQC,KAAR,EAAeC,aAAf,CAA3C;AACA,MAAMU,WAAW,GAAGZ,KAApB;AAEA,SAAO;AAAEO,IAAAA,UAAU,EAAVA,UAAF;AAAcK,IAAAA,WAAW,EAAXA;AAAd,GAAP;AACH;AACD,OAAO,SAASgB,mBAAT,CAA8B3B,KAA9B,EAAqCa,aAArC,EAAoDZ,aAApD,EAAmE2B,UAAnE,EAA+E;AAClF,MAAM1B,OAAO,GAAGD,aAAa,CAACE,QAAd,GAAyBF,aAAa,CAACG,UAAvC,GAAoDH,aAAa,CAACI,SAAlF;AACA,MAAMoB,aAAa,GAAGxB,aAAa,CAACE,QAAd,GAAyB,YAAzB,GAAwC,YAA9D;AAEA,MAAM0B,UAAU,GAAG,GAAnB;AACA,MAAMC,UAAU,GAAG,GAAnB;AAEAF,EAAAA,UAAU,GAAG,CAACA,UAAD,IAAeA,UAAU,KAAK,CAA9B,GAAkC,EAAlC,GAAuCA,UAApD;;AAEA,MAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,SAAD,EAAYX,KAAZ,EAAsB;AAChD,QAAMY,YAAY,GAAG,IAAIZ,KAAJ,GAAYW,SAAjC;AACA,QAAME,gBAAgB,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWlC,OAAO,GAAG+B,YAArB,CAA1B;AACA,QAAMI,aAAa,GAAGF,IAAI,CAACC,KAAL,CAAW,CAAClC,OAAO,GAAIA,OAAO,GAAGmB,KAAtB,IAAgC,CAA3C,CAAtB;AACA,QAAMiB,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAWR,UAAU,GAAGO,IAAI,CAACI,GAAL,CAASP,SAAT,CAAb,GAAmCX,KAA9C,CAAf;AAEA,WAAO1B,UAAU,GACbuC,gBAAgB,GAAGG,aAAnB,GAAmCC,MADtB,GAEbJ,gBAAgB,GAAGG,aAAnB,GAAmCC,MAFvC;AAGH,GATD;;AAWA,MAAME,kBAAkB,GAAGvC,aAAa,CAACe,oBAAd,KAAuC,CAAvC,GAA2C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA3C,GAA0D,CAAC,CAAD,EAAI,IAAJ,EAAU,GAAV,EAAe,CAAf,CAArF;AAEA,SAAOrB,UAAU,GAAG;AAEhBsB,IAAAA,OAAO,EAAEJ,aAAa,CAACK,WAAd,CAA0B;AAC/BZ,MAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,CADmB;AAE/BK,MAAAA,WAAW,EAAE6B,kBAAkB,CAACC,OAAnB,EAFkB;AAG/BC,MAAAA,WAAW,EAAE;AAHkB,KAA1B,CAFO;AAOhBtB,IAAAA,SAAS,EAAE,CAAC;AACRC,MAAAA,KAAK,EAAER,aAAa,CAACK,WAAd,CAA0B;AAC7BZ,QAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,CADiB;AAE7BK,QAAAA,WAAW,EAAE,CAACmB,UAAD,EAAaD,UAAb,EAAyB,CAAzB,EAA4BA,UAA5B,CAFgB;AAG7Ba,QAAAA,WAAW,EAAE;AAHgB,OAA1B;AADC,KAAD,sBAONjB,aAPM,EAOUZ,aAAa,CAACK,WAAd,CAA0B;AACvCZ,MAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAD2B;AAEvCK,MAAAA,WAAW,EAAE,CACToB,qBAAqB,CAAC,CAAC,CAAF,EAAKD,UAAL,CADZ,EAETC,qBAAqB,CAAC,CAAC,CAAF,EAAKD,UAAL,CAFZ,EAGTC,qBAAqB,CAAC,CAAC,CAAF,EAAKF,UAAL,CAHZ,EAIT,CAJS,EAKT3B,OAAO,GAAG,GALD,CAF0B;AASvCwC,MAAAA,WAAW,EAAE;AAT0B,KAA1B,CAPV;AAPK,GAAH,GA0Bb;AACAC,IAAAA,MAAM,EAAE1C,aAAa,CAAC2C,IAAd,CAAmBpC,MAAnB,GAA4BR,KADpC;AAEAiB,IAAAA,OAAO,EAAEJ,aAAa,CAACK,WAAd,CAA0B;AAC/BZ,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADmB;AAE/BK,MAAAA,WAAW,EAAE6B,kBAFkB;AAG/BE,MAAAA,WAAW,EAAE;AAHkB,KAA1B,CAFT;AAOAtB,IAAAA,SAAS,EAAE,CAAC;AACRC,MAAAA,KAAK,EAAER,aAAa,CAACK,WAAd,CAA0B;AAC7BZ,QAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,CADiB;AAE7BK,QAAAA,WAAW,EAAE,CAACkB,UAAD,EAAa,CAAb,EAAgBA,UAAhB,EAA4BC,UAA5B,CAFgB;AAG7BY,QAAAA,WAAW,EAAE;AAHgB,OAA1B;AADC,KAAD,sBAONjB,aAPM,EAOUZ,aAAa,CAACK,WAAd,CAA0B;AACvCZ,MAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CAD2B;AAEvCK,MAAAA,WAAW,EAAE,CACT,CAACT,OAAD,GAAW,GADF,EAET,CAFS,EAGT6B,qBAAqB,CAAC,CAAD,EAAIF,UAAJ,CAHZ,EAITE,qBAAqB,CAAC,CAAD,EAAID,UAAJ,CAJZ,EAKTC,qBAAqB,CAAC,CAAD,EAAID,UAAJ,CALZ,CAF0B;AASvCY,MAAAA,WAAW,EAAE;AAT0B,KAA1B,CAPV;AAPX,GA1BJ;AAqDH;AAOD,OAAO,SAASG,wBAAT,CAAmC7C,KAAnC,EAA0CC,aAA1C,EAAyD;AAC5D,MAAMF,KAAK,GAAGJ,UAAU,GACpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CADoB,GAEpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAC,CAAd,CAFJ;AAGA,MAAMW,UAAU,GAAGR,wBAAwB,CAACC,KAAD,EAAQC,KAAR,EAAeC,aAAf,CAA3C;AACA,MAAMU,WAAW,GAAGZ,KAApB;AAEA,SAAO;AAAEO,IAAAA,UAAU,EAAVA,UAAF;AAAcK,IAAAA,WAAW,EAAXA;AAAd,GAAP;AACH;AACD,OAAO,SAASmC,oBAAT,CAA+B9C,KAA/B,EAAsCa,aAAtC,EAAqDZ,aAArD,EAAoE2B,UAApE,EAAgF;AACnF,MAAM1B,OAAO,GAAGD,aAAa,CAACE,QAAd,GAAyBF,aAAa,CAACG,UAAvC,GAAoDH,aAAa,CAACI,SAAlF;AACA,MAAM0C,iBAAiB,GAAG9C,aAAa,CAACE,QAAd,GAAyB,YAAzB,GAAwC,YAAlE;AACA,MAAM6C,sBAAsB,GAAG/C,aAAa,CAACE,QAAd,GAAyB,YAAzB,GAAwC,YAAvE;AAEA,MAAM0B,UAAU,GAAG,IAAnB;AACA,MAAMC,UAAU,GAAG,IAAnB;AACA,MAAMmB,UAAU,GAAG,IAAnB;AAEA,MAAMC,mBAAmB,GAAGvD,UAAU,GAAG,IAAH,GAAU,CAAhD;AAEAiC,EAAAA,UAAU,GAAG,CAACA,UAAD,IAAeA,UAAU,KAAK,CAA9B,GAAkC,CAAlC,GAAsCA,UAAnD;;AAEA,MAAMuB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACnB,SAAD,EAAYX,KAAZ,EAAsB;AACpD,QAAMY,YAAY,GAAG,IAAIZ,KAAJ,GAAYW,SAAjC;AACA,WAAO,CAACG,IAAI,CAACC,KAAL,CAAWlC,OAAO,GAAG+B,YAArB,CAAR;AACH,GAHD;;AAKA,MAAMmB,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACpB,SAAD,EAAYX,KAAZ,EAAsB;AACzD,WAAOc,IAAI,CAACC,KAAL,CAAWR,UAAU,GAAGO,IAAI,CAACI,GAAL,CAASP,SAAT,CAAb,GAAmCX,KAA9C,CAAP;AACH,GAFD;;AAIA,SAAO1B,UAAU,GAAG;AAEhBsB,IAAAA,OAAO,EAAEJ,aAAa,CAACK,WAAd,CAA0B;AAC/BZ,MAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,CADmB;AAE/BK,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAIuC,mBAAJ,EAAyBA,mBAAzB,EAA8C,CAA9C,EAAiD,CAAjD,CAFkB;AAG/BR,MAAAA,WAAW,EAAE;AAHkB,KAA1B,CAFO;AAOhBtB,IAAAA,SAAS,EAAE,CAAC;AACRC,MAAAA,KAAK,EAAER,aAAa,CAACK,WAAd,CAA0B;AAC7BZ,QAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,CADiB;AAE7BK,QAAAA,WAAW,EAAE,CAACsC,UAAD,EAAanB,UAAb,EAAyBD,UAAzB,EAAqC,CAArC,CAFgB;AAG7Ba,QAAAA,WAAW,EAAE;AAHgB,OAA1B;AADC,KAAD,EAMR;AACCW,MAAAA,MAAM,EAAExC,aAAa,CAACK,WAAd,CAA0B;AAC9BZ,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkB;AAE9BK,QAAAA,WAAW,EAAE,CAAC,MAAD,EAAS,OAAT,CAFiB;AAG9B+B,QAAAA,WAAW,EAAE;AAHiB,OAA1B;AADT,KANQ,sBAaNK,iBAbM,EAaclC,aAAa,CAACK,WAAd,CAA0B;AAC3CZ,MAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAD+B;AAE3CK,MAAAA,WAAW,EAAE,CACTwC,yBAAyB,CAAC,CAAC,CAAF,EAAKF,UAAL,CADhB,EAETE,yBAAyB,CAAC,CAAC,CAAF,EAAKrB,UAAL,CAFhB,EAGTqB,yBAAyB,CAAC,CAAC,CAAF,EAAKtB,UAAL,CAHhB,EAIT,CAJS,EAKT3B,OAAO,GAAG,GALD,CAF8B;AAS3CwC,MAAAA,WAAW,EAAE;AAT8B,KAA1B,CAbd,uBAyBNM,sBAzBM,EAyBmBnC,aAAa,CAACK,WAAd,CAA0B;AAChDZ,MAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,CADoC;AAEhDK,MAAAA,WAAW,EAAE,CACTyC,8BAA8B,CAAC,CAAC,CAAF,EAAKH,UAAL,CADrB,EAETG,8BAA8B,CAAC,CAAC,CAAF,EAAKtB,UAAL,CAFrB,EAGTsB,8BAA8B,CAAC,CAAC,CAAF,EAAKvB,UAAL,CAHrB,EAIT,CAJS,CAFmC;AAQhDa,MAAAA,WAAW,EAAE;AARmC,KAA1B,CAzBnB;AAPK,GAAH,GA2Cb;AACAC,IAAAA,MAAM,EAAE1C,aAAa,CAAC2C,IAAd,CAAmBpC,MAAnB,GAA4BR,KADpC;AAEAiB,IAAAA,OAAO,EAAEJ,aAAa,CAACK,WAAd,CAA0B;AAC/BZ,MAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CADmB;AAE/BK,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAOuC,mBAAP,EAA4BA,mBAA5B,EAAiD,CAAjD,CAFkB;AAG/BR,MAAAA,WAAW,EAAE;AAHkB,KAA1B,CAFT;AAOAtB,IAAAA,SAAS,EAAE,CAAC;AACRC,MAAAA,KAAK,EAAER,aAAa,CAACK,WAAd,CAA0B;AAC7BZ,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADiB;AAE7BK,QAAAA,WAAW,EAAE,CAAC,CAAD,EAAIkB,UAAJ,EAAgBC,UAAhB,EAA4BmB,UAA5B,CAFgB;AAG7BP,QAAAA,WAAW,EAAE;AAHgB,OAA1B;AADC,KAAD,EAMR;AACCW,MAAAA,MAAM,EAAExC,aAAa,CAACK,WAAd,CAA0B;AAC9BZ,QAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CADkB;AAE9BK,QAAAA,WAAW,EAAE,CAAC,QAAD,EAAW,MAAX,CAFiB;AAG9B+B,QAAAA,WAAW,EAAE;AAHiB,OAA1B;AADT,KANQ,sBAaNK,iBAbM,EAaclC,aAAa,CAACK,WAAd,CAA0B;AAC3CZ,MAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CAD+B;AAE3CK,MAAAA,WAAW,EAAE,CACT,CAACT,OAAD,GAAW,GADF,EAET,CAFS,EAGTiD,yBAAyB,CAAC,CAAD,EAAItB,UAAJ,CAHhB,EAITsB,yBAAyB,CAAC,CAAD,EAAIrB,UAAJ,CAJhB,EAKTqB,yBAAyB,CAAC,CAAD,EAAIF,UAAJ,CALhB,CAF8B;AAS3CP,MAAAA,WAAW,EAAE;AAT8B,KAA1B,CAbd,uBAyBNM,sBAzBM,EAyBmBnC,aAAa,CAACK,WAAd,CAA0B;AAChDZ,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADoC;AAEhDK,MAAAA,WAAW,EAAE,CACT,CADS,EAETyC,8BAA8B,CAAC,CAAD,EAAIvB,UAAJ,CAFrB,EAGTuB,8BAA8B,CAAC,CAAD,EAAItB,UAAJ,CAHrB,EAITsB,8BAA8B,CAAC,CAAD,EAAIH,UAAJ,CAJrB,CAFmC;AAQhDP,MAAAA,WAAW,EAAE;AARmC,KAA1B,CAzBnB;AAPX,GA3CJ;AAuFH","sourcesContent":["import { Platform } from 'react-native';\n\nconst IS_ANDROID = Platform.OS === 'android';\n\n// Get scroll interpolator's input range from an array of slide indexes\n// Indexes are relative to the current active slide (index 0)\n// For example, using [3, 2, 1, 0, -1] will return:\n// [\n//     (index - 3) * sizeRef, // active + 3\n//     (index - 2) * sizeRef, // active + 2\n//     (index - 1) * sizeRef, // active + 1\n//     index * sizeRef, // active\n//     (index + 1) * sizeRef // active - 1\n// ]\nexport function getInputRangeFromIndexes (range, index, carouselProps) {\n    const sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n    let inputRange = [];\n\n    for (let i = 0; i < range.length; i++) {\n        inputRange.push((index - range[i]) * sizeRef);\n    }\n\n    return inputRange;\n}\n\n// Default behavior\n// Scale and/or opacity effect\n// Based on props 'inactiveSlideOpacity' and 'inactiveSlideScale'\nexport function defaultScrollInterpolator (index, carouselProps) {\n    const range = [1, 0, -1];\n    const inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n    const outputRange = [0, 1, 0];\n\n    return { inputRange, outputRange };\n}\nexport function defaultAnimatedStyles (index, animatedValue, carouselProps) {\n    let animatedOpacity = {};\n    let animatedScale = {};\n\n    if (carouselProps.inactiveSlideOpacity < 1) {\n        animatedOpacity = {\n            opacity: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideOpacity, 1]\n            })\n        };\n    }\n\n    if (carouselProps.inactiveSlideScale < 1) {\n        animatedScale = {\n            transform: [{\n                scale: animatedValue.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [carouselProps.inactiveSlideScale, 1]\n                })\n            }]\n        };\n    }\n\n    return {\n        ...animatedOpacity,\n        ...animatedScale\n    };\n}\n\n// Shift animation\n// Same as the default one, but the active slide is also shifted up or down\n// Based on prop 'inactiveSlideShift'\nexport function shiftAnimatedStyles (index, animatedValue, carouselProps) {\n    let animatedOpacity = {};\n    let animatedScale = {};\n    let animatedTranslate = {};\n\n    if (carouselProps.inactiveSlideOpacity < 1) {\n        animatedOpacity = {\n            opacity: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideOpacity, 1]\n            })\n        };\n    }\n\n    if (carouselProps.inactiveSlideScale < 1) {\n        animatedScale = {\n            scale: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideScale, 1]\n            })\n        };\n    }\n\n    if (carouselProps.inactiveSlideShift !== 0) {\n        const translateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n        animatedTranslate = {\n            [translateProp]: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideShift, 0]\n            })\n        };\n    }\n\n    return {\n        ...animatedOpacity,\n        transform: [\n            { ...animatedScale },\n            { ...animatedTranslate }\n        ]\n    };\n}\n\n// Stack animation\n// Imitate a deck/stack of cards (see #195)\n// WARNING: The effect had to be visually inverted on Android because this OS doesn't honor the `zIndex`property\n// This means that the item with the higher zIndex (and therefore the tap receiver) remains the one AFTER the currently active item\n// The `elevation` property compensates for that only visually, which is not good enough\nexport function stackScrollInterpolator (index, carouselProps) {\n    const range = IS_ANDROID ?\n        [1, 0, -1, -2, -3] :\n        [3, 2, 1, 0, -1];\n    const inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n    const outputRange = range;\n\n    return { inputRange, outputRange };\n}\nexport function stackAnimatedStyles (index, animatedValue, carouselProps, cardOffset) {\n    const sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n    const translateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n\n    const card1Scale = 0.9;\n    const card2Scale = 0.8;\n\n    cardOffset = !cardOffset && cardOffset !== 0 ? 18 : cardOffset;\n\n    const getTranslateFromScale = (cardIndex, scale) => {\n        const centerFactor = 1 / scale * cardIndex;\n        const centeredPosition = -Math.round(sizeRef * centerFactor);\n        const edgeAlignment = Math.round((sizeRef - (sizeRef * scale)) / 2);\n        const offset = Math.round(cardOffset * Math.abs(cardIndex) / scale);\n\n        return IS_ANDROID ?\n            centeredPosition - edgeAlignment - offset :\n            centeredPosition + edgeAlignment + offset;\n    };\n\n    const opacityOutputRange = carouselProps.inactiveSlideOpacity === 1 ? [1, 1, 1, 0] : [1, 0.75, 0.5, 0];\n\n    return IS_ANDROID ? {\n        // elevation: carouselProps.data.length - index, // fix zIndex bug visually, but not from a logic point of view\n        opacity: animatedValue.interpolate({\n            inputRange: [-3, -2, -1, 0],\n            outputRange: opacityOutputRange.reverse(),\n            extrapolate: 'clamp'\n        }),\n        transform: [{\n            scale: animatedValue.interpolate({\n                inputRange: [-2, -1, 0, 1],\n                outputRange: [card2Scale, card1Scale, 1, card1Scale],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [translateProp]: animatedValue.interpolate({\n                inputRange: [-3, -2, -1, 0, 1],\n                outputRange: [\n                    getTranslateFromScale(-3, card2Scale),\n                    getTranslateFromScale(-2, card2Scale),\n                    getTranslateFromScale(-1, card1Scale),\n                    0,\n                    sizeRef * 0.5\n                ],\n                extrapolate: 'clamp'\n            })\n        }]\n    } : {\n        zIndex: carouselProps.data.length - index,\n        opacity: animatedValue.interpolate({\n            inputRange: [0, 1, 2, 3],\n            outputRange: opacityOutputRange,\n            extrapolate: 'clamp'\n        }),\n        transform: [{\n            scale: animatedValue.interpolate({\n                inputRange: [-1, 0, 1, 2],\n                outputRange: [card1Scale, 1, card1Scale, card2Scale],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [translateProp]: animatedValue.interpolate({\n                inputRange: [-1, 0, 1, 2, 3],\n                outputRange: [\n                    -sizeRef * 0.5,\n                    0,\n                    getTranslateFromScale(1, card1Scale),\n                    getTranslateFromScale(2, card2Scale),\n                    getTranslateFromScale(3, card2Scale)\n                ],\n                extrapolate: 'clamp'\n            })\n        }]\n    };\n}\n\n// Tinder animation\n// Imitate the popular Tinder layout\n// WARNING: The effect had to be visually inverted on Android because this OS doesn't honor the `zIndex`property\n// This means that the item with the higher zIndex (and therefore the tap receiver) remains the one AFTER the currently active item\n// The `elevation` property compensates for that only visually, which is not good enough\nexport function tinderScrollInterpolator (index, carouselProps) {\n    const range = IS_ANDROID ?\n        [1, 0, -1, -2, -3] :\n        [3, 2, 1, 0, -1];\n    const inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n    const outputRange = range;\n\n    return { inputRange, outputRange };\n}\nexport function tinderAnimatedStyles (index, animatedValue, carouselProps, cardOffset) {\n    const sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n    const mainTranslateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n    const secondaryTranslateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n\n    const card1Scale = 0.96;\n    const card2Scale = 0.92;\n    const card3Scale = 0.88;\n\n    const peekingCardsOpacity = IS_ANDROID ? 0.92 : 1;\n\n    cardOffset = !cardOffset && cardOffset !== 0 ? 9 : cardOffset;\n\n    const getMainTranslateFromScale = (cardIndex, scale) => {\n        const centerFactor = 1 / scale * cardIndex;\n        return -Math.round(sizeRef * centerFactor);\n    };\n\n    const getSecondaryTranslateFromScale = (cardIndex, scale) => {\n        return Math.round(cardOffset * Math.abs(cardIndex) / scale);\n    };\n\n    return IS_ANDROID ? {\n        // elevation: carouselProps.data.length - index, // fix zIndex bug visually, but not from a logic point of view\n        opacity: animatedValue.interpolate({\n            inputRange: [-3, -2, -1, 0, 1],\n            outputRange: [0, peekingCardsOpacity, peekingCardsOpacity, 1, 0],\n            extrapolate: 'clamp'\n        }),\n        transform: [{\n            scale: animatedValue.interpolate({\n                inputRange: [-3, -2, -1, 0],\n                outputRange: [card3Scale, card2Scale, card1Scale, 1],\n                extrapolate: 'clamp'\n            })\n        }, {\n            rotate: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: ['0deg', '22deg'],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [mainTranslateProp]: animatedValue.interpolate({\n                inputRange: [-3, -2, -1, 0, 1],\n                outputRange: [\n                    getMainTranslateFromScale(-3, card3Scale),\n                    getMainTranslateFromScale(-2, card2Scale),\n                    getMainTranslateFromScale(-1, card1Scale),\n                    0,\n                    sizeRef * 1.1\n                ],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [secondaryTranslateProp]: animatedValue.interpolate({\n                inputRange: [-3, -2, -1, 0],\n                outputRange: [\n                    getSecondaryTranslateFromScale(-3, card3Scale),\n                    getSecondaryTranslateFromScale(-2, card2Scale),\n                    getSecondaryTranslateFromScale(-1, card1Scale),\n                    0\n                ],\n                extrapolate: 'clamp'\n            })\n        }]\n    } : {\n        zIndex: carouselProps.data.length - index,\n        opacity: animatedValue.interpolate({\n            inputRange: [-1, 0, 1, 2, 3],\n            outputRange: [0, 1, peekingCardsOpacity, peekingCardsOpacity, 0],\n            extrapolate: 'clamp'\n        }),\n        transform: [{\n            scale: animatedValue.interpolate({\n                inputRange: [0, 1, 2, 3],\n                outputRange: [1, card1Scale, card2Scale, card3Scale],\n                extrapolate: 'clamp'\n            })\n        }, {\n            rotate: animatedValue.interpolate({\n                inputRange: [-1, 0],\n                outputRange: ['-22deg', '0deg'],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [mainTranslateProp]: animatedValue.interpolate({\n                inputRange: [-1, 0, 1, 2, 3],\n                outputRange: [\n                    -sizeRef * 1.1,\n                    0,\n                    getMainTranslateFromScale(1, card1Scale),\n                    getMainTranslateFromScale(2, card2Scale),\n                    getMainTranslateFromScale(3, card3Scale)\n                ],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [secondaryTranslateProp]: animatedValue.interpolate({\n                inputRange: [0, 1, 2, 3],\n                outputRange: [\n                    0,\n                    getSecondaryTranslateFromScale(1, card1Scale),\n                    getSecondaryTranslateFromScale(2, card2Scale),\n                    getSecondaryTranslateFromScale(3, card3Scale)\n                ],\n                extrapolate: 'clamp'\n            })\n        }]\n    };\n}\n"]},"metadata":{},"sourceType":"module"}