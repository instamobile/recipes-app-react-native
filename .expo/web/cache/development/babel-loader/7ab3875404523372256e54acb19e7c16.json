{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { StackActions } from 'react-navigation';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\nimport HeaderSegment, { getDefaultHeaderHeight } from \"./HeaderSegment\";\nimport HeaderTitle from \"./HeaderTitle\";\nimport debounce from \"../../utils/debounce\";\nvar Header = React.memo(function Header(props) {\n  var scene = props.scene,\n      previous = props.previous,\n      layout = props.layout,\n      insets = props.insets,\n      navigation = props.navigation,\n      styleInterpolator = props.styleInterpolator;\n  var options = scene.descriptor.options;\n  var title = typeof options.headerTitle !== 'function' && options.headerTitle !== undefined ? options.headerTitle : options.title !== undefined ? options.title : scene.route.routeName;\n  var leftLabel;\n\n  if (options.headerBackTitle !== undefined) {\n    leftLabel = options.headerBackTitle;\n  } else if (previous) {\n    var o = previous.descriptor.options;\n    leftLabel = typeof o.headerTitle !== 'function' && o.headerTitle !== undefined ? o.headerTitle : o.title !== undefined ? o.title : previous.route.routeName;\n  }\n\n  var goBack = React.useCallback(debounce(function () {\n    var _navigation$dangerous;\n\n    var key = navigation.isFirstRouteInParent() ? (_navigation$dangerous = navigation.dangerouslyGetParent()) === null || _navigation$dangerous === void 0 ? void 0 : _navigation$dangerous.state.key : scene.route.key;\n\n    if (key !== undefined) {\n      navigation.dispatch(StackActions.pop({\n        key: key\n      }));\n    }\n  }, 50), [navigation, scene.route.key]);\n  return React.createElement(HeaderSegment, _extends({}, options, {\n    insets: insets,\n    layout: layout,\n    scene: scene,\n    title: title,\n    leftLabel: leftLabel,\n    headerTitle: typeof options.headerTitle !== 'function' ? function (props) {\n      return React.createElement(HeaderTitle, props);\n    } : options.headerTitle,\n    onGoBack: previous ? goBack : undefined,\n    styleInterpolator: styleInterpolator\n  }));\n});\nObject.defineProperty(Header, 'HEIGHT', {\n  get: function get() {\n    console.warn(\"Deprecation in 'createStackNavigator': 'Header.HEIGHT' will be removed in a future version. Use 'useHeaderHeight' or 'HeaderHeightContext' instead\");\n    return getDefaultHeaderHeight(Dimensions.get('window'), getStatusBarHeight(true));\n  }\n});\nexport default Header;","map":{"version":3,"sources":["Header.tsx"],"names":["Header","styleInterpolator","options","scene","title","leftLabel","o","previous","goBack","debounce","key","navigation","props","Object","get","console","getDefaultHeaderHeight","Dimensions","getStatusBarHeight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Dimensions } from 'react-native';\nimport { StackActions } from 'react-navigation';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\n\nimport HeaderSegment, { getDefaultHeaderHeight } from './HeaderSegment';\n\nimport HeaderTitle from './HeaderTitle';\nimport debounce from '../../utils/debounce';\nimport type { StackHeaderProps, StackHeaderTitleProps } from '../../types';\n\nconst Header = React.memo(function Header(props: StackHeaderProps) {\n  const {\n    scene,\n    previous,\n    layout,\n    insets,\n    navigation,\n    styleInterpolator,\n  } = props;\n  const { options } = scene.descriptor;\n  const title =\n    typeof options.headerTitle !== 'function' &&\n    options.headerTitle !== undefined\n      ? options.headerTitle\n      : options.title !== undefined\n      ? options.title\n      : scene.route.routeName;\n\n  let leftLabel;\n\n  // The label for the left back button shows the title of the previous screen\n  // If a custom label is specified, we use it, otherwise use previous screen's title\n  if (options.headerBackTitle !== undefined) {\n    leftLabel = options.headerBackTitle;\n  } else if (previous) {\n    const o = previous.descriptor.options;\n\n    leftLabel =\n      typeof o.headerTitle !== 'function' && o.headerTitle !== undefined\n        ? o.headerTitle\n        : o.title !== undefined\n        ? o.title\n        : previous.route.routeName;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goBack = React.useCallback(\n    debounce(() => {\n      const key = navigation.isFirstRouteInParent()\n        ? // If we're the first route, we're going back to a parent navigator\n          // So we need to get the key of the route we're nested in\n          navigation.dangerouslyGetParent()?.state.key\n        : scene.route.key;\n\n      if (key !== undefined) {\n        navigation.dispatch(StackActions.pop({ key }));\n      }\n    }, 50),\n    [navigation, scene.route.key]\n  );\n\n  return (\n    <HeaderSegment\n      {...options}\n      insets={insets}\n      layout={layout}\n      scene={scene}\n      title={title}\n      leftLabel={leftLabel}\n      headerTitle={\n        typeof options.headerTitle !== 'function'\n          ? (props: StackHeaderTitleProps) => {\n              // @ts-ignore\n              return <HeaderTitle {...props} />;\n            }\n          : options.headerTitle\n      }\n      onGoBack={previous ? goBack : undefined}\n      styleInterpolator={styleInterpolator}\n    />\n  );\n});\n\nObject.defineProperty(Header, 'HEIGHT', {\n  get() {\n    console.warn(\n      \"Deprecation in 'createStackNavigator': 'Header.HEIGHT' will be removed in a future version. Use 'useHeaderHeight' or 'HeaderHeightContext' instead\"\n    );\n\n    return getDefaultHeaderHeight(\n      Dimensions.get('window'),\n      getStatusBarHeight(true)\n    );\n  },\n});\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}