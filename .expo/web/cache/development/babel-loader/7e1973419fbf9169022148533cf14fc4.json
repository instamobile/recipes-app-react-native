{"ast":null,"code":"'use strict';\n\nfunction stiffnessFromOrigamiValue(oValue) {\n  return (oValue - 30) * 3.62 + 194;\n}\n\nfunction dampingFromOrigamiValue(oValue) {\n  return (oValue - 8) * 3 + 25;\n}\n\nfunction fromOrigamiTensionAndFriction(tension, friction) {\n  return {\n    stiffness: stiffnessFromOrigamiValue(tension),\n    damping: dampingFromOrigamiValue(friction)\n  };\n}\n\nfunction fromBouncinessAndSpeed(bounciness, speed) {\n  function normalize(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n  }\n\n  function projectNormal(n, start, end) {\n    return start + n * (end - start);\n  }\n\n  function linearInterpolation(t, start, end) {\n    return t * end + (1 - t) * start;\n  }\n\n  function quadraticOutInterpolation(t, start, end) {\n    return linearInterpolation(2 * t - t * t, start, end);\n  }\n\n  function b3Friction1(x) {\n    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n  }\n\n  function b3Friction2(x) {\n    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n  }\n\n  function b3Friction3(x) {\n    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;\n  }\n\n  function b3Nobounce(tension) {\n    if (tension <= 18) {\n      return b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      return b3Friction2(tension);\n    } else {\n      return b3Friction3(tension);\n    }\n  }\n\n  var b = normalize(bounciness / 1.7, 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  var s = normalize(speed / 1.7, 0, 20);\n  var bouncyTension = projectNormal(s, 0.5, 200);\n  var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);\n  return {\n    stiffness: stiffnessFromOrigamiValue(bouncyTension),\n    damping: dampingFromOrigamiValue(bouncyFriction)\n  };\n}\n\nexport { fromOrigamiTensionAndFriction, fromBouncinessAndSpeed };\nexport default {\n  fromOrigamiTensionAndFriction: fromOrigamiTensionAndFriction,\n  fromBouncinessAndSpeed: fromBouncinessAndSpeed\n};","map":{"version":3,"sources":["E:/Users/Nayla/Escritorio/UADEE/Distribuidas desk/SUBASTAPP/node_modules/react-native-web/dist/vendor/react-native/Animated/SpringConfig.js"],"names":["stiffnessFromOrigamiValue","oValue","dampingFromOrigamiValue","fromOrigamiTensionAndFriction","tension","friction","stiffness","damping","fromBouncinessAndSpeed","bounciness","speed","normalize","value","startValue","endValue","projectNormal","n","start","end","linearInterpolation","t","quadraticOutInterpolation","b3Friction1","x","Math","pow","b3Friction2","b3Friction3","b3Nobounce","b","s","bouncyTension","bouncyFriction"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nfunction stiffnessFromOrigamiValue(oValue) {\n  return (oValue - 30) * 3.62 + 194;\n}\n\nfunction dampingFromOrigamiValue(oValue) {\n  return (oValue - 8) * 3 + 25;\n}\n\nfunction fromOrigamiTensionAndFriction(tension, friction) {\n  return {\n    stiffness: stiffnessFromOrigamiValue(tension),\n    damping: dampingFromOrigamiValue(friction)\n  };\n}\n\nfunction fromBouncinessAndSpeed(bounciness, speed) {\n  function normalize(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n  }\n\n  function projectNormal(n, start, end) {\n    return start + n * (end - start);\n  }\n\n  function linearInterpolation(t, start, end) {\n    return t * end + (1 - t) * start;\n  }\n\n  function quadraticOutInterpolation(t, start, end) {\n    return linearInterpolation(2 * t - t * t, start, end);\n  }\n\n  function b3Friction1(x) {\n    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n  }\n\n  function b3Friction2(x) {\n    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n  }\n\n  function b3Friction3(x) {\n    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;\n  }\n\n  function b3Nobounce(tension) {\n    if (tension <= 18) {\n      return b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      return b3Friction2(tension);\n    } else {\n      return b3Friction3(tension);\n    }\n  }\n\n  var b = normalize(bounciness / 1.7, 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  var s = normalize(speed / 1.7, 0, 20);\n  var bouncyTension = projectNormal(s, 0.5, 200);\n  var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);\n  return {\n    stiffness: stiffnessFromOrigamiValue(bouncyTension),\n    damping: dampingFromOrigamiValue(bouncyFriction)\n  };\n}\n\nexport { fromOrigamiTensionAndFriction, fromBouncinessAndSpeed };\nexport default {\n  fromOrigamiTensionAndFriction: fromOrigamiTensionAndFriction,\n  fromBouncinessAndSpeed: fromBouncinessAndSpeed\n};"]},"metadata":{},"sourceType":"module"}