{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { SafeAreaProvider, SafeAreaConsumer, initialWindowSafeAreaInsets } from 'react-native-safe-area-context';\nimport { getStatusBarHeight, getBottomSpace } from 'react-native-iphone-x-helper';\n\nvar initialSafeAreaInsets = _objectSpread({\n  top: getStatusBarHeight(true),\n  bottom: getBottomSpace(),\n  right: 0,\n  left: 0\n}, initialWindowSafeAreaInsets);\n\nexport default function SafeAreaProviderCompat(_ref) {\n  var children = _ref.children;\n  return React.createElement(SafeAreaConsumer, null, function (insets) {\n    if (insets) {\n      return children;\n    }\n\n    return React.createElement(SafeAreaProvider, {\n      initialSafeAreaInsets: initialSafeAreaInsets\n    }, children);\n  });\n}","map":{"version":3,"sources":["SafeAreaProviderCompat.tsx"],"names":["initialSafeAreaInsets","top","getStatusBarHeight","bottom","getBottomSpace","right","left","initialWindowSafeAreaInsets","children","insets"],"mappings":";;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,gBAAA,EAAA,gBAAA,EAAA,2BAAA,QAAA,gCAAA;AAKA,SAAA,kBAAA,EAAA,cAAA,QAAA,8BAAA;;AAQA,IAAMA,qBAAqB;AAEzBC,EAAAA,GAAG,EAAEC,kBAAkB,CAFK,IAEL,CAFE;AAGzBC,EAAAA,MAAM,EAAEC,cAHoB,EAAH;AAIzBC,EAAAA,KAAK,EAJuB,CAAH;AAKzBC,EAAAA,IAAI,EALwB;AAAH,GAQtBC,2BARsB,CAA3B;;AAeA,eAAe,SAAA,sBAAA,OAAqD;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAClE,SACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,IAAA,EACIC,UAAAA,MAAD,EAAY;AACX,QAAA,MAAA,EAAY;AAIV,aAAA,QAAA;AACD;;AAED,WACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,MAAA,qBAAqB,EAAET;AAAzC,KAAA,EADF,QACE,CADF;AAVN,GACE,CADF;AAkBD","sourcesContent":["import * as React from 'react';\nimport {\n  SafeAreaProvider,\n  SafeAreaConsumer,\n  initialWindowSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport {\n  getStatusBarHeight,\n  getBottomSpace,\n} from 'react-native-iphone-x-helper';\n\n// The provider component for safe area initializes asynchornously\n// Until the insets are available, there'll be blank screen\n// To avoid the blank screen, we specify some initial values\nconst initialSafeAreaInsets = {\n  // Approximate values which are good enough for most cases\n  top: getStatusBarHeight(true),\n  bottom: getBottomSpace(),\n  right: 0,\n  left: 0,\n  // If we are on a newer version of the library, we can get the correct window insets\n  // The component might not be filling the window, but this is good enough for most cases\n  ...initialWindowSafeAreaInsets,\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default function SafeAreaProviderCompat({ children }: Props) {\n  return (\n    <SafeAreaConsumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return children;\n        }\n\n        return (\n          <SafeAreaProvider initialSafeAreaInsets={initialSafeAreaInsets}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaConsumer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}