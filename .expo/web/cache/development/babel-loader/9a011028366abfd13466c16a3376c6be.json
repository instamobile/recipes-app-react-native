{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nexport var GesturePropError = function (_Error) {\n  _inherits(GesturePropError, _Error);\n\n  var _super = _createSuper(GesturePropError);\n\n  function GesturePropError(name, value, expectedType) {\n    _classCallCheck(this, GesturePropError);\n\n    return _super.call(this, \"Invalid property `\" + name + \": \" + value + \"` expected `\" + expectedType + \"`\");\n  }\n\n  return GesturePropError;\n}(_wrapNativeSuper(Error));","map":{"version":3,"sources":["E:/Users/Nayla/Escritorio/UADEE/Distribuidas desk/SUBASTAPP/node_modules/react-native-gesture-handler/web/Errors.js"],"names":["GesturePropError","name","value","expectedType","Error"],"mappings":";;;;;;;;;;AAAA,WAAaA,gBAAb;AAAA;;AAAA;;AACE,4BAAYC,IAAZ,EAAkBC,KAAlB,EAAyBC,YAAzB,EAAuC;AAAA;;AAAA,oDACTF,IADS,UACAC,KADA,oBACsBC,YADtB;AAEtC;;AAHH;AAAA,mBAAsCC,KAAtC","sourcesContent":["export class GesturePropError extends Error {\n  constructor(name, value, expectedType) {\n    super(`Invalid property \\`${name}: ${value}\\` expected \\`${expectedType}\\``);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}