{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Users\\\\Nayla\\\\Escritorio\\\\UADEE\\\\Distribuidas desk\\\\SUBASTAPP\\\\node_modules\\\\react-native-elements\\\\src\\\\overlay\\\\Overlay.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { ViewPropTypes, withTheme } from \"../config\";\nimport { ScreenHeight, ScreenWidth } from \"../helpers\";\n\nvar Overlay = function Overlay(props) {\n  var children = props.children,\n      isVisible = props.isVisible,\n      containerStyle = props.containerStyle,\n      overlayStyle = props.overlayStyle,\n      windowBackgroundColor = props.windowBackgroundColor,\n      overlayBackgroundColor = props.overlayBackgroundColor,\n      onBackdropPress = props.onBackdropPress,\n      borderRadius = props.borderRadius,\n      width = props.width,\n      height = props.height,\n      fullScreen = props.fullScreen,\n      rest = _objectWithoutProperties(props, [\"children\", \"isVisible\", \"containerStyle\", \"overlayStyle\", \"windowBackgroundColor\", \"overlayBackgroundColor\", \"onBackdropPress\", \"borderRadius\", \"width\", \"height\", \"fullScreen\"]);\n\n  return React.createElement(Modal, _extends({\n    visible: isVisible,\n    onRequestClose: onBackdropPress,\n    transparent: true\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: onBackdropPress,\n    testID: \"RNE__Overlay__backdrop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    testID: \"overlayContainer\",\n    style: StyleSheet.flatten([styles.backdrop, {\n      backgroundColor: windowBackgroundColor\n    }, containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    pointerEvents: \"box-none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: StyleSheet.flatten([styles.overlay, {\n      borderRadius: borderRadius,\n      backgroundColor: overlayBackgroundColor,\n      width: width,\n      height: height\n    }, fullScreen && styles.fullscreen, overlayStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nOverlay.propTypes = {\n  children: PropTypes.element.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  containerStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  windowBackgroundColor: PropTypes.string,\n  overlayBackgroundColor: PropTypes.string,\n  onBackdropPress: PropTypes.func,\n  borderRadius: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullScreen: PropTypes.bool\n};\nOverlay.defaultProps = {\n  borderRadius: 3,\n  fullScreen: false,\n  windowBackgroundColor: 'rgba(0, 0, 0, .4)',\n  overlayBackgroundColor: 'white',\n  width: ScreenWidth - 80,\n  height: ScreenHeight - 180,\n  onBackdropPress: function onBackdropPress() {\n    return null;\n  }\n};\nvar styles = StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%'\n  },\n  overlay: _objectSpread({\n    borderRadius: 5,\n    padding: 10\n  }, Platform.select({\n    android: {\n      elevation: 2\n    },\n    default: {\n      shadowColor: 'rgba(0, 0, 0, .3)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowRadius: 4\n    }\n  }))\n});\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');","map":{"version":3,"sources":["E:/Users/Nayla/Escritorio/UADEE/Distribuidas desk/SUBASTAPP/node_modules/react-native-elements/src/overlay/Overlay.js"],"names":["React","PropTypes","ViewPropTypes","withTheme","ScreenHeight","ScreenWidth","Overlay","props","children","isVisible","containerStyle","overlayStyle","windowBackgroundColor","overlayBackgroundColor","onBackdropPress","borderRadius","width","height","fullScreen","rest","StyleSheet","flatten","styles","backdrop","backgroundColor","container","overlay","fullscreen","propTypes","element","isRequired","bool","style","string","func","number","oneOfType","defaultProps","create","position","top","left","justifyContent","alignItems","flex","padding","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  TouchableWithoutFeedback,\n  Modal,\n} from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\nimport { ScreenHeight, ScreenWidth } from '../helpers';\n\nconst Overlay = props => {\n  const {\n    children,\n    isVisible,\n    containerStyle,\n    overlayStyle,\n    windowBackgroundColor,\n    overlayBackgroundColor,\n    onBackdropPress,\n    borderRadius,\n    width,\n    height,\n    fullScreen,\n    ...rest\n  } = props;\n\n  return (\n    <Modal\n      visible={isVisible}\n      onRequestClose={onBackdropPress}\n      transparent\n      {...rest}\n    >\n      <TouchableWithoutFeedback\n        onPress={onBackdropPress}\n        testID=\"RNE__Overlay__backdrop\"\n      >\n        <View\n          testID=\"overlayContainer\"\n          style={StyleSheet.flatten([\n            styles.backdrop,\n            { backgroundColor: windowBackgroundColor },\n            containerStyle,\n          ])}\n        />\n      </TouchableWithoutFeedback>\n\n      <View style={styles.container} pointerEvents=\"box-none\">\n        <View\n          style={StyleSheet.flatten([\n            styles.overlay,\n            {\n              borderRadius,\n              backgroundColor: overlayBackgroundColor,\n              width,\n              height,\n            },\n            fullScreen && styles.fullscreen,\n            overlayStyle,\n          ])}\n        >\n          {children}\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nOverlay.propTypes = {\n  children: PropTypes.element.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  containerStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  windowBackgroundColor: PropTypes.string,\n  overlayBackgroundColor: PropTypes.string,\n  onBackdropPress: PropTypes.func,\n  borderRadius: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullScreen: PropTypes.bool,\n};\n\nOverlay.defaultProps = {\n  borderRadius: 3,\n  fullScreen: false,\n  windowBackgroundColor: 'rgba(0, 0, 0, .4)',\n  overlayBackgroundColor: 'white',\n  width: ScreenWidth - 80,\n  height: ScreenHeight - 180,\n  onBackdropPress: () => null,\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%',\n  },\n  overlay: {\n    borderRadius: 5,\n    padding: 10,\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0, 0, 0, .3)',\n        shadowOffset: { width: 0, height: 1 },\n        shadowRadius: 4,\n      },\n    }),\n  },\n});\n\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');\n"]},"metadata":{},"sourceType":"module"}