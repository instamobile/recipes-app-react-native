{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"../StyleSheet\";\nimport TouchableOpacity from \"../TouchableOpacity\";\nimport Text from \"../Text\";\nvar Button = React.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return React.createElement(TouchableOpacity, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, React.createElement(Text, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = 'Button';\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;","map":{"version":3,"sources":["C:/learning/Group-Project/node_modules/react-native-web/dist/exports/Button/index.js"],"names":["React","StyleSheet","TouchableOpacity","Text","Button","forwardRef","props","forwardedRef","accessibilityLabel","color","disabled","onPress","testID","title","createElement","accessibilityRole","ref","style","styles","button","backgroundColor","buttonDisabled","text","textDisabled","displayName","create","borderRadius","fontWeight","padding","textAlign","textTransform"],"mappings":"AASA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,IAAP;AACA,IAAIC,MAAM,GAAGJ,KAAK,CAACK,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,YAAjB,EAA+B;AAC3D,MAAIC,kBAAkB,GAAGF,KAAK,CAACE,kBAA/B;AAAA,MACIC,KAAK,GAAGH,KAAK,CAACG,KADlB;AAAA,MAEIC,QAAQ,GAAGJ,KAAK,CAACI,QAFrB;AAAA,MAGIC,OAAO,GAAGL,KAAK,CAACK,OAHpB;AAAA,MAIIC,MAAM,GAAGN,KAAK,CAACM,MAJnB;AAAA,MAKIC,KAAK,GAAGP,KAAK,CAACO,KALlB;AAMA,SAAOb,KAAK,CAACc,aAAN,CAAoBZ,gBAApB,EAAsC;AAC3CM,IAAAA,kBAAkB,EAAEA,kBADuB;AAE3CO,IAAAA,iBAAiB,EAAE,QAFwB;AAG3CL,IAAAA,QAAQ,EAAEA,QAHiC;AAI3CC,IAAAA,OAAO,EAAEA,OAJkC;AAK3CK,IAAAA,GAAG,EAAET,YALsC;AAM3CU,IAAAA,KAAK,EAAE,CAACC,MAAM,CAACC,MAAR,EAAgBV,KAAK,IAAI;AAC9BW,MAAAA,eAAe,EAAEX;AADa,KAAzB,EAEJC,QAAQ,IAAIQ,MAAM,CAACG,cAFf,CANoC;AAS3CT,IAAAA,MAAM,EAAEA;AATmC,GAAtC,EAUJZ,KAAK,CAACc,aAAN,CAAoBX,IAApB,EAA0B;AAC3Bc,IAAAA,KAAK,EAAE,CAACC,MAAM,CAACI,IAAR,EAAcZ,QAAQ,IAAIQ,MAAM,CAACK,YAAjC;AADoB,GAA1B,EAEAV,KAFA,CAVI,CAAP;AAaD,CApBY,CAAb;AAqBAT,MAAM,CAACoB,WAAP,GAAqB,QAArB;AACA,IAAIN,MAAM,GAAGjB,UAAU,CAACwB,MAAX,CAAkB;AAC7BN,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,SADX;AAENM,IAAAA,YAAY,EAAE;AAFR,GADqB;AAK7BJ,EAAAA,IAAI,EAAE;AACJb,IAAAA,KAAK,EAAE,MADH;AAEJkB,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,SAAS,EAAE,QAJP;AAKJC,IAAAA,aAAa,EAAE;AALX,GALuB;AAY7BT,EAAAA,cAAc,EAAE;AACdD,IAAAA,eAAe,EAAE;AADH,GAZa;AAe7BG,EAAAA,YAAY,EAAE;AACZd,IAAAA,KAAK,EAAE;AADK;AAfe,CAAlB,CAAb;AAmBA,eAAeL,MAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport TouchableOpacity from '../TouchableOpacity';\nimport Text from '../Text';\nvar Button = React.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return React.createElement(TouchableOpacity, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, React.createElement(Text, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = 'Button';\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;"]},"metadata":{},"sourceType":"module"}