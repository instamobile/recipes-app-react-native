{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nimport resolveShadowValue from \"./resolveShadowValue\";\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nfunction boxShadowReducer(resolvedStyle, style) {\n  var boxShadow = style.boxShadow;\n  var shadow = resolveShadowValue(style);\n\n  if (shadow != null) {\n    resolvedStyle.boxShadow = boxShadow ? boxShadow + \", \" + shadow : shadow;\n  }\n}\n\nfunction textShadowReducer(resolvedStyle, style) {\n  var textShadowColor = style.textShadowColor,\n      textShadowOffset = style.textShadowOffset,\n      textShadowRadius = style.textShadowRadius;\n\n  var _ref = textShadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    resolvedStyle.textShadow = offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n}\n\nvar createCompileableStyle = function createCompileableStyle(styles) {\n  var shadowColor = styles.shadowColor,\n      shadowOffset = styles.shadowOffset,\n      shadowOpacity = styles.shadowOpacity,\n      shadowRadius = styles.shadowRadius,\n      textShadowColor = styles.textShadowColor,\n      textShadowOffset = styles.textShadowOffset,\n      textShadowRadius = styles.textShadowRadius,\n      nextStyles = _objectWithoutPropertiesLoose(styles, [\"shadowColor\", \"shadowOffset\", \"shadowOpacity\", \"shadowRadius\", \"textShadowColor\", \"textShadowOffset\", \"textShadowRadius\"]);\n\n  if (shadowColor != null || shadowOffset != null || shadowOpacity != null || shadowRadius != null) {\n    boxShadowReducer(nextStyles, styles);\n  }\n\n  if (textShadowColor != null || textShadowOffset != null || textShadowRadius != null) {\n    textShadowReducer(nextStyles, styles);\n  }\n\n  return nextStyles;\n};\n\nexport default createCompileableStyle;","map":{"version":3,"sources":["C:/learning/Group-Project/node_modules/react-native-web/dist/exports/StyleSheet/createCompileableStyle.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","normalizeValueWithProperty","resolveShadowValue","defaultOffset","height","width","boxShadowReducer","resolvedStyle","style","boxShadow","shadow","textShadowReducer","textShadowColor","textShadowOffset","textShadowRadius","_ref","radius","offsetX","offsetY","blurRadius","color","textShadow","createCompileableStyle","styles","shadowColor","shadowOffset","shadowOpacity","shadowRadius","nextStyles"],"mappings":"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","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nimport resolveShadowValue from './resolveShadowValue';\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nfunction boxShadowReducer(resolvedStyle, style) {\n  var boxShadow = style.boxShadow;\n  var shadow = resolveShadowValue(style);\n\n  if (shadow != null) {\n    resolvedStyle.boxShadow = boxShadow ? boxShadow + \", \" + shadow : shadow;\n  }\n}\n\nfunction textShadowReducer(resolvedStyle, style) {\n  var textShadowColor = style.textShadowColor,\n      textShadowOffset = style.textShadowOffset,\n      textShadowRadius = style.textShadowRadius;\n\n  var _ref = textShadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    resolvedStyle.textShadow = offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n}\n\nvar createCompileableStyle = function createCompileableStyle(styles) {\n  var shadowColor = styles.shadowColor,\n      shadowOffset = styles.shadowOffset,\n      shadowOpacity = styles.shadowOpacity,\n      shadowRadius = styles.shadowRadius,\n      textShadowColor = styles.textShadowColor,\n      textShadowOffset = styles.textShadowOffset,\n      textShadowRadius = styles.textShadowRadius,\n      nextStyles = _objectWithoutPropertiesLoose(styles, [\"shadowColor\", \"shadowOffset\", \"shadowOpacity\", \"shadowRadius\", \"textShadowColor\", \"textShadowOffset\", \"textShadowRadius\"]);\n\n  if (shadowColor != null || shadowOffset != null || shadowOpacity != null || shadowRadius != null) {\n    boxShadowReducer(nextStyles, styles);\n  }\n\n  if (textShadowColor != null || textShadowOffset != null || textShadowRadius != null) {\n    textShadowReducer(nextStyles, styles);\n  }\n\n  return nextStyles;\n};\n\nexport default createCompileableStyle;"]},"metadata":{},"sourceType":"module"}