{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients, video } from \"./dataArrays\";\nexport function getCategoryById(categoryId) {\n  var category;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\nexport function getIngredientName(ingredientID) {\n  var name;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getvideoId(videoId) {\n  var video;\n  video.map(function (data) {\n    if (data.videoId == videoId) {\n      video = data.video;\n    }\n  });\n  return video;\n}\nexport function getIngredientUrl(ingredientID) {\n  var url;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\nexport function getCategoryName(categoryId) {\n  var name;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getRecipes(categoryId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByIngredient(ingredientId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    data.ingredients.map(function (index) {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\nexport function getNumberOfRecipes(categoryId) {\n  var count = 0;\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\nexport function getAllIngredients(idArray) {\n  var ingredientsArray = [];\n  idArray.map(function (index) {\n    ingredients.map(function (data) {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\nexport function getRecipesByIngredientName(ingredientName) {\n  var nameUpper = ingredientName.toUpperCase();\n  var recipesArray = [];\n  ingredients.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes = getRecipesByIngredient(data.ingredientId);\n\n      var unique = _toConsumableArray(new Set(_recipes));\n\n      unique.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n\n  var uniqueArray = _toConsumableArray(new Set(recipesArray));\n\n  return uniqueArray;\n}\nexport function getRecipesByCategoryName(categoryName) {\n  var nameUpper = categoryName.toUpperCase();\n  var recipesArray = [];\n  categories.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes2 = getRecipes(data.id);\n\n      _recipes2.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByRecipeName(recipeName) {\n  var nameUpper = recipeName.toUpperCase();\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}","map":{"version":3,"sources":["C:/learning/Group-Project/src/data/MockDataAPI.js"],"names":["React","Component","recipes","categories","ingredients","video","getCategoryById","categoryId","category","map","data","id","getIngredientName","ingredientID","name","ingredientId","getvideoId","videoId","getIngredientUrl","url","photo_url","getCategoryName","getRecipes","recipesArray","push","getRecipesByIngredient","index","getNumberOfRecipes","count","getAllIngredients","idArray","ingredientsArray","getRecipesByIngredientName","ingredientName","nameUpper","toUpperCase","includes","unique","Set","item","uniqueArray","getRecipesByCategoryName","categoryName","getRecipesByRecipeName","recipeName","title"],"mappings":"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","sourcesContent":["import { Text } from 'react-native';\r\nimport React, { Component } from 'react';\r\nimport { recipes, categories, ingredients,video } from './dataArrays';\r\n\r\nexport function getCategoryById(categoryId) {\r\n  let category;\r\n  categories.map(data => {\r\n    if (data.id == categoryId) {\r\n      category = data;\r\n    }\r\n  });\r\n  return category;\r\n}\r\n\r\nexport function getIngredientName(ingredientID) {\r\n  let name;\r\n  ingredients.map(data => {\r\n    if (data.ingredientId == ingredientID) {\r\n      name = data.name;\r\n    }\r\n  });\r\n  return name;\r\n}\r\n\r\nexport function getvideoId(videoId) {\r\n  let video;\r\n  video.map(data => {\r\n    if (data.videoId == videoId) {\r\n      video = data.video;\r\n    }\r\n  });\r\n  return video;\r\n}\r\n\r\nexport function getIngredientUrl(ingredientID) {\r\n  let url;\r\n  ingredients.map(data => {\r\n    if (data.ingredientId == ingredientID) {\r\n      url = data.photo_url;\r\n    }\r\n  });\r\n  return url;\r\n}\r\n\r\nexport function getCategoryName(categoryId) {\r\n  let name;\r\n  categories.map(data => {\r\n    if (data.id == categoryId) {\r\n      name = data.name;\r\n    }\r\n  });\r\n  return name;\r\n}\r\n\r\nexport function getRecipes(categoryId) {\r\n  const recipesArray = [];\r\n  recipes.map(data => {\r\n    if (data.categoryId == categoryId) {\r\n      recipesArray.push(data);\r\n    }\r\n  });\r\n  return recipesArray;\r\n}\r\n\r\n// modifica\r\nexport function getRecipesByIngredient(ingredientId) {\r\n  const recipesArray = [];\r\n  recipes.map(data => {\r\n    data.ingredients.map(index => {\r\n      if (index[0] == ingredientId) {\r\n        recipesArray.push(data);\r\n      }\r\n    });\r\n  });\r\n  return recipesArray;\r\n}\r\n\r\nexport function getNumberOfRecipes(categoryId) {\r\n  let count = 0;\r\n  recipes.map(data => {\r\n    if (data.categoryId == categoryId) {\r\n      count++;\r\n    }\r\n  });\r\n  return count;\r\n}\r\n\r\nexport function getAllIngredients(idArray) {\r\n  const ingredientsArray = [];\r\n  idArray.map(index => {\r\n    ingredients.map(data => {\r\n      if (data.ingredientId == index[0]) {\r\n        ingredientsArray.push([data, index[1]]);\r\n      }\r\n    });\r\n  });\r\n  return ingredientsArray;\r\n}\r\n\r\n// functions for search\r\nexport function getRecipesByIngredientName(ingredientName) {\r\n  const nameUpper = ingredientName.toUpperCase();\r\n  const recipesArray = [];\r\n  ingredients.map(data => {\r\n    if (data.name.toUpperCase().includes(nameUpper)) {\r\n      // data.name.yoUpperCase() == nameUpper\r\n      const recipes = getRecipesByIngredient(data.ingredientId);\r\n      const unique = [...new Set(recipes)];\r\n      unique.map(item => {\r\n        recipesArray.push(item);\r\n      });\r\n    }\r\n  });\r\n  const uniqueArray = [...new Set(recipesArray)];\r\n  return uniqueArray;\r\n}\r\n\r\nexport function getRecipesByCategoryName(categoryName) {\r\n  const nameUpper = categoryName.toUpperCase();\r\n  const recipesArray = [];\r\n  categories.map(data => {\r\n    if (data.name.toUpperCase().includes(nameUpper)) {\r\n      const recipes = getRecipes(data.id); // return a vector of recipes\r\n      recipes.map(item => {\r\n        recipesArray.push(item);\r\n      });\r\n    }\r\n  });\r\n  return recipesArray;\r\n}\r\n\r\nexport function getRecipesByRecipeName(recipeName) {\r\n  const nameUpper = recipeName.toUpperCase();\r\n  const recipesArray = [];\r\n  recipes.map(data => {\r\n    if (data.title.toUpperCase().includes(nameUpper)) {\r\n      recipesArray.push(data);\r\n    }\r\n  });\r\n  return recipesArray;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}