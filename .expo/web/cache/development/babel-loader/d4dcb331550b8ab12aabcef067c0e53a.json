{"ast":null,"code":"export default function debounce(func, duration) {\n  var timeout;\n  return function () {\n    if (!timeout) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      func.apply(this, args);\n      timeout = setTimeout(function () {\n        timeout = undefined;\n      }, duration);\n    }\n  };\n}","map":{"version":3,"sources":["debounce.tsx"],"names":["func","timeout","setTimeout"],"mappings":"AAAA,eAAe,SAAA,QAAA,CAAA,IAAA,EAAA,QAAA,EAGV;AACH,MAAA,OAAA;AAEA,SAAO,YAA8B;AACnC,QAAI,CAAJ,OAAA,EAAc;AAAA,wCADT,IACS;AADT,QAAA,IACS;AAAA;;AAEZA,MAAAA,IAAI,CAAJA,KAAAA,CAAAA,IAAAA,EAAAA,IAAAA;AAEAC,MAAAA,OAAO,GAAGC,UAAU,CAAC,YAAM;AACzBD,QAAAA,OAAO,GAAPA,SAAAA;AADkB,OAAA,EAApBA,QAAoB,CAApBA;AAGD;AARH,GAAA;AAUD","sourcesContent":["export default function debounce<T extends (...args: any[]) => void>(\n  func: T,\n  duration: number\n): T {\n  let timeout: NodeJS.Timeout | number | undefined;\n\n  return function (this: any, ...args) {\n    if (!timeout) {\n      // eslint-disable-next-line babel/no-invalid-this\n      func.apply(this, args);\n\n      timeout = setTimeout(() => {\n        timeout = undefined;\n      }, duration);\n    }\n  } as T;\n}\n"]},"metadata":{},"sourceType":"module"}