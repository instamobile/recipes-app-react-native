{"ast":null,"code":"'use strict';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport invariant from 'fbjs/lib/invariant';\n\nvar ViewabilityHelper = function () {\n  function ViewabilityHelper(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n\n  var _proto = ViewabilityHelper.prototype;\n\n  _proto.dispose = function dispose() {\n    this._timers.forEach(clearTimeout);\n  };\n\n  _proto.computeViewableItems = function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    if (last >= itemCount) {\n      console.warn('Invalid render range computing viewability ' + JSON.stringify({\n        renderRange: renderRange,\n        itemCount: itemCount\n      }));\n      return [];\n    }\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  };\n\n  _proto.onUpdate = function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n    var _this = this;\n\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n      return v === viewableIndices[ii];\n    })) {\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(function () {\n        _this._timers.delete(handle);\n\n        _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  };\n\n  _proto.resetViewableIndices = function resetViewableIndices() {\n    this._viewableIndices = [];\n  };\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._hasInteracted = true;\n  };\n\n  _proto._onUpdateSync = function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n    var _this2 = this;\n\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n      return _this2._viewableIndices.includes(ii);\n    });\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var _ref4 = _ref2,\n          key = _ref4[0],\n          viewable = _ref4[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var _ref5 = _ref3,\n          _key = _ref5[0],\n          _viewable = _ref5[1];\n\n      if (!nextItems.has(_key)) {\n        changed.push(_objectSpread({}, _viewable, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed: changed,\n        viewabilityConfig: this._config\n      });\n    }\n  };\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nexport default ViewabilityHelper;","map":{"version":3,"sources":["C:/learning/Group-Project/node_modules/react-native-web/dist/vendor/react-native/ViewabilityHelper/index.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","invariant","ViewabilityHelper","config","viewAreaCoveragePercentThreshold","_hasInteracted","_timers","Set","_viewableIndices","_viewableItems","Map","_config","_proto","prototype","dispose","clearTimeout","computeViewableItems","itemCount","scrollOffset","viewportHeight","getFrameMetrics","renderRange","_this$_config","itemVisiblePercentThreshold","viewAreaMode","viewablePercentThreshold","viewableIndices","firstVisible","_ref","first","last","console","warn","JSON","stringify","idx","metrics","top","offset","bottom","_isViewable","onUpdate","createViewToken","onViewableItemsChanged","_this","waitForInteraction","every","v","ii","minimumViewTime","handle","setTimeout","delete","_onUpdateSync","add","resetViewableIndices","recordInteraction","viewableIndicesToCheck","_this2","includes","prevItems","nextItems","map","viewable","changed","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","_ref4","has","_iterator2","_isArray2","_i2","_ref3","_ref5","_key","_viewable","isViewable","viewableItems","from","values","viewabilityConfig","itemLength","_isEntirelyVisible","pixels","_getPixelsVisible","percent","visibleHeight","Math","min","max"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nvar ViewabilityHelper =\n/*#__PURE__*/\nfunction () {\n  /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.63 was deployed. To see the error delete this comment\n   * and run Flow. */\n  function ViewabilityHelper(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n\n\n  var _proto = ViewabilityHelper.prototype;\n\n  _proto.dispose = function dispose() {\n    this._timers.forEach(clearTimeout);\n  }\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  ;\n\n  _proto.computeViewableItems = function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    if (last >= itemCount) {\n      console.warn('Invalid render range computing viewability ' + JSON.stringify({\n        renderRange: renderRange,\n        itemCount: itemCount\n      }));\n      return [];\n    }\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  }\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n    var _this = this;\n\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n      return v === viewableIndices[ii];\n    })) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(function () {\n        _this._timers.delete(handle);\n\n        _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  ;\n\n  _proto.resetViewableIndices = function resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  ;\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._hasInteracted = true;\n  };\n\n  _proto._onUpdateSync = function _onUpdateSync( // $FlowFixMe\n  viewableIndicesToCheck, // $FlowFixMe\n  onViewableItemsChanged, // $FlowFixMe\n  createViewToken) {\n    var _this2 = this;\n\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n      return _this2._viewableIndices.includes(ii);\n    });\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var _ref4 = _ref2,\n          key = _ref4[0],\n          viewable = _ref4[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var _ref5 = _ref3,\n          _key = _ref5[0],\n          _viewable = _ref5[1];\n\n      if (!nextItems.has(_key)) {\n        changed.push(_objectSpread({}, _viewable, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed: changed,\n        viewabilityConfig: this._config\n      });\n    }\n  };\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nexport default ViewabilityHelper;"]},"metadata":{},"sourceType":"module"}