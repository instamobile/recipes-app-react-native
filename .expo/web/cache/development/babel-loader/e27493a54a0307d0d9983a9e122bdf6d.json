{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Users\\\\Nayla\\\\Escritorio\\\\UADEE\\\\Distribuidas desk\\\\SUBASTAPP\\\\src\\\\screens\\\\Ingredient\\\\IngredientScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientUrl, getRecipesByIngredient, getCategoryName } from \"../../data/MockDataAPI\";\n\nvar IngredientScreen = function (_React$Component) {\n  _inherits(IngredientScreen, _React$Component);\n\n  var _super = _createSuper(IngredientScreen);\n\n  function IngredientScreen(props) {\n    var _this;\n\n    _classCallCheck(this, IngredientScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onPressRecipe = function (item) {\n      _this.props.navigation.navigate('Recipe', {\n        item: item\n      });\n    };\n\n    _this.renderRecipes = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressRecipe(item);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }\n      }, React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressRecipe(item);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.photo,\n        source: {\n          uri: item.photo_url\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.category,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, getCategoryName(item.categoryId)))));\n    };\n\n    return _this;\n  }\n\n  _createClass(IngredientScreen, [{\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      var ingredientId = navigation.getParam('ingredient');\n      var ingredientUrl = getIngredientUrl(ingredientId);\n      var ingredientName = navigation.getParam('name');\n      return React.createElement(ScrollView, {\n        style: styles.mainContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          borderBottomWidth: 0.4,\n          marginBottom: 10,\n          borderBottomColor: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.photoIngredient,\n        source: {\n          uri: '' + ingredientUrl\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        style: styles.ingredientInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, \"Recipes with \", ingredientName, \":\"), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 2,\n        data: getRecipesByIngredient(ingredientId),\n        renderItem: this.renderRecipes,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.recipeId;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return IngredientScreen;\n}(React.Component);\n\nIngredientScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    title: navigation.getParam('name')\n  };\n};\n\nexport { IngredientScreen as default };","map":{"version":3,"sources":["E:/Users/Nayla/Escritorio/UADEE/Distribuidas desk/SUBASTAPP/src/screens/Ingredient/IngredientScreen.js"],"names":["React","styles","getIngredientUrl","getRecipesByIngredient","getCategoryName","IngredientScreen","props","onPressRecipe","item","navigation","navigate","renderRecipes","container","photo","uri","photo_url","title","category","categoryId","ingredientId","getParam","ingredientUrl","ingredientName","mainContainer","borderBottomWidth","marginBottom","borderBottomColor","photoIngredient","ingredientInfo","recipeId","Component","navigationOptions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  Image,\n  TouchableHighlight\n} from 'react-native';\nimport styles from './styles';\nimport {\n  getIngredientUrl,\n  getRecipesByIngredient,\n  getCategoryName\n} from '../../data/MockDataAPI';\n\nexport default class IngredientScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => {\n    return {\n      title: navigation.getParam('name')\n    };\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPressRecipe = item => {\n    this.props.navigation.navigate('Recipe', { item });\n  };\n\n  renderRecipes = ({ item }) => (\n    <TouchableHighlight underlayColor='rgba(73,182,77,0.9)' onPress={() => this.onPressRecipe(item)}>\n      <TouchableHighlight underlayColor='rgba(73,182,77,0.9)' onPress={() => this.onPressRecipe(item)}>\n        <View style={styles.container}>\n          <Image style={styles.photo} source={{ uri: item.photo_url }} />\n          <Text style={styles.title}>{item.title}</Text>\n          <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\n        </View>\n      </TouchableHighlight>\n    </TouchableHighlight>\n  );\n\n  render() {\n    const { navigation } = this.props;\n    const ingredientId = navigation.getParam('ingredient');\n    const ingredientUrl = getIngredientUrl(ingredientId);\n    const ingredientName = navigation.getParam('name');\n    return (\n      <ScrollView style={styles.mainContainer}>\n        <View style={{ borderBottomWidth: 0.4, marginBottom: 10, borderBottomColor: 'grey' }}>\n          <Image style={styles.photoIngredient} source={{ uri: '' + ingredientUrl }} />\n        </View>\n        <Text style={styles.ingredientInfo}>Recipes with {ingredientName}:</Text>\n        <View>\n          <FlatList\n            vertical\n            showsVerticalScrollIndicator={false}\n            numColumns={2}\n            data={getRecipesByIngredient(ingredientId)}\n            renderItem={this.renderRecipes}\n            keyExtractor={item => `${item.recipeId}`}\n          />\n        </View>\n      </ScrollView>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}