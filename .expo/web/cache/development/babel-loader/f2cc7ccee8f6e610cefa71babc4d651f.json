{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Users\\\\Nayla\\\\Escritorio\\\\UADEE\\\\Distribuidas desk\\\\SUBASTAPP\\\\node_modules\\\\react-native-gesture-handler\\\\touchables\\\\GenericTouchable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { State, BaseButton } from \"../GestureHandler\";\nimport PropTypes from 'prop-types';\nexport var TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2\n};\nvar PublicPropTypes = {\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool\n};\nvar InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func\n};\n\nvar GenericTouchable = function (_Component) {\n  _inherits(GenericTouchable, _Component);\n\n  var _super = _createSuper(GenericTouchable);\n\n  function GenericTouchable() {\n    var _this;\n\n    _classCallCheck(this, GenericTouchable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.longPressDetected = false;\n    _this.pointerInside = true;\n    _this.STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n    _this.onGestureEvent = function (_ref) {\n      var pointerInside = _ref.nativeEvent.pointerInside;\n\n      if (_this.pointerInside !== pointerInside) {\n        if (pointerInside) {\n          _this.onMoveIn();\n        } else {\n          _this.onMoveOut();\n        }\n      }\n\n      _this.pointerInside = pointerInside;\n    };\n\n    _this.onHandlerStateChange = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      var state = nativeEvent.state;\n\n      if (state === State.CANCELLED || state === State.FAILED) {\n        _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      } else if (state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) && _this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        _this.handlePressIn();\n      } else if (state === State.END) {\n        var shouldCallOnPress = !_this.longPressDetected && _this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE && _this.pressOutTimeout === null;\n\n        _this.handleGoToUndetermined();\n\n        if (shouldCallOnPress) {\n          _this.props.onPress && _this.props.onPress();\n        }\n      }\n    };\n\n    _this.onLongPressDetected = function () {\n      _this.longPressDetected = true;\n\n      _this.props.onLongPress();\n    };\n\n    return _this;\n  }\n\n  _createClass(GenericTouchable, [{\n    key: \"handlePressIn\",\n    value: function handlePressIn() {\n      var _this2 = this;\n\n      if (this.props.delayPressIn) {\n        this.pressInTimeout = setTimeout(function () {\n          _this2.moveToState(TOUCHABLE_STATE.BEGAN);\n\n          _this2.pressInTimeout = null;\n        }, this.props.delayPressIn);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n\n      if (this.props.onLongPress) {\n        var time = (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n        this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n      }\n    }\n  }, {\n    key: \"handleMoveOutside\",\n    value: function handleMoveOutside() {\n      var _this3 = this;\n\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = this.pressOutTimeout || setTimeout(function () {\n          _this3.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n\n          _this3.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n      }\n    }\n  }, {\n    key: \"handleGoToUndetermined\",\n    value: function handleGoToUndetermined() {\n      var _this4 = this;\n\n      clearTimeout(this.pressOutTimeout);\n\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = setTimeout(function () {\n          if (_this4.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n            _this4.moveToState(TOUCHABLE_STATE.BEGAN);\n          }\n\n          _this4.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n\n          _this4.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.reset();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.longPressDetected = false;\n      this.pointerInside = true;\n      clearTimeout(this.pressInTimeout);\n      clearTimeout(this.pressOutTimeout);\n      clearTimeout(this.longPressTimeout);\n      this.pressOutTimeout = null;\n      this.longPressTimeout = null;\n      this.pressInTimeout = null;\n    }\n  }, {\n    key: \"moveToState\",\n    value: function moveToState(newState) {\n      if (newState === this.STATE) {\n        return;\n      }\n\n      if (newState === TOUCHABLE_STATE.BEGAN) {\n        this.props.onPressIn && this.props.onPressIn();\n      } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.props.onPressOut && this.props.onPressOut();\n      } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n        this.reset();\n\n        if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n          this.props.onPressOut && this.props.onPressOut();\n        }\n      }\n\n      this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n      this.STATE = newState;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.reset();\n    }\n  }, {\n    key: \"onMoveIn\",\n    value: function onMoveIn() {\n      if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n    }\n  }, {\n    key: \"onMoveOut\",\n    value: function onMoveOut() {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = null;\n\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        this.handleMoveOutside();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var coreProps = {\n        accessible: this.props.accessible !== false,\n        accessibilityLabel: this.props.accessibilityLabel,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityComponentType: this.props.accessibilityComponentType,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityStates: this.props.accessibilityStates,\n        accessibilityTraits: this.props.accessibilityTraits,\n        nativeID: this.props.nativeID,\n        onLayout: this.props.onLayout,\n        hitSlop: this.props.hitSlop\n      };\n      return React.createElement(BaseButton, _extends({\n        style: this.props.containerStyle,\n        onHandlerStateChange: this.props.disabled ? null : this.onHandlerStateChange,\n        onGestureEvent: this.onGestureEvent,\n        hitSlop: this.props.hitSlop,\n        shouldActivateOnStart: this.props.shouldActivateOnStart,\n        disallowInterruption: this.props.disallowInterruption,\n        testID: this.props.testID\n      }, this.props.extraButtonProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }\n      }), React.createElement(Animated.View, _extends({}, coreProps, {\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }), this.props.children));\n    }\n  }]);\n\n  return GenericTouchable;\n}(Component);\n\nGenericTouchable.publicPropTypes = PublicPropTypes;\nGenericTouchable.internalPropTypes = InternalPropTypes;\nGenericTouchable.propTypes = _objectSpread(_objectSpread({}, InternalPropTypes), PublicPropTypes);\nGenericTouchable.defaultProps = {\n  delayLongPress: 600,\n  extraButtonProps: {\n    rippleColor: 'transparent'\n  }\n};\nexport { GenericTouchable as default };","map":{"version":3,"sources":["E:/Users/Nayla/Escritorio/UADEE/Distribuidas desk/SUBASTAPP/node_modules/react-native-gesture-handler/touchables/GenericTouchable.js"],"names":["React","Component","State","BaseButton","PropTypes","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","PublicPropTypes","accessible","bool","accessibilityLabel","node","accessibilityHint","string","hitSlop","shape","top","number","left","bottom","right","disabled","onPress","func","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","delayPressOut","delayLongPress","shouldActivateOnStart","disallowInterruption","InternalPropTypes","extraButtonProps","object","onStateChange","GenericTouchable","longPressDetected","pointerInside","STATE","onGestureEvent","nativeEvent","onMoveIn","onMoveOut","onHandlerStateChange","state","CANCELLED","FAILED","moveToState","Platform","OS","ACTIVE","handlePressIn","END","shouldCallOnPress","pressOutTimeout","handleGoToUndetermined","props","onLongPressDetected","pressInTimeout","setTimeout","time","longPressTimeout","clearTimeout","reset","newState","handleMoveOutside","coreProps","accessibilityComponentType","accessibilityRole","accessibilityStates","accessibilityTraits","containerStyle","style","children","publicPropTypes","internalPropTypes","propTypes","defaultProps","rippleColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { State, BaseButton } from '../GestureHandler';\nimport PropTypes from 'prop-types';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n};\n\nconst PublicPropTypes = {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props.\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n};\n\nconst InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func,\n};\n\n/**\n * GenericTouchable is not intented to be used as it.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component {\n  static publicPropTypes = PublicPropTypes;\n  static internalPropTypes = InternalPropTypes;\n\n  // The prop type collections have to be outside of the class, as metro\n  // at this time does not compile `this.foo` correctly if HMR is enabled.\n  // https://github.com/software-mansion/react-native-gesture-handler/pull/406#issuecomment-453779977\n  static propTypes = {\n    ...InternalPropTypes,\n    ...PublicPropTypes,\n  };\n\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout;\n  pressOutTimeout;\n  longPressTimeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout);\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout);\n    clearTimeout(this.pressOutTimeout);\n    clearTimeout(this.longPressTimeout);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn && this.props.onPressIn();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut && this.props.onPressOut();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut && this.props.onPressOut();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({ nativeEvent: { pointerInside } }) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({ nativeEvent }) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress && this.props.onPress();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // long press should no longer be detected\n    clearTimeout(this.longPressTimeout);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          this.props.disabled ? null : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={this.props.hitSlop}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}