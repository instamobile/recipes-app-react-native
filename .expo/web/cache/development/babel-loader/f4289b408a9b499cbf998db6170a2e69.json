{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\learning\\\\Group-Project\\\\src\\\\screens\\\\Recipe\\\\RecipeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styles from \"./styles\";\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport { getIngredientName, getCategoryName, getCategoryById } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    viewportWidth = _Dimensions$get.width;\n\nvar RecipeScreen = function (_React$Component) {\n  _inherits(RecipeScreen, _React$Component);\n\n  var _super = _createSuper(RecipeScreen);\n\n  function RecipeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RecipeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderImage = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.imageContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      })));\n    };\n\n    _this.onPressIngredient = function (item) {\n      var name = getIngredientName(item);\n      var ingredient = item;\n\n      _this.props.navigation.navigate('Ingredient', {\n        ingredient: ingredient,\n        name: name\n      });\n    };\n\n    _this.state = {\n      activeSlide: 0\n    };\n    return _this;\n  }\n\n  _createClass(RecipeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activeSlide = this.state.activeSlide;\n      var navigation = this.props.navigation;\n      var item = navigation.getParam('item');\n      var category = getCategoryById(item.categoryId);\n      var title = getCategoryName(category.id);\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.carouselContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.carousel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, React.createElement(Carousel, {\n        ref: function ref(c) {\n          _this2.slider1Ref = c;\n        },\n        data: item.photosArray,\n        renderItem: this.renderImage,\n        sliderWidth: viewportWidth,\n        itemWidth: viewportWidth,\n        inactiveSlideScale: 1,\n        inactiveSlideOpacity: 1,\n        firstItem: 0,\n        loop: false,\n        autoplay: false,\n        autoplayDelay: 500,\n        autoplayInterval: 3000,\n        onSnapToItem: function onSnapToItem(index) {\n          return _this2.setState({\n            activeSlide: index\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }), React.createElement(Pagination, {\n        dotsLength: item.photosArray.length,\n        activeDotIndex: activeSlide,\n        containerStyle: styles.paginationContainer,\n        dotColor: \"rgba(255, 255, 255, 0.92)\",\n        dotStyle: styles.paginationDot,\n        inactiveDotColor: \"white\",\n        inactiveDotOpacity: 0.4,\n        inactiveDotScale: 0.6,\n        carouselRef: this.slider1Ref,\n        tappableDots: !!this.slider1Ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: styles.infoRecipeContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.infoRecipeName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, item.title), React.createElement(View, {\n        style: styles.infoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('RecipesList', {\n            category: category,\n            title: title\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.category,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, getCategoryName(item.categoryId).toUpperCase()))), React.createElement(View, {\n        style: styles.infoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.infoPhoto,\n        source: require(\"../../../assets/icons/time.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.infoRecipe,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, item.time, \" minutes \")), React.createElement(View, {\n        style: styles.infoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, React.createElement(ViewIngredientsButton, {\n        onPress: function onPress() {\n          var ingredients = item.ingredients;\n          var title = 'Ingredients for ' + item.title;\n          navigation.navigate('IngredientsDetails', {\n            ingredients: ingredients,\n            title: title\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.infoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.infoDescriptionRecipe,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, item.description)), React.createElement(Button, {\n        title: \"video\",\n        onPress: function onPress() {\n          return navigation.navigate('videoscreen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return RecipeScreen;\n}(React.Component);\n\nRecipeScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerTransparent: 'true',\n    headerLeft: function headerLeft() {\n      return React.createElement(BackButton, {\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        __self: RecipeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      });\n    }\n  };\n};\n\nexport { RecipeScreen as default };","map":{"version":3,"sources":["C:/learning/Group-Project/src/screens/Recipe/RecipeScreen.js"],"names":["React","styles","Carousel","Pagination","getIngredientName","getCategoryName","getCategoryById","BackButton","ViewIngredientsButton","Dimensions","get","viewportWidth","width","RecipeScreen","props","renderImage","item","imageContainer","image","uri","onPressIngredient","name","ingredient","navigation","navigate","state","activeSlide","getParam","category","categoryId","title","id","container","carouselContainer","carousel","c","slider1Ref","photosArray","index","setState","length","paginationContainer","paginationDot","infoRecipeContainer","infoRecipeName","infoContainer","toUpperCase","infoPhoto","require","infoRecipe","time","ingredients","infoDescriptionRecipe","description","Component","navigationOptions","headerTransparent","headerLeft","goBack"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  FlatList,\r\n  ScrollView,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Image,\r\n  Dimensions,\r\n  TouchableHighlight,Button\r\n} from 'react-native';\r\nimport styles from './styles';\r\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\r\nimport { getIngredientName, getCategoryName, getCategoryById } from '../../data/MockDataAPI';\r\nimport BackButton from '../../components/BackButton/BackButton';\r\nimport ViewIngredientsButton from '../../components/ViewIngredientsButton/ViewIngredientsButton';\r\n\r\nconst { width: viewportWidth } = Dimensions.get('window');\r\n\r\nexport default class RecipeScreen extends React.Component {\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTransparent: 'true',\r\n      headerLeft: () => <BackButton\r\n        onPress={() => {\r\n          navigation.goBack();\r\n        }}\r\n      />\r\n    };\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeSlide: 0\r\n    };\r\n  }\r\n\r\n  renderImage = ({ item }) => (\r\n    <TouchableOpacity>\r\n      <View style={styles.imageContainer}>\r\n        <Image style={styles.image} source={{ uri: item }} />\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  onPressIngredient = item => {\r\n    var name = getIngredientName(item);\r\n    let ingredient = item;\r\n    this.props.navigation.navigate('Ingredient', { ingredient, name });\r\n  };\r\n\r\n  render() {\r\n    const { activeSlide } = this.state;\r\n    const { navigation } = this.props;\r\n    const item = navigation.getParam('item');\r\n    const category = getCategoryById(item.categoryId);\r\n    const title = getCategoryName(category.id);\r\n    \r\n    return (\r\n      <ScrollView style={styles.container}>\r\n        <View style={styles.carouselContainer}>\r\n          <View style={styles.carousel}>\r\n            <Carousel\r\n              ref={c => {\r\n                this.slider1Ref = c;\r\n              }}\r\n              data={item.photosArray}\r\n              renderItem={this.renderImage}\r\n              sliderWidth={viewportWidth}\r\n              itemWidth={viewportWidth}\r\n              inactiveSlideScale={1}\r\n              inactiveSlideOpacity={1}\r\n              firstItem={0}\r\n              loop={false}\r\n              autoplay={false}\r\n              autoplayDelay={500}\r\n              autoplayInterval={3000}\r\n              onSnapToItem={index => this.setState({ activeSlide: index })}\r\n            />\r\n            <Pagination\r\n              dotsLength={item.photosArray.length}\r\n              activeDotIndex={activeSlide}\r\n              containerStyle={styles.paginationContainer}\r\n              dotColor=\"rgba(255, 255, 255, 0.92)\"\r\n              dotStyle={styles.paginationDot}\r\n              inactiveDotColor=\"white\"\r\n              inactiveDotOpacity={0.4}\r\n              inactiveDotScale={0.6}\r\n              carouselRef={this.slider1Ref}\r\n              tappableDots={!!this.slider1Ref}\r\n            />\r\n          </View>\r\n        </View>\r\n        <View style={styles.infoRecipeContainer}>\r\n          <Text style={styles.infoRecipeName}>{item.title}</Text>\r\n          <View style={styles.infoContainer}>\r\n            <TouchableOpacity\r\n              onPress={() => navigation.navigate('RecipesList', { category, title })}\r\n            >\r\n              <Text style={styles.category}>{getCategoryName(item.categoryId).toUpperCase()}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={styles.infoContainer}>\r\n            <Image style={styles.infoPhoto} source={require('../../../assets/icons/time.png')} />\r\n            <Text style={styles.infoRecipe}>{item.time} minutes </Text>\r\n          </View>\r\n\r\n          <View style={styles.infoContainer}>\r\n            <ViewIngredientsButton\r\n              onPress={() => {\r\n                let ingredients = item.ingredients;\r\n                let title = 'Ingredients for ' + item.title;\r\n                navigation.navigate('IngredientsDetails', { ingredients, title });\r\n              }}\r\n            />\r\n          </View>\r\n          <View style={styles.infoContainer}>\r\n            <Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\r\n          </View>\r\n          <Button\r\n            title='video'\r\n            onPress={() => navigation.navigate('videoscreen')}\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\n/*cooking steps\r\n<View style={styles.infoContainer}>\r\n  <Image style={styles.infoPhoto} source={require('../../../assets/icons/info.png')} />\r\n  <Text style={styles.infoRecipe}>Cooking Steps</Text>\r\n</View>\r\n<Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}