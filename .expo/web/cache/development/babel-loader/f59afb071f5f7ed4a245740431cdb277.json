{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\learning\\\\Group-Project\\\\src\\\\screens\\\\Categories\\\\CategoriesScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { categories } from \"../../data/dataArrays\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nvar CategoriesScreen = function (_React$Component) {\n  _inherits(CategoriesScreen, _React$Component);\n\n  var _super = _createSuper(CategoriesScreen);\n\n  function CategoriesScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CategoriesScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onPressCategory = function (item) {\n      var title = item.name;\n      var category = item;\n\n      _this.props.navigation.navigate('RecipesList', {\n        category: category,\n        title: title\n      });\n    };\n\n    _this.renderCategory = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.onPressCategory(item);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.categoriesItemContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.categoriesPhoto,\n        source: {\n          uri: item.photo_url\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.categoriesName,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, item.name)));\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoriesScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.view,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        numColumns: 2,\n        data: categories,\n        renderItem: this.renderCategory,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return CategoriesScreen;\n}(React.Component);\n\nCategoriesScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    title: 'Home',\n    headerLeft: function headerLeft() {\n      return React.createElement(MenuImage, {\n        onPress: function onPress() {\n          navigation.openDrawer();\n        },\n        __self: CategoriesScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 23\n        }\n      });\n    }\n  };\n};\n\nexport { CategoriesScreen as default };","map":{"version":3,"sources":["C:/learning/Group-Project/src/screens/Categories/CategoriesScreen.js"],"names":["React","styles","categories","MenuImage","TouchableOpacity","CategoriesScreen","props","onPressCategory","item","title","name","category","navigation","navigate","renderCategory","categoriesItemContainer","categoriesPhoto","uri","photo_url","categoriesName","view","id","Component","navigationOptions","headerLeft","openDrawer"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,OAAOC,MAAP;AACA,SAASC,UAAT;AACA,OAAOC,SAAP;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;IAGqBC,gB;;;;;AAUnB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAInBC,eAJmB,GAID,UAAAC,IAAI,EAAI;AACxB,UAAMC,KAAK,GAAGD,IAAI,CAACE,IAAnB;AACA,UAAMC,QAAQ,GAAGH,IAAjB;;AACA,YAAKF,KAAL,CAAWM,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B,EAA8C;AAAEF,QAAAA,QAAQ,EAARA,QAAF;AAAYF,QAAAA,KAAK,EAALA;AAAZ,OAA9C;AACD,KARkB;;AAAA,UAUnBK,cAVmB,GAUF;AAAA,UAAGN,IAAH,QAAGA,IAAH;AAAA,aACf,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKD,eAAL,CAAqBC,IAArB,CAAN;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACc,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEd,MAAM,CAACe,eAArB;AAAsC,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAET,IAAI,CAACU;AAAZ,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCX,IAAI,CAACE,IAA1C,CAFF,CADF,CADe;AAAA,KAVE;;AAAA;AAElB;;;;WAiBD,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACmB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACA,QAAA,UAAU,EAAE,CADZ;AAEE,QAAA,IAAI,EAAElB,UAFR;AAGE,QAAA,UAAU,EAAE,KAAKY,cAHnB;AAIE,QAAA,YAAY,EAAE,sBAAAN,IAAI;AAAA,sBAAOA,IAAI,CAACa,EAAZ;AAAA,SAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;;;EAxC2CrB,KAAK,CAACsB,S;;AAA/BjB,gB,CACZkB,iB,GAAqB;AAAA,MAAGX,UAAH,SAAGA,UAAH;AAAA,SAAqB;AAC/CH,IAAAA,KAAK,EAAE,MADwC;AAE/Ce,IAAAA,UAAU,EAAE;AAAA,aAAM,oBAAC,SAAD;AAClB,QAAA,OAAO,EAAE,mBAAM;AACbZ,UAAAA,UAAU,CAACa,UAAX;AACD,SAHiB;AAAA,gBAHDpB,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA;AAFmC,GAArB;AAAA,C;;SADTA,gB","sourcesContent":["import React from 'react';\r\nimport {\r\n  FlatList,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableHighlight\r\n} from 'react-native';\r\nimport styles from './styles';\r\nimport { categories } from '../../data/dataArrays';\r\nimport MenuImage from '../../components/MenuImage/MenuImage';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\n\r\nexport default class CategoriesScreen extends React.Component {\r\n  static navigationOptions  = ({ navigation }) => ({\r\n    title: 'Home',\r\n    headerLeft: () => <MenuImage\r\n    onPress={() => {\r\n      navigation.openDrawer();\r\n    }}\r\n  />\r\n  });\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onPressCategory = item => {\r\n    const title = item.name;\r\n    const category = item;\r\n    this.props.navigation.navigate('RecipesList', { category, title });\r\n  };\r\n\r\n  renderCategory = ({ item }) => (\r\n    <TouchableOpacity onPress={() => this.onPressCategory(item)}>\r\n      <View style={styles.categoriesItemContainer}>\r\n        <Image style={styles.categoriesPhoto} source={{ uri: item.photo_url }} />\r\n        <Text style={styles.categoriesName}>{item.name}</Text> \r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.view}>\r\n        <FlatList\r\n        numColumns={2}\r\n          data={categories}\r\n          renderItem={this.renderCategory}\r\n          keyExtractor={item => `${item.id}`}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}